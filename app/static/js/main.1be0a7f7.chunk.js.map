{"version":3,"sources":["components/header/index.js","components/server_table/add_button/index.js","components/server_table/delete_button/index.js","components/server_table/index.js","pages/home/index.js","components/index_menu/index.js","components/container_info/index.js","components/container_table/one_container_table/one_container_action_button/index.js","components/container_table/one_container_table/one_container_inspect/index.js","components/container_table/one_container_table/index.js","components/container_create/image_select/index.js","components/container_create/mutiple_switch/index.js","components/container_create/network_select/index.js","components/container_create/ports_choose/index.js","components/container_create/index.js","components/image_table/one_server_image/add_button/index.js","components/image_table/one_server_image/delete_button/index.js","components/image_table/one_server_image/image_inspect/index.js","components/image_table/one_server_image/index.js","components/network_table/one_network/delete_button/index.js","components/network_table/one_network/network_inspect/index.js","components/network_table/one_network/index.js","components/network_create/network_type_option/index.js","components/network_create/index.js","components/index_data/index_cpu/index.js","components/index_data/index_memory/index.js","components/index_data/index_swap/index.js","components/index_data/index_network/index.js","components/index_data/index_container/index.js","components/index_data/index_image/index.js","components/index_data/index_volume/index.js","components/index_data/index.js","components/server_info/index.js","components/server_psw/index.js","components/volume_table/delete_button/index.js","components/volume_table/index.js","pages/index/index.js","components/login_form/index.js","pages/login/index.js","components/user_menu/index.js","components/user_info/delete_button/index.js","components/user_info/index.js","components/user_create/index.js","components/user_change/index.js","pages/user/index.js","components/welcome/welcome_1/index.js","components/welcome/welcome_2/index.js","components/welcome/welcome_3/index.js","components/welcome/welcome_4/index.js","pages/welcome/index.js","pages/about/index.js","router/index.js","index.js"],"names":["Header","AllHeader","props","state","username","ifadmin","this","fetch","axios","post","api","then","data","window","location","reload","message","info","setState","className","justify","theme","mode","defaultSelectedKeys","number","style","lineHeight","Item","key","to","align","overlay","Divider","onClick","logout","size","type","DownOutlined","icon","UserOutlined","React","Component","ServerAddButton","showModal","visible","handleOk","submit_input","handleCancel","handleInput_server_type","e","input_server_type","target","value","handleInput_server_ip","input_server_ip","handleInput_server_name","input_server_name","handleInput_server_sship","input_server_ssh_ip","loading","server_user_input","server_psw_input","server_ip","server_name","server_type","server_ssh_ip","server_user","server_psw","notification","open","description","SmileOutlined","color","catch","err","error","onFresh","shape","DatabaseOutlined","title","onOk","onCancel","footer","Group","onChange","prefix","ApiTwoTone","placeholder","EditTwoTone","defaultValue","buttonStyle","Button","width","marginLeft","DatabaseTwoTone","handleServer_user_input","ContactsTwoTone","handleServer_psw_input","EyeInvisibleTwoTone","ServerDeleteButton","server_id","placement","disabled","onConfirm","delete_server","okText","cancelText","DeleteOutlined","danger","ServerTable","columns","dataIndex","render","text","record","server_status","marginRight","url","id","FullscreenOutlined","handleRefresh","d","i","d2","status","length","extra","rowKey","dataSource","ServerTableHook","useRouteMatch","HomePage","Content","Footer","padding","margin","orientation","gutter","span","showIcon","textAlign","rel","href","GithubOutlined","SubMenu","Sider","IndexSider","onOpenChange","openKeys","latestOpenKey","find","indexOf","rootSubmenuKeys","openKey","openOptions","selectOptins","defaultOpenKeys","ArrowLeftOutlined","fontSize","EyeOutlined","CloudServerOutlined","AppstoreOutlined","SaveOutlined","ApartmentOutlined","FolderOpenOutlined","IndexMenu","useParams","ContainerPageHeader","ghost","onBack","history","back","subTitle","ContainerInfo","get_args","active","ContainerOne","OneContainerActionButton","menu","handleMenuClick","onLoading","selected","container_id","ContainerInspect","showDrawer","onClose","success","base64","ip","user","psw","NetworkSettings","network_drive","Object","keys","Networks","closable","bordered","column","xxl","xl","lg","md","sm","xs","label","Id","Name","IPAddress","State","Status","Created","split","PlayCircleOutlined","handleStart","ReloadOutlined","handleRestart","PoweroffOutlined","handleStop","FundProjectionScreenOutlined","handelGotoTerminal","Config","Image","Ports","map","item","index","item2","index2","HostIp","HostPort","Cmd","Env","ContainerInspectButton","ContainerOneServerTable","onSelectChange","selectedRowKeys","show_ip","moment","format","get_net_work_name","rowSelection","hasSelected","handleLoading","pagination","defaultPageSize","ContainerOneServer","ContainerSearchImage","items","get_image_list","Option","labelInValue","notFoundContent","handleValue","dropdownRender","RepoTags","MultipleSwitch","items_value","input_key","input_value","onKeyChange","event","onValueChange","addItem","args","display","flexWrap","addonBefore","flex","cursor","PlusOutlined","ContainerSearchNetwork","PortsChoose","onCportChange","input_cport","onHipChange","input_hip","onHportChange","input_hport","onTypeChange","input_type","onSelectedChange","temp_list","one_key","JSON","parse","items2","TabPane","ContainerCreatePage","container_name_input","image_name_input","ports","ports2","command_input","entrypotin_input","user_input","ifTty","ifInteractive","network_name_input","hostname","network_ip","env","value1","value2","temp_dict","temp_dict2","network_config","content","duration","image","name","connect_port","export_port","cmd","entrypoint","Tty","interactive","network_model","setTimeout","handleContainer_name_input","handleImage_name_input","handlePorts","defaultActiveKey","tab","SlidersOutlined","handleCommand_input","handleEntrypotin_input","handleUser_input","handleIfTty","handleIfInteractive","handleNetwork_name_input","handleHostname","handleNetwork_ip","DropboxOutlined","handleEvn","BarcodeOutlined","handleLabel","BarChartOutlined","min","max","step","handle_send","ContainerCreate","ImageAddButton","send_message","input_image_name","image_name","DownloadOutlined","confirmLoading","handleInput_image_name","ImageDeleteButton","image_id","delete_image","ImageInspect","DockerVersion","Architecture","Os","RootFS","Layers","ImageOneServer","ImagePageHeader","ImageOneServerTable","ellipsis","marginBottom","NetworkDeleteButton","network_id","delete_network","NetworkInspect","network_name","Driver","IPAM","Gateway","Subnet","NetworkOneServer","NetworkPageHeader","NetworlOneServerTable","NetworkTypeOption","NetworkCreatePage","network_type_input","network_type_option_input","network_subnet_input","network_iprange_input","network_gateway_input","network_label_input","network_macvlan_drive_input","network_type_option_input_new","subnet","ip_range","gateway","option","handleNetwork_type_input","handleNetwork_type_option_input","handleNetwork_macvlan_drive_input","handleNetwork_subnet_input","handleNetwork_iprange_input","handleNetwork_gateway_input","handleNetwork_label_input","UploadOutlined","handleUpload","NetworkCreate","IndexCpuData","used","cpu","cpu_used","cpu_number","height","suffix","QrcodeOutlined","IndexMemoryData","memory","toFixed","total","percent","PieChartOutlined","HddOutlined","IndexSwapData","memory_swap","IndexNetworkData","receive","network","send","time","last_receive","last_send","last_time","download","upload","download_unit","upload_unit","precision","valueStyle","ArrowDownOutlined","ArrowUpOutlined","Paragraph","IndexContainerData","running","Containers","spin","IndexImageData","Images","Size","IndexVolumeData","Volumes","UsageData","IndexData","IndexDataControl","free","data_docker","interval","setInterval","fetch_docker","clearInterval","data2","ServerInfo","ServerInfoShow","str","onChangeSsh","ssh","server_ssh","data1","OSType","mem","MemTotal","editable","NCPU","KernelVersion","OperatingSystem","ID","Version","BuildTime","ApiVersion","Arch","GoVersion","ServerPsw","ServerPswShow","onChangeUser","warning","onChangePsw","copyable","VolumeDeleteButton","free_size","SpaceReclaimed","delete_volume","VolumePageHeader","VolumeOneServer","VolumeOneServerTable","fresh_table","Index","exact","path","minHeight","LoginForm","layout","labelCol","wrapperCol","tailLayout","offset","values","password","Login","boxShadow","initialValues","remember","onFinish","onFinishFailed","rules","required","Password","LockOutlined","valuePropName","htmlType","confirm","welcome","login","replace","ExclamationCircleOutlined","showConfirm","background","backgroundSize","UserMenu","UserMenuFunc","UserDeleteButton","user_id","delete_user","UserInfo","UserInfoTable","UserCreate","send_regist","dependencies","hasFeedback","getFieldValue","validator","rule","Promise","reject","resolve","UserChangeMount","UserChange","input","options","suffixIcon","SearchOutlined","showSearch","defaultActiveFirstOption","showArrow","filterOption","onSearch","fetch_search","handleChange","UserPage","welcome_1","onNext","WelcomeSignup","ifUser","aaa","welcome_2","welcome_3","WelcomeBindServer","server_ip_input","server_name_input","server_type_input","handleServer_ip_input","handleServer_name_input","handleServer_type_input","send_args","welcome_4","WelcomePage","current","steps","Step","next","AboutPage","version","get","SlidersTwoTone","App","isAuthenticated","isSend","isLogin","PrivateRoute","authenticate","children","rest","pathname","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1be0a7f7.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Link,\n} from \"react-router-dom\";\n\nimport './index.css';\nimport { Layout, Menu, Row, Col, Dropdown, Avatar, message, Button } from 'antd';\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Header, } = Layout;\n\n\nexport class AllHeader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            ifadmin: \"0\"\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    logout() {\n        axios.post('/api',\n            {\n                api: 'logout',\n\n            }).then(data => {\n                window.location.reload();\n                message.info(\"登出成功！\");\n            });\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'check_login',\n\n            }).then(data => {\n                this.setState({\n                    username: data.data.username,\n                    ifadmin: data.data.ifadmin\n                })\n            });\n    }\n\n    render() {\n        const { username, ifadmin } = this.state\n        return (\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Row justify=\"space-between\">\n                    <Col>\n                        <Menu\n                            theme=\"dark\"\n                            mode=\"horizontal\"\n                            defaultSelectedKeys={[this.props.number]}\n                            style={{ lineHeight: '64px' }}\n                        >\n                            <Menu.Item key=\"1\">\n                                <Link to=\"/\">功能操作</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\">\n                                <Link to=\"/user\">用户管理</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"3\">\n                                <Link to=\"/about\">关于</Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Col>\n                    <Col>\n                        <div align=\"right\">\n                            <Dropdown overlay={\n                                <Menu>\n                                    <Menu.Item>\n                                        身份: {ifadmin === \"100\" ? \"管理员\" : \"普通用户\"}\n                                    </Menu.Item>\n                                    <Menu.Divider />\n                                    <Menu.Item>\n                                        <div align=\"center\" onClick={() => this.logout()}>\n                                            登出\n                                    </div>\n                                    </Menu.Item>\n                                </Menu>\n                            }>\n                                <Button size=\"large\" type=\"link\">\n                                    {username} <DownOutlined />\n                                </Button>\n                            </Dropdown>\n                            <Avatar icon={<UserOutlined />} />\n                        </div>\n                    </Col>\n                </Row>\n            </Header>\n        )\n    }\n}","import { ApiTwoTone, ContactsTwoTone, DatabaseOutlined, DatabaseTwoTone, EditTwoTone, EyeInvisibleTwoTone, SmileOutlined } from '@ant-design/icons';\nimport { Button, Input, Modal, notification, Radio,message } from 'antd';\n\nimport axios from 'axios';\nimport React from 'react';\n\n\nexport default class ServerAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            visible: false,\n\n            input_server_ip: \"\",\n            input_server_name: \"\",\n            input_server_type: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n            input_server_ssh_ip: \"\",\n        }\n    }\n\n    async submit_input() {\n        const { input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input, input_server_ssh_ip } = this.state\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_add',\n                server_ip: input_server_ip,\n                server_name: input_server_name,\n                server_type: input_server_type,\n                server_ssh_ip: input_server_ssh_ip,\n                server_user: server_user_input,\n                server_psw: server_psw_input\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    input_server_ip: \"\",\n                    input_server_name: \"\",\n                    input_server_type: \"http\",\n                    server_user_input: \"root\",\n                    server_psw_input: \"\",\n                    input_server_ssh_ip: \"\",\n                    visible: false\n                })\n                notification.open({\n                    message: '创建成功！',\n                    description:\n                        `节点:${input_server_name}创建成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            }).catch(err=>{\n                this.setState({\n                    loading: false,\n                });\n                message.error(\"与服务器通讯失败！请检测输入是否正确\")\n            });\n        this.props.onFresh();\n    }\n\n    // =================================================\n    // 监听对话框\n    // =================================================\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.submit_input();\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n    // ====================================================\n\n    // ==========================================\n    // 监听输入框\n    // ==========================================\n    handleInput_server_type = (e) => {\n        this.setState({\n            input_server_type: e.target.value\n        })\n    }\n\n    handleInput_server_ip = (e) => {\n        this.setState({\n            input_server_ip: e.target.value\n        })\n    }\n\n    handleInput_server_name = (e) => {\n        this.setState({\n            input_server_name: e.target.value\n        })\n    }\n\n    handleInput_server_sship = (e) => {\n        this.setState({\n            input_server_ssh_ip: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    // ====================================================\n\n    render() {\n        const { loading, visible, input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input, input_server_ssh_ip } = this.state\n        return (\n            <div>\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DatabaseOutlined />}\n                    onClick={this.showModal}\n                >\n                    添加新的服务器节点\n            </Button>\n                <Modal\n                    visible={visible}\n                    title=\"添加服务器\"\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={this.handleCancel}>\n                            返回\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n                            提交\n                        </Button>,\n                    ]}\n                >\n                    <Input.Group>\n                        服务器ip或域名:<Input value={input_server_ip} onChange={this.handleInput_server_ip} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                        服务器名字:<Input value={input_server_name} onChange={this.handleInput_server_name} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                    </Input.Group>\n                    <br />\n                    连接类型:\n                    <Radio.Group onChange={this.handleInput_server_type} defaultValue={input_server_type} buttonStyle=\"solid\">\n                        <Radio.Button value=\"http\">HTTP</Radio.Button>\n                        <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                    </Radio.Group>\n                    <br /><br />\n                    <Input.Group>\n                        ssh服务IP:<Input onChange={(e) => this.handleInput_server_sship(e)} value={input_server_ssh_ip} style={{ width: 280, marginLeft: 10 }} prefix={<DatabaseTwoTone />} placeholder=\"127.0.0.1:22\" />\n                        <br /><br />\n                        服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                        <br /><br />\n                        服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                    </Input.Group>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { Button, Popconfirm, notification, Tooltip } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ServerDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_server() {\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_delete',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                })\n                notification.open({\n                    message: '删除成功！',\n                    description:\n                        `节点:${this.props.server_id}删除成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <Tooltip placement=\"top\" title=\"删除该服务器\">\n                <Popconfirm disabled={this.props.disabled} placement=\"right\" title=\"您确定要删除该节点吗\" onConfirm={() => this.delete_server()} okText=\"是\" cancelText=\"否\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} danger disabled={this.props.disabled} />\n                </Popconfirm>\n            </Tooltip>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom'\n\nimport './index.css';\nimport { Table, Card, Tag, Button, Tooltip } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport ServerAddButton from './add_button'\nimport ServerDeleteButton from './delete_button'\n\nexport class ServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '节点名字',\n                dataIndex: 'server_name',\n                key: 'name',\n            },\n            {\n                title: '节点ip',\n                dataIndex: 'server_ip',\n                key: 'age',\n            },\n            {\n                title: '状态',\n                key: 'server_status',\n                render: (text, record) => {\n                    if (record.server_status === 0) {\n                        return (<Tag color=\"green\">在线</Tag>)\n                    } else {\n                        return (<Tag color=\"red\">离线</Tag>)\n                    }\n                }\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => {\n                    if (record.server_status === 0) {\n                        return (\n                            <div>\n                                <span style={{ marginRight: 8 }}>\n                                    <Tooltip placement=\"top\" title=\"进入该服务器\">\n                                        <Link to={`${this.props.url}control/${record.id}`} >\n                                            <Button type=\"primary\" shape=\"circle\" icon={<FullscreenOutlined />} />\n                                        </Link>\n                                    </Tooltip>\n                                </span>\n                                <span style={{ marginRight: 8 }}>\n                                    <ServerDeleteButton server_id={record.id} onFresh={() => this.handleRefresh()} />\n                                </span>\n                            </div>\n                        );\n                    } else {\n                        return (\n                            <div>\n                                <span style={{ marginRight: 8 }}>\n                                    <Tooltip placement=\"top\" title=\"进入该服务器\">\n                                        <Link to={`${this.props.url}control/${record.id}`} >\n                                            <Button type=\"primary\" shape=\"circle\" icon={<FullscreenOutlined />} disabled />\n                                        </Link>\n                                    </Tooltip>\n                                </span>\n                                <span style={{ marginRight: 8 }}>\n                                    <ServerDeleteButton server_id={record.id} onFresh={() => this.handleRefresh()} disabled={true} />\n                                </span>\n                            </div>\n                        );\n                    }\n                },\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'server_info',\n            }).then(d => {\n                this.setState({\n                    data: d.data.data,\n                    loading: false,\n                })\n                for (let i = 0; i < d.data.data.length; i++) {\n                    axios.post('/api',\n                        {\n                            api: 'server_check',\n                            server_id: d.data.data[i].id,\n                        }).then(d2 => {\n                            const { data } = this.state;\n                            data[i][\"server_status\"] = d2.data.status\n                            this.setState({\n                                data: data,\n                            })\n                        });\n                }\n            });\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"服务器一览\" extra={<ServerAddButton onFresh={() => this.handleRefresh()} />} >\n                    <Table loading={loading} rowKey={record => record.id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nexport default function ServerTableHook() {\n    let { url } = useRouteMatch();\n\n    return (\n        <ServerTable url={url} />\n    );\n}","import { GithubOutlined } from '@ant-design/icons';\nimport { Alert, Breadcrumb, Col, Divider, Layout, Row } from 'antd';\nimport React from 'react';\nimport { AllHeader } from '../../components/header';\nimport ServerTableHook from '../../components/server_table';\nimport './index.css';\n\n\n\nexport default class HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    render() {\n        const { Content, Footer } = Layout;\n        return (\n            <Layout className=\"layout\">\n                <AllHeader number={'1'} />\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>主页</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div className=\"site-layout-content\">\n                        <Divider orientation=\"left\">系统公告</Divider>\n                        <Row justify=\"center\" gutter={[16, 16]}>\n                            <Col span={24} >\n                                <Alert\n                                    message=\"欢迎来到Docker容器可视化平台\"\n                                    description=\"请选择一个服务器来进行操作。您也可以添加新的服务器或者删除一个服务器\"\n                                    type=\"info\"\n                                    showIcon\n                                />\n                            </Col>\n                        </Row>\n                        <Divider orientation=\"left\">进入服务器</Divider>\n                        <ServerTableHook />\n                        <Divider />\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}><a rel=\"noopener noreferrer\" href=\"https://github.com/ChoungJX/doweb_server\" target=\"_blank\"><GithubOutlined /></a> ChoungJX毕业作品</Footer>\n            </Layout>\n        )\n    }\n}","import React from 'react';\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\n\nimport { AppstoreOutlined, CloudServerOutlined, EyeOutlined, SaveOutlined, ApartmentOutlined, ArrowLeftOutlined, FolderOpenOutlined } from '@ant-design/icons';\nimport { Layout, Menu, } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\n\n\nexport class IndexSider extends React.Component {\n    // submenu keys of first level\n\n    constructor(props) {\n        super(props);\n        this.rootSubmenuKeys = ['sub1', 'sub2', 'sub3', 'sub4', 'sub5'];\n        this.state = {\n            openKeys: [this.props.openKey],\n            openOptions: [this.props.selectOptins],\n        };\n    }\n\n\n\n\n    onOpenChange = openKeys => {\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            this.setState({ openKeys });\n        } else {\n            this.setState({\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={this.state.openOptions}\n                    onOpenChange={this.onOpenChange}\n                    style={{ width: 200 }}\n                    defaultOpenKeys={['sub1', 'sub2', 'sub3', 'sub4', 'sub5', 'sub6']}\n                >\n                    <Menu.Item key=\"back\">\n                        <ArrowLeftOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/`}>回到主页</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"0\">\n                        <EyeOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/control/${this.props.server_id}`}>全局总览</Link>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <CloudServerOutlined style={{ fontSize: '21px' }} />\n                                <span>服务器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={`/control/${this.props.server_id}/serverinfo`}>服务器总览</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={`/control/${this.props.server_id}/server_secret`}>服务器密钥管理</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub2\"\n                        title={\n                            <span>\n                                <AppstoreOutlined style={{ fontSize: '21px' }} />\n                                <span>容器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"5\">\n                            <Link to={`/control/${this.props.server_id}/containerinfo`}>容器总览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub4\"\n                        title={\n                            <span>\n                                <SaveOutlined style={{ fontSize: '21px' }} />\n                                <span>镜像管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"9\">\n                            <Link to={`/control/${this.props.server_id}/image`}>镜像列表</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub5\"\n                        title={\n                            <span>\n                                <ApartmentOutlined style={{ fontSize: '21px' }} />\n                                <span>网络管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"10\">\n                            <Link to={`/control/${this.props.server_id}/network`}>网卡一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub6\"\n                        title={\n                            <span>\n                                <FolderOpenOutlined style={{ fontSize: '21px' }} />\n                                <span>卷管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"11\">\n                            <Link to={`/control/${this.props.server_id}/volume`}>卷一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default function IndexMenu(props) {\n    let { server_id } = useParams();\n\n    return (<IndexSider server_id={server_id} openKey={props.openKey} selectOptins={props.selectOptins} />)\n}","import { PageHeader, Skeleton } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\n\n\n\nfunction ContainerPageHeader() {\n    let { id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"容器详情\"\n            subTitle={`容器:${id}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport class ContainerInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: '',\n        }\n        this.get_args();\n    }\n\n    get_args() {\n        axios.post('/api',\n            {\n                api: 'one_container_info',\n                id: this.props.id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    data: data.data,\n                });\n            });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Skeleton active loading={this.state.loading}>\n                    {this.state.data.data}\n                </Skeleton>\n            </div>\n        );\n    }\n}\n\nexport function ContainerOne() {\n    let { server_id, id } = useParams();\n\n    return (\n        <ContainerInfo server_id={server_id} id={id} />\n    )\n}","import { DownOutlined, SmileOutlined } from '@ant-design/icons';\nimport { Button, Dropdown, Menu, message, notification } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nexport default class OneContainerActionButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.menu = (\n            <Menu onClick={(e) => this.handleMenuClick(e)}>\n                <Menu.Item key=\"0\">\n                    <Link to={`${this.props.url}/create`}>创建新容器</Link>\n                </Menu.Item>\n                <Menu.Item key=\"1\">重启选中容器</Menu.Item>\n                <Menu.Item key=\"2\">停止选中容器</Menu.Item>\n                <Menu.Item key=\"3\">删除选中容器</Menu.Item>\n                <Menu.Item key=\"4\">删除已停止容器</Menu.Item>\n            </Menu>\n        );\n    }\n\n    async handleMenuClick(e) {\n        this.props.onLoading();\n        if (e.key === '4') {\n            await axios.post('/api',\n                {\n                    api: 'container_delete_stoped',\n                    server_id: this.props.server_id,\n                }).then(data => {\n                    //console.log(data.data);\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `容器删除成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                });\n            this.props.onFresh();\n            return;\n        } else if (e.key === '0') {\n            this.props.onFresh();\n            return;\n        }\n        if (this.props.selected.length === 0) {\n            message.error('您没有选中任何容器');\n            this.props.onFresh();\n            return;\n        }\n        if (e.key === '1') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_restart',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        //console.log(data.data);\n                        notification.open({\n                            message: '重启成功！',\n                            description:\n                                `容器:${this.props.selected[i]}重启成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '2') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_stop',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        //console.log(data.data);\n                        notification.open({\n                            message: '停止成功！',\n                            description:\n                                `容器:${this.props.selected[i]}停止成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '3') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_delete',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        //console.log(data.data);\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `容器:${this.props.selected[i]}删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        }\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <div>\n                <Dropdown overlay={this.menu}>\n                    <Button disabled={this.props.disabled} loading={this.props.loading}>\n                        容器操作 <DownOutlined />\n                    </Button>\n                </Dropdown>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { Drawer, Button, Descriptions, Badge, Tooltip, Skeleton, message } from 'antd';\nimport { EyeOutlined, PlayCircleOutlined, ReloadOutlined, PoweroffOutlined, FundProjectionScreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\n\n\nexport default class ContainerInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_inspect',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    handleStart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_start',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                //console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            }).catch(err => {\n                message.error(\"请求操作失败！请稍后再试\")\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    handleRestart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_restart',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                //console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            }).catch(err => {\n                message.error(\"请求操作失败！请稍后再试\")\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    handleStop() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_stop',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                //console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            }).catch(err => {\n                message.error(\"请求操作失败！请稍后再试\")\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    handelGotoTerminal() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n                base64: true,\n            }).then(data => {\n                //console.log(data.data.data)\n                let ip = data.data.data.ip;\n                let user = data.data.data.user;\n                let psw = data.data.data.psw;\n\n                window.open(`/ssh?hostname=${ip}&username=${user}&password=${psw}&command=docker exec -it ${this.props.container_id} /bin/bash`);\n                this.setState({\n                    loading: false,\n                })\n            }).catch(err => {\n                message.error(\"请求操作失败！请稍后再试\")\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data, loading } = this.state;\n        if (data.NetworkSettings) {\n            const network_drive = Object.keys(data.NetworkSettings.Networks)[0]\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={840}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\"> {data.Name ? data.Name : \"\"} </Descriptions.Item>\n                            <Descriptions.Item label=\"网络信息\">{`${data.NetworkSettings.Networks[`${network_drive}`].IPAddress}(${network_drive})`}</Descriptions.Item>\n                            <Descriptions.Item label=\"状态\">\n                                {data.State ? data.State.Status === \"running\" ? <Badge status=\"processing\" text={data.State.Status} /> : <Badge status=\"error\" text={data.State.Status} /> : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\"> {data.Created.split(\".\")[0]} </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"操作\">\n                                <Tooltip placement=\"top\" title=\"启动容器\">\n                                    <Button loading={loading} type=\"primary\" shape=\"circle\" icon={<PlayCircleOutlined />} size=\"large\" onClick={() => this.handleStart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"重启容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<ReloadOutlined />} size=\"large\" onClick={() => this.handleRestart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"结束容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<PoweroffOutlined />} size=\"large\" danger onClick={() => this.handleStop()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"启动终端\">\n                                    {data.State.Status === \"running\" ?\n                                        <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" onClick={() => this.handelGotoTerminal()} />\n                                        :\n                                        <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" disabled />\n                                    }\n\n                                </Tooltip>\n                            </Descriptions.Item>\n                        </Descriptions>\n                        <br /><br />\n                        <Descriptions title=\"详细参数\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"镜像\">{data.Config.Image}</Descriptions.Item>\n                            <Descriptions.Item label=\"端口映射信息\">\n                                {data.NetworkSettings.Ports ? Object.keys(data.NetworkSettings.Ports).map((item, index) =>\n                                    data.NetworkSettings.Ports[`${item}`] ? data.NetworkSettings.Ports[`${item}`].map((item2, index2) =>\n                                        <div>\n                                            {`${item2.HostIp}:${item2.HostPort} => ${item}`}\n                                            <br /><br />\n                                        </div>\n                                    ) : item\n                                ) : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"启动参数\">\n                                {data.Config.Cmd ? data.Config.Cmd.map((item, index) =>\n                                    item\n                                ) : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"环境变量\">\n                                {\n                                    data.Config.Env.map((item, index) =>\n                                        <div key={index}>\n                                            {item}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                        <br /><br />\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom'\n\nimport { Table, Tag, PageHeader, Card } from 'antd';\n\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport OneContainerActionButton from './one_container_action_button'\nimport ContainerInspect from './one_container_inspect'\n\nfunction ContainerPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"容器详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nfunction ContainerInspectButton(props) {\n    let { server_id } = useParams();\n\n    return (\n        <ContainerInspect server_id={server_id} container_id={props.container_id} onFresh={() => props.onFresh()} />\n    )\n}\n\nclass ContainerOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Names',\n                key: 'name',\n                render:(text,record)=>{\n                    return(\n                        <div>\n                            {text.map((item,index)=>\n                                (<div key={index}>\n                                    {item.split(\"/\")[1]}\n                                </div>)\n                            )}\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '对应镜像',\n                key: 'image',\n                render: (text, record) => (\n                    record.Image\n                )\n            },\n            {\n                title: '容器ip',\n                key: 'ip',\n                render: (text, record) => this.show_ip(text, record)\n            },\n            {\n                title: '状态',\n                key: 'stauts',\n                render: (text, record) => {\n                    if (record.State === \"running\") {\n                        return (<Tag color=\"cyan\">{record.State}</Tag>);\n                    } else {\n                        return (<Tag color=\"red\">{record.State}</Tag>)\n                    }\n                }\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <span>\n                        <ContainerInspectButton container_id={record.Id} onFresh={() => this.handleRefresh()} />\n                    </span>\n                ),\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n            loading: false\n        })\n    }\n\n    handleLoading() {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    show_ip(text, record) {\n        let get_net_work_name = Object.keys(record.NetworkSettings.Networks)[0]\n        return (\n            record.NetworkSettings.Networks[get_net_work_name].IPAddress\n        )\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"容器一览\" extra={<OneContainerActionButton disabled={!hasSelected} loading={loading} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} onLoading={() => this.handleLoading()} />} >\n                    <Table pagination={{ defaultPageSize: 5 }} loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\n\nexport default function ContainerOneServer() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <ContainerPageHeader />\n            <ContainerOneServerTable server_id={server_id} url={url} />\n        </div>\n    )\n}","import { Select, Spin } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\n\n\n\n\nexport default class ContainerSearchImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_id: this.props.server_id,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_id } = this.state\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_id: server_id,\n            }).then(data => {\n                //console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.RepoTags}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import React from 'react';\n\nimport { Select, Divider, Input, Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class MultipleSwitch extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n\n    addItem = () => {\n        const { items, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <Button type=\"link\"\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\n\nimport { Select, Spin } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class ContainerSearchNetwork extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_id: this.props.server_id,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_id } = this.state\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_id: server_id,\n            }).then(data => {\n                //console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.Name}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import { PlusOutlined } from '@ant-design/icons';\nimport { Divider, Input, Radio, Select, Button } from 'antd';\nimport React from 'react';\n\n\n\nexport default class PortsChoose extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            items_value: {},\n            items2: [],\n\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: '0.0.0.0',\n            input_hport: '',\n            selected: [],\n        };\n    }\n\n    onCportChange = event => {\n        this.setState({\n            input_cport: event.target.value,\n        });\n    }\n\n    onHipChange = event => {\n        this.setState({\n            input_hip: event.target.value,\n        });\n    }\n\n    onHportChange = event => {\n        this.setState({\n            input_hport: event.target.value,\n        });\n    }\n\n    onTypeChange = value => {\n        this.setState({\n            input_type: value.target.value\n        })\n    }\n\n    onSelectedChange = value => {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            let one_key = Object.keys(JSON.parse(value[i]))[0]\n            temp_list = [...temp_list, `{\"${one_key}\":{}}`]\n        }\n        this.props.onChange(value, temp_list)\n    }\n\n    addItem = () => {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_cport}/${input_type}\":[{\"HostIp\":\"${input_hip}\",\"HostPort\":\"${input_hport}\"}]}`],\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: \"0.0.0.0\",\n            input_hport: \"\",\n        });\n    };\n\n    render() {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '320px' }}\n                placeholder={this.props.args}\n                onChange={this.onSelectedChange}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            容器端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_cport} placeholder=\"443\" onChange={this.onCportChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            转发类型:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Radio.Group value={input_type} buttonStyle=\"solid\" onChange={this.onTypeChange}>\n                                <Radio.Button value=\"tcp\">TCP</Radio.Button>\n                                <Radio.Button value=\"udp\">UDP</Radio.Button>\n                            </Radio.Group>\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机IP:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hip} placeholder=\"0.0.0.0\" style={{ flex: 'auto' }} onChange={this.onHipChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hport} placeholder=\"443\" style={{ flex: 'auto' }} onChange={this.onHportChange} />\n                        </div>\n                        <div align=\"right\">\n                            <Button type=\"link\"\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import { ApartmentOutlined, BarChartOutlined, BarcodeOutlined, DropboxOutlined, SlidersOutlined, SmileOutlined } from '@ant-design/icons';\nimport { Button, Divider, Form, Input, InputNumber, message, notification, PageHeader, Switch, Tabs } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport ContainerSearchImage from \"./image_select\";\nimport MultipleSwitch from './mutiple_switch';\nimport ContainerSearchNetwork from \"./network_select\";\nimport PortsChoose from './ports_choose';\n\n\n\nconst { TabPane } = Tabs;\n\nfunction ContainerPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建容器\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass ContainerCreatePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n\n            container_name_input: \"\",\n            image_name_input: \"\",\n            ports: {},\n            ports2: {},\n\n            command_input: \"\",\n            entrypotin_input: \"\",\n            user_input: \"\",\n            ifTty: false,\n            ifInteractive: false,\n\n            network_name_input: \"\",\n            hostname: \"\",\n            network_ip: \"\",\n\n            env: [],\n            label: [],\n        }\n    }\n\n    // =======================获取输入=======================\n    handleContainer_name_input(e) {\n        this.setState({\n            container_name_input: e.target.value\n        })\n    }\n\n    handleImage_name_input(value) {\n        this.setState({\n            image_name_input: value.label[0]\n        })\n    }\n\n    handlePorts(value1, value2) {\n        let temp_dict = {};\n        let temp_dict2 = {}\n        for (let i = 0; i < value1.length; i++) {\n            temp_dict = { ...temp_dict, ...JSON.parse(value1[i]) }\n        }\n        for (let i = 0; i < value2.length; i++) {\n            temp_dict2 = { ...temp_dict2, ...JSON.parse(value2[i]) }\n        }\n        this.setState({\n            ports: temp_dict,\n            ports2: temp_dict2,\n        })\n    }\n\n    handleCommand_input(e) {\n        this.setState({\n            command_input: e.target.value\n        })\n    }\n\n    handleEntrypotin_input(e) {\n        this.setState({\n            entrypotin_input: e.target.value\n        })\n    }\n\n    handleUser_input(e) {\n        this.setState({\n            user_input: e.target.value\n        })\n    }\n\n    handleIfTty() {\n        const { ifTty } = this.state;\n        if (ifTty) {\n            this.setState({\n                ifTty: false\n            })\n        } else {\n            this.setState({\n                ifTty: true\n            })\n        }\n    }\n\n    handleIfInteractive() {\n        const { ifInteractive } = this.state;\n        if (ifInteractive) {\n            this.setState({\n                ifInteractive: false\n            })\n        } else {\n            this.setState({\n                ifInteractive: true\n            })\n        }\n    }\n\n\n\n    handleNetwork_name_input(value) {\n        this.setState({\n            network_name_input: value.label\n        })\n    }\n\n    handleHostname(e) {\n        this.setState({\n            hostname: e.target.value\n        })\n    }\n\n    handleNetwork_ip(e) {\n        this.setState({\n            network_ip: e.target.value\n        })\n    }\n\n    handleEvn(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            env: temp_list,\n        })\n    }\n\n    handleLabel(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            label: temp_list,\n        })\n    }\n\n    test() {\n        //console.log(this.state);\n    }\n    // =======================================================\n\n    async handle_send() {\n        const {\n            container_name_input,\n            image_name_input,\n            ports,\n            ports2,\n            command_input,\n            entrypotin_input,\n            user_input,\n            ifTty,\n            ifInteractive,\n            network_name_input,\n            hostname,\n            network_ip,\n            env,\n            label\n        } = this.state;\n\n        let aaa = hostname;\n        aaa = env;\n        aaa = label;//暂时没用\n\n        if (image_name_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            return;\n        }\n\n        let network_config = '';\n        if (network_name_input !== \"\") {\n            network_config = `{\"${network_name_input}\":{\"IPAMConfig\":{\"IPv4Address\":\"${network_ip}\"}}}`;\n            network_config = JSON.parse(network_config);\n        }\n\n        message.loading({ content: '容器创建中', key: 'updatable', duration: 0 });\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'container_add',\n                server_id: this.props.server_id,\n                image: image_name_input,\n                name: container_name_input,\n                connect_port: ports,\n                export_port: ports2,\n                cmd: command_input,\n                entrypoint: entrypotin_input,\n                user: user_input,\n                Tty: ifTty,\n                interactive: ifInteractive,\n                network_model: network_config,\n            }).then(data => {\n                this.setState({\n                    loading: false\n                })\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                //console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    message.loading({ content: '容器启动中', key: 'updatable', duration: 0 });\n                    axios.post('/api',\n                        {\n                            api: 'container_start',\n                            server_id: this.props.server_id,\n                            container_id: data.data.data.data.Id\n\n                        }).then(data => {\n                            //console.log(data.data.data)\n                            setTimeout(() => {\n                                message.success({ content: '容器启动成功！', key: 'updatable', duration: 2 });\n                            }, 1000);\n                            window.history.back();\n                        });\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            }).catch(err=>{\n                message.error(\"与服务器通讯失败！请稍后再试\")\n            });\n    }\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"container_name\"\n                    >\n                        <Input placeholder=\"为新容器起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleContainer_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">镜像选择</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"镜像\"\n                        name=\"image_name\"\n                    >\n                        <ContainerSearchImage server_id={this.props.server_id} onChange={value => this.handleImage_name_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">端口映射</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"规则设置\"\n                        name=\"ports\"\n                    >\n                        <PortsChoose onChange={(value1, value2) => this.handlePorts(value1, value2)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">高级设置(无特殊需求可以忽略)</Divider>\n                <Tabs defaultActiveKey=\"1\"  >\n                    <TabPane\n                        tab={\n                            <span>\n                                <SlidersOutlined />\n                                参数设置\n                            </span>\n                        }\n                        key=\"1\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"进入命令(cmd)\"\n                                    name=\"command\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleCommand_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"入口参数(entrypoint)\"\n                                    name=\"entrypoint\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleEntrypotin_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"设定运行用户\"\n                                    name=\"user\"\n                                >\n                                    <Input placeholder=\"root\" style={{ width: '450px' }} onChange={e => this.handleUser_input(e)} />\n                                </Form.Item>\n                            </Form>\n                            创建模拟终端(-t):<Switch onChange={() => this.handleIfTty()} style={{ marginLeft: 4, marginRight: 8 }} />\n                            |\n                            交互模式(-i):<Switch onChange={() => this.handleIfInteractive()} style={{ marginLeft: 4, marginRight: 8 }} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <ApartmentOutlined />\n                                网络设置\n                            </span>\n                        }\n                        key=\"2\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"网卡选择\"\n                                    name=\"network_drive\"\n                                >\n                                    <ContainerSearchNetwork server_id={this.props.server_id} onChange={value => this.handleNetwork_name_input(value)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"主机名(Hostname)\"\n                                    name=\"hostname\"\n                                >\n                                    <Input placeholder=\"hostname\" style={{ width: '450px' }} onChange={e => this.handleHostname(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"IP\"\n                                    name=\"network_ip\"\n                                >\n                                    <Input placeholder=\"172.99.99.99\" style={{ width: '450px' }} onChange={e => this.handleNetwork_ip(e)} />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <DropboxOutlined />\n                                环境变量\n                            </span>\n                        }\n                        key=\"3\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器设置环境变量\" onChange={value => this.handleEvn(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <BarcodeOutlined />\n                                标签设置\n                            </span>\n                        }\n                        key=\"4\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器添加自定义标签(可选)\" onChange={value => this.handleLabel(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <BarChartOutlined />\n                                资源分配\n                            </span>\n                        }\n                        key=\"5\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"CPU\"\n                                    name=\"cpu\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                            <Form>\n                                <Form.Item\n                                    label=\"Memeory\"\n                                    name=\"memeory\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                </Tabs>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" loading={loading} onClick={() => this.handle_send()}>\n                    提交\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function ContainerCreate() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ContainerCreatePage server_id={server_id} url={url} />\n        </div>\n    )\n}","import { DownloadOutlined, SmileOutlined } from '@ant-design/icons';\nimport { Button, Input, message, Modal, notification } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\n\n\n\nexport default class ImageAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n\n            input_image_name: \"\"\n        }\n    }\n\n    async send_message() {\n        const { input_image_name } = this.state;\n        this.setState({\n            loading: true,\n        })\n        message.loading({ content: '服务器下载中...', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'image_pull',\n                server_id: this.props.server_id,\n                image_name: input_image_name,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                //console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '下载成功！',\n                        description:\n                            `镜像:${input_image_name}下载成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        visible: false,\n                        loading: false,\n                        input_image_name: '',\n                    });\n                    this.props.onFresh();\n                } else {\n                    notification.open({\n                        message: '下载失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        loading: false,\n                    });\n                }\n\n            });\n    }\n\n    handleInput_image_name(e) {\n        this.setState({\n            input_image_name: e.target.value,\n        })\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.send_message();\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { input_image_name, loading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} onClick={this.showModal}>\n                    添加新镜像\n                </Button>\n                <Modal\n                    title=\"添加新镜像\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    confirmLoading={loading}\n                >\n                    <p>服务器将访问dockerhub搜索并下载镜像</p>\n                    <Input placeholder=\"请输入镜像名字\" addonBefore=\"docker.io\" onChange={(e) => this.handleInput_image_name(e)} value={input_image_name} />\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ImageDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_image() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'image_delele',\n                    server_id: this.props.server_id,\n                    image_id: this.props.selected[i],\n                }).then(data => {\n                    //console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `镜像删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_image()}\n            >\n                删除所选镜像\n            </Button>\n        );\n    }\n}","import { Button, Descriptions, Drawer, Skeleton, Tooltip } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\n\n\n\n\nexport default class ImageInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_inspect',\n                server_id: this.props.server_id,\n                image_id: this.props.image_id\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <Button type=\"link\" onClick={this.showDrawer}>{this.props.image_id}</Button>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={840}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\"><div>{data.RepoTags.map((item,index)=>\n                                <div>{item}<br /><br /></div>\n                            )}</div></Descriptions.Item>\n                            <Descriptions.Item label=\"Docker版本\">{data.DockerVersion}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"构建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item label=\"构建平台\">{data.Architecture}</Descriptions.Item>\n                            <Descriptions.Item label=\"适用系统\">{data.Os}</Descriptions.Item>\n                            <Descriptions.Item label=\"镜像结构\">\n                                {\n                                    data.RootFS.Layers.map((item, index) =>\n                                        <div key={index}>\n                                            {`${index}: ${item}`}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <Button type=\"link\" onClick={this.showDrawer}>{this.props.image_id}</Button>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import { Card, PageHeader, Table, Tag } from 'antd';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport React from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport ImageAddButton from './add_button';\nimport ImageDeleteButton from './delete_button';\nimport ImageInspect from './image_inspect';\n\n\n\n\nexport default function ImageOneServer(props) {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ImagePageHeader />\n            <ImageOneServerTable server_id={server_id} url={url} />\n        </div>\n    );\n}\n\nclass ImageOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: 'ID',\n                key: 'id',\n                width: '30%',\n                ellipsis: true,\n                render: (text, record) => (\n                    <ImageInspect image_id={record.Id} server_id={this.props.server_id} />\n                )\n            },\n            {\n                title: 'Tag',\n                key: 'tag',\n                render: (text, record) => (\n                    <span>\n                        {record.RepoTags.map((item,index)=>(\n                            <Tag key={index} color=\"#108ee9\">{item}</Tag>\n                        ))}\n                    </span>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"镜像一览\" extra={<ImageAddButton server_id={this.props.server_id} onFresh={() => this.handleRefresh()} />} >\n                    <div style={{ marginBottom: 16 }}>\n                        <ImageDeleteButton disabled={!hasSelected} loading={loading} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />\n                    </div>\n                    <Table pagination={{ defaultPageSize: 5 }} loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nfunction ImagePageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"镜像详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\n\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class NetworkDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_network() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'network_delete',\n                    server_id: this.props.server_id,\n                    network_id: this.props.selected[i],\n                }).then(data => {\n                    //console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `网络删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_network()}\n            >\n                删除所选网络\n            </Button>\n        );\n    }\n}","import React from 'react';\n\nimport { Drawer, Descriptions, Tooltip, Skeleton, Button } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class NetworkInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_inspect',\n                server_id: this.props.server_id,\n                network_id: this.props.network_id\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <Button type=\"link\" onClick={this.showDrawer}>{this.props.network_name}</Button>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\">{data.Name}</Descriptions.Item>\n                            <Descriptions.Item label=\"网络类型\">{data.Driver}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"创建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"详情\">\n                                {\n                                    data.IPAM.Config.map((item, index) =>\n                                        <div key={index}>\n                                            {`网关: ${item.Gateway}`}\n                                            <br />\n                                            {`网段: ${item.Subnet}`}\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <Button type=\"link\" onClick={this.showDrawer}>{this.props.network_name}</Button>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\n\nimport { PageHeader, Button, Tag, Table, Card } from 'antd';\nimport { ApartmentOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport NetworkDeleteButton from './delete_button'\nimport NetworkInspect from './network_inspect'\n\nexport default function NetworkOneServer(props) {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <NetworkPageHeader />\n            <NetworlOneServerTable server_id={server_id} url={url} />\n        </div>\n    );\n}\n\nclass NetworlOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                key: 'name',\n                render: (text, record) => (\n                    <NetworkInspect network_name={record.Name} network_id={record.Id} server_id={this.props.server_id} />\n                )\n            },\n            {\n                title: '网络类型',\n                key: 'type',\n                render: (text, record) => (\n                    <Tag color=\"#2db7f5\">{record.Driver}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    record.Created\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"网络一览\"\n                    extra={\n                        <Link to={`${this.props.url}/create`}>\n                            <Button type=\"primary\" shape=\"round\" icon={<ApartmentOutlined />} >\n                                添加新网络\n                        </Button>\n                        </Link>\n                    }\n                >\n                    <div style={{ marginBottom: 16 }}>\n                        {<NetworkDeleteButton disabled={!hasSelected} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />}\n                    </div>\n                    <Table pagination={{ defaultPageSize: 5 }} loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\nfunction NetworkPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"网络详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\n\nimport { Select, Divider, Input, Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class NetworkTypeOption extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n\n    addItem = () => {\n        const { items, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <Button type=\"link\"\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import { SmileOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Button, Divider, Form, Input, message, notification, PageHeader, Select } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport NetworkTypeOption from './network_type_option';\n\n\n\n\nfunction NetworkPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建新网络\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass NetworkCreatePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n\n            network_name_input: \"\",\n            network_type_input: \"bridge\",\n            network_type_option_input: {},\n            network_subnet_input: \"\",\n            network_iprange_input: \"\",\n            network_gateway_input: \"\",\n            network_label_input: [],\n            network_macvlan_drive_input: \"\",\n        }\n    }\n\n    // =======================获取输入=======================\n    handleNetwork_name_input(e) {\n        this.setState({\n            network_name_input: e.target.value,\n        })\n    }\n\n    handleNetwork_type_input(value) {\n        this.setState({\n            network_type_input: value,\n        })\n    }\n\n    handleNetwork_type_option_input(value) {\n        let temp_list = {};\n        for (let i = 0; i < value.length; i++) {\n            temp_list = { ...temp_list, ...JSON.parse(value[i]) }\n        }\n        this.setState({\n            network_type_option_input: temp_list,\n        })\n    }\n\n    handleNetwork_subnet_input(e) {\n        this.setState({\n            network_subnet_input: e.target.value,\n        })\n    }\n\n    handleNetwork_iprange_input(e) {\n        this.setState({\n            network_iprange_input: e.target.value,\n        })\n    }\n\n    handleNetwork_gateway_input(e) {\n        this.setState({\n            network_gateway_input: e.target.value,\n        })\n    }\n\n    handleNetwork_macvlan_drive_input(e) {\n        this.setState({\n            network_macvlan_drive_input: e.target.value,\n        })\n    }\n\n    handleNetwork_label_input(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            network_label_input: temp_list,\n        })\n    }\n    // =====================================================\n\n    async handleUpload() {\n        this.setState({\n            loading: true\n        })\n        const {\n            network_name_input,\n            network_type_input,\n            network_type_option_input,\n            network_subnet_input,\n            network_iprange_input,\n            network_gateway_input,\n            network_label_input,\n            network_macvlan_drive_input,\n        } = this.state\n\n        let aaa = network_label_input; //现在暂时没用\n        if (network_name_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            this.setState({\n                loading: false\n            })\n            return;\n        }\n        let network_type_option_input_new = network_type_option_input;\n        if (network_type_input === \"macvlan\") {\n            network_type_option_input_new = { ...network_type_option_input, ...JSON.parse(`{\"parent\":\"${network_macvlan_drive_input}\"}`) }\n        }\n        message.loading({ content: '网络创建中', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'network_create',\n                server_id: this.props.server_id,\n                network_name: network_name_input,\n                network_drive: network_type_input,\n                subnet: network_subnet_input,\n                ip_range: network_iprange_input,\n                gateway: network_gateway_input,\n                option: network_type_option_input_new,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                //console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    window.history.back();\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        const { Option } = Select;\n        const { loading, network_type_input } = this.state;\n        return (\n            <div>\n                <NetworkPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"network_name\"\n                    >\n                        <Input placeholder=\"为新网络起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleNetwork_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络类型配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型\"\n                        name=\"network_type\"\n                    >\n                        <Select defaultValue=\"bridge\" style={{ width: '450px' }} onChange={value => this.handleNetwork_type_input(value)}>\n                            <Option value=\"bridge\">NAT</Option>\n                            <Option value=\"macvlan\">桥接</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义选项(可选)\" onChange={value => this.handleNetwork_type_option_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络详情配置</Divider>\n                {network_type_input === \"macvlan\" ?\n                    <Form>\n                        <Form.Item\n                            label=\"桥接网卡\"\n                            name=\"macvlan_drive\"\n                        >\n                            <Input placeholder=\"如:eth0\" style={{ width: '450px' }} onChange={e => this.handleNetwork_macvlan_drive_input(e)} />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"子网段\"\n                            name=\"subnet\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/16\" style={{ width: '450px' }} onChange={e => this.handleNetwork_subnet_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"IP段\"\n                            name=\"iprange\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/25\" style={{ width: '450px' }} onChange={e => this.handleNetwork_iprange_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"网关\"\n                            name=\"gateway\"\n                        >\n                            <Input placeholder=\"如:172.18.0.1\" style={{ width: '450px' }} onChange={e => this.handleNetwork_gateway_input(e)} />\n\n                        </Form.Item>\n                    </Form>\n                    :\n                    <Form>\n                        <Form.Item\n                            label=\"子网段\"\n                            name=\"subnet\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/16\" style={{ width: '450px' }} onChange={e => this.handleNetwork_subnet_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"IP段\"\n                            name=\"iprange\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/25\" style={{ width: '450px' }} onChange={e => this.handleNetwork_iprange_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"网关\"\n                            name=\"gateway\"\n                        >\n                            <Input placeholder=\"如:172.18.0.1\" style={{ width: '450px' }} onChange={e => this.handleNetwork_gateway_input(e)} />\n\n                        </Form.Item>\n                    </Form>}\n\n                <Divider orientation=\"left\">高级配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义标签(可选)\" onChange={value => this.handleNetwork_label_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" icon={<UploadOutlined />} shape=\"round\" onClick={() => this.handleUpload()} loading={loading} >\n                    创建网络\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function NetworkCreate() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (<NetworkCreatePage server_id={server_id} url={url} />)\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { QrcodeOutlined } from '@ant-design/icons';\n\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexCpuData(props) {\n    let used = props.data.cpu.cpu_used\n    let number = props.data.cpu.cpu_number\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"CPU占用率\" value={used} suffix=\"%\" />\n            <Divider style={{ margin: '4px 0' }} />\n            <QrcodeOutlined />  CPU核心数量: <b>{number}</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\n\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexMemoryData(props) {\n    let used = props.data.memory.used;\n    used = used.toFixed(2);\n    let total = props.data.memory.total;\n    total = total.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"内存占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  内存总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\n\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexSwapData(props) {\n    let used = props.data.memory_swap.used;\n    used = used.toFixed(2);\n    let total = props.data.memory_swap.total;\n    total = total.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"交换空间占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  交换空间总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexNetworkData(props) {\n    let receive = props.data.network.receive;\n    let send = props.data.network.send;\n    let time = props.data.network.time;\n    let last_receive = props.data.network.last_receive;\n    let last_send = props.data.network.last_send;\n    let last_time = props.data.network.last_time;\n\n    let download = (receive - last_receive) / (time - last_time);\n    let upload = (send - last_send) / (time - last_time)\n    let download_unit = 'b/s'\n    let upload_unit = 'b/s'\n\n    download /= 8;\n    if (download > 1000) {\n        download /= 1024;\n        download_unit = 'kb/s';\n        if (download > 1000) {\n            download /= 1024;\n            download_unit = 'mb/s';\n            if (download > 1000) {\n                download /= 1024;\n                download_unit = 'gb/s';\n            }\n        }\n    }\n    upload /= 8;\n    if (upload > 1000) {\n        upload /= 1024;\n        upload_unit = 'kb/s';\n        if (upload > 1000) {\n            upload /= 1024;\n            upload_unit = 'mb/s';\n            if (upload > 1000) {\n                upload /= 1024;\n                upload_unit = 'gb/s';\n            }\n        }\n    }\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic\n                title=\"网络接收数据\"\n                value={download}\n                precision={2}\n                valueStyle={{ color: '#cf1322' }}\n                prefix={<ArrowDownOutlined />}\n                suffix={download_unit}\n            />\n            <Divider style={{ margin: '10px 0' }} />\n            <Statistic\n                title=\"网络发送数据\"\n                value={upload}\n                precision={2}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<ArrowUpOutlined />}\n                suffix={upload_unit}\n            />\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { AppstoreOutlined } from '@ant-design/icons';\n\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexContainerData(props) {\n    let total = 0;\n    let running = 0;\n    let aaa = props.data.Containers;\n    if (aaa) {\n        total = props.data.Containers.length;\n        running = 0;\n        for (let i = 0; i < total; i++) {\n            if (props.data.Containers[i].State === \"running\") {\n                running++;\n            }\n        }\n    }\n    return (\n        <Card size=\"small\" title={<div><AppstoreOutlined spin={true} style={{ fontSize: '21px' }} />   <b>容器</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        已创建: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        正在运行: <b>{running}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { SaveOutlined } from '@ant-design/icons';\n\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexImageData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Images\n    if (aaa) {\n        total = props.data.Images.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Images[i].Size;\n        }\n        size = size / 1024 / 1024 / 1024;\n        size = size.toFixed(2);\n    }\n\n    return (\n        <Card size=\"small\" title={<div><SaveOutlined spin={true} style={{ fontSize: '21px' }} />  <b>镜像</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size} GB</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { FolderOpenOutlined } from '@ant-design/icons';\n\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexVolumeData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Volumes\n    if (aaa) {\n        total = props.data.Volumes.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Volumes[i].UsageData.Size\n        }\n        size = size / 1024 / 1024\n        if (size > 1000) {\n            size = size / 1024\n            size = size.toFixed(2);\n            size = `${size} GB`\n        }else{\n            size = size.toFixed(2);\n            size = `${size} MB`\n        }\n        \n    }\n\n    return (\n        <Card size=\"small\" title={<div><FolderOpenOutlined spin={true} style={{ fontSize: '21px' }} />  <b>卷</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport { Row, Col, Divider, PageHeader } from 'antd'\n\n//import { AppleOutlined, AndroidOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport IndexCpuData from './index_cpu'\nimport IndexMemoryData from './index_memory'\nimport IndexSwapData from './index_swap'\nimport IndexNetworkData from './index_network'\nimport IndexContainerData from './index_container'\nimport IndexImageData from './index_image'\nimport IndexVolumeData from './index_volume'\n\n\nexport default function IndexData() {\n    let { server_id } = useParams();\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"总览\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <IndexDataControl server_id={server_id} />\n        </div>\n    );\n}\n\nclass IndexDataControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                cpu: {\n                    cpu_number: 0,\n                    cpu_used: 0,\n                },\n                memory: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                memory_swap: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                network: {\n                    receive: 0,\n                    send: 0,\n                    time: 0,\n                    last_receive: 0,\n                    last_send: 0,\n                    last_time: 0,\n                }\n            },\n            data_docker: {}\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.fetch(), 1000);\n        this.fetch_docker();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'check_server_status',\n                server_id: this.props.server_id,\n            }).then(d => {\n                const { data } = this.state;\n                let data2 = {\n                    ...d.data.data.data\n                }\n                data2.network.last_receive = data.network.receive\n                data2.network.last_send = data.network.send\n                data2.network.last_time = data.network.time\n                this.setState({\n                    data: data2\n                })\n            });\n    }\n\n    fetch_docker() {\n        axios.post('/api',\n            {\n                api: 'system_use',\n                server_id: this.props.server_id,\n            }).then(d => {\n                //console.log(d.data.data.data);\n                this.setState({\n                    data_docker: d.data.data.data\n                })\n            });\n    }\n\n    callback(key) {\n        //console.log(key);\n    }\n\n\n    render() {\n        const { data, data_docker } = this.state\n        return (\n            <div>\n                <Divider orientation=\"left\">系统资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={6} >\n                        <IndexCpuData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexMemoryData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexSwapData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexNetworkData data={data} />\n                    </Col>\n                </Row>\n                <Divider orientation=\"left\">Docker资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={8} >\n                        <IndexContainerData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexImageData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexVolumeData data={data_docker} />\n                    </Col>\n\n                </Row>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport { Descriptions, Skeleton, PageHeader, Divider, Typography, message } from 'antd';\nimport axios from 'axios';\n\nconst { Paragraph } = Typography;\n\nexport default function ServerInfo(props) {\n    let { server_id } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器信息\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerInfoShow server_id={server_id} />\n        </div>\n    );\n}\n\n\nclass ServerInfoShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data1: {},\n            data2: {},\n            name: \"\",\n            ssh: \"\"\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'system_infomation',\n                server_id: this.props.server_id,\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data1: data.data.data.data\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'system_version',\n                server_id: this.props.server_id,\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data2: data.data.data.data\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_one_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    name: data.data.name\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n                base64: true,\n            }).then(data => {\n                this.setState({\n                    ssh: data.data.data.ip\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    onChange = str => {\n        const { name } = this.state;\n        if (name === str) {\n            return;\n        }\n        //console.log('Content change:', str);\n        axios.post('/api',\n            {\n                api: 'server_change_name',\n                server_id: this.props.server_id,\n                server_name: str,\n            }).then(data => {\n                this.setState({\n                    name: str\n                })\n                message.success(\"名字修改成功！\")\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    onChangeSsh = str => {\n        const { ssh } = this.state;\n        if (ssh === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_ssh',\n                server_id: this.props.server_id,\n                server_ssh: str,\n            }).then(data => {\n                this.setState({\n                    ssh: str\n                })\n                message.success(\"ssh服务器ip修改成功！\")\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    render() {\n        const { data1, data2, name, ssh } = this.state;\n        if (data1.OSType) {\n            let mem = data1.MemTotal / 1024 / 1024 / 1024;\n            mem = mem.toFixed(2);\n            return (\n                <div>\n                    <Descriptions\n                        title=\"用户设定\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"节点名字\">\n                            <Paragraph editable={{ onChange: this.onChange }}>{name}</Paragraph>\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"节点ssh服务ip\">\n                            <Paragraph editable={{ onChange: this.onChangeSsh }}>{ssh}</Paragraph>\n                        </Descriptions.Item>\n                    </Descriptions>\n                    <br /><br />\n                    <Descriptions\n                        title=\"系统信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"系统内核\">{data1.OSType}</Descriptions.Item>\n                        <Descriptions.Item label=\"系统名字\">{data1.Name}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU平台\">{data1.Architecture}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU数量\">{data1.NCPU}</Descriptions.Item>\n                        <Descriptions.Item label=\"内存总量\">\n                            {`${mem} GB`}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"驱动类型\">\n                            {data1.Driver}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"详细信息\">\n                            {`内核版本: ${data1.KernelVersion}`}\n                            <br />\n                            {`系统版本: ${data1.OperatingSystem}`}\n                            <br />\n                            {`ID: ${data1.ID}`}\n                        </Descriptions.Item>\n                    </Descriptions>\n                    <br /><br />\n                    <Descriptions\n                        title=\"Docker信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"版本\">{data2.Version}</Descriptions.Item>\n                        <Descriptions.Item span={2} label=\"构建时间\">{data2.BuildTime}</Descriptions.Item>\n                        <Descriptions.Item label=\"api版本\">{data2.ApiVersion}</Descriptions.Item>\n                        <Descriptions.Item label=\"适用平台\">{data2.Arch}</Descriptions.Item>\n                        <Descriptions.Item label=\"Go语言版本\">{data2.GoVersion}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Skeleton active />\n                    <Skeleton active />\n                    <Skeleton active />\n                </div>\n            );\n        }\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport { Typography, Descriptions, Alert, PageHeader, Divider, message } from 'antd';\nimport axios from 'axios';\nconst { Paragraph } = Typography;\n\nexport default function ServerPsw(props) {\n    let { server_id } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器密钥信息\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerPswShow server_id={server_id} />\n        </div>\n    );\n}\n\nclass ServerPswShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            user: \"暂无权限查看\",\n            psw: \"暂无权限查看\"\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'psw_check',\n            }).then(data => {\n                //console.log(data.data.id)\n                this.setState({\n                    id: data.data.id\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    user: data.data.data.user,\n                    psw: data.data.data.psw\n                })\n            });\n    }\n\n    onChangeUser = str => {\n        const { user } = this.state;\n        if (user === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_user',\n                server_id: this.props.server_id,\n                server_user: str,\n            }).then(data => {\n                if (data.data.status === 0) {\n                    this.setState({\n                        user: str\n                    })\n                    message.success(\"用户修改成功！\")\n                } else {\n                    message.warning(\"只有管理员才能修改\")\n                }\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    onChangePsw = str => {\n        const { psw } = this.state;\n        if (psw === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_psw',\n                server_id: this.props.server_id,\n                server_psw: str,\n            }).then(data => {\n                if (data.data.status === 0) {\n                    this.setState({\n                        psw: str\n                    })\n                    message.success(\"密码修改成功！\")\n                } else {\n                    message.warning(\"只有管理员才能修改\")\n                }\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    render() {\n        const { id, user, psw } = this.state;\n        return (\n            <div>\n                <Alert\n                    message=\"关于通讯密钥\"\n                    description=\"通讯密钥由系统自动生成，用于与控制节点通信时使用，原则上不允许更改。如果服务器与控制节点绑定失败，可尝试复制通讯密钥手动添加至控制节点！\"\n                    type=\"info\"\n                    showIcon\n                />\n                <br />\n                <Descriptions\n                    title=\"服务器密钥\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Descriptions.Item label=\"通讯密钥\" span={4}>\n                        <Paragraph copyable>{id}</Paragraph>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"登录服务器用户\">\n                        <Paragraph editable={{ onChange: this.onChangeUser }}>{user}</Paragraph>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"登录服务器密码\">\n                        <Paragraph editable={{ onChange: this.onChangePsw }}>{psw}</Paragraph>\n                    </Descriptions.Item>\n                </Descriptions>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { Button, notification, Popconfirm } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class VolumeDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_volume() {\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'volume_delete_unused',\n                server_id: this.props.server_id,\n            }).then(data => {\n                //console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    let free_size = data.data.data.data.SpaceReclaimed / 1024 / 1024\n                    if (free_size > 1000) {\n                        free_size = free_size / 1024;\n                        free_size = `${free_size.toFixed(2)} GB 储存空间`\n                    } else {\n                        free_size = `${free_size.toFixed(2)} MB 储存空间`\n                    }\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `已释放: ${free_size}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                } else {\n                    notification.open({\n                        message: '删除失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                }\n            });\n        this.setState({\n            loading: false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const { loading } = this.state\n        return (\n            <Popconfirm placement=\"top\" title=\"该操作无法撤销，您确定要删除未使用的卷吗？\" onConfirm={() => this.delete_volume()} okText=\"确定\" cancelText=\"我再想想\">\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    danger\n                    disabled={this.props.disabled}\n                    loading={loading}\n                >\n                    删除未使用的卷\n            </Button>\n            </Popconfirm>\n        );\n    }\n}","import { Card, PageHeader, Table } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport VolumeDeleteButton from './delete_button';\n\n\n\n\n\n\nfunction VolumePageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"卷详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport default function VolumeOneServer() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <VolumePageHeader />\n            <VolumeOneServerTable server_id={server_id} url={url} />\n        </div>\n    )\n}\n\nclass VolumeOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Name',\n                key: 'name',\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                dataIndex: 'CreatedAt',\n            }\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'volume_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                //console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data.Volumes,\n                    loading: false,\n                })\n            });\n    }\n\n    fresh_table() {\n        this.fetch();\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"卷一览\" extra={<VolumeDeleteButton server_id={this.props.server_id} onFresh={() => this.fresh_table()} />} >\n                    <Table pagination={{ defaultPageSize: 5 }} loading={loading} rowKey={record => record.Name} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Breadcrumb } from 'antd';\n\nimport { AllHeader } from '../../components/header'\nimport IndexMenu from '../../components/index_menu'\nimport { ContainerOne } from '../../components/container_info'\nimport ContainerOneServer from '../../components/container_table/one_container_table'\nimport ContainerCreate from '../../components/container_create'\nimport ImageOneServer from '../../components/image_table/one_server_image'\nimport NetworkOneServer from '../../components/network_table/one_network'\nimport NetworkCreate from '../../components/network_create'\nimport IndexData from '../../components/index_data'\nimport ServerInfo from '../../components/server_info'\nimport ServerPsw from '../../components/server_psw'\nimport VolumeOneServer from '../../components/volume_table'\n\n\n\nconst { Content } = Layout;\n\n\nexport default function Index() {\n    let { url } = useRouteMatch();\n\n    return (\n        <Layout>\n            <AllHeader number={'1'} />\n            <Layout>\n                <Switch>\n                    <Route exact path={`${url}/:server_id`}>\n                        <IndexMenu selectOptins='0' />\n                    </Route>\n                    <Route path={`${url}/:server_id/serverinfo`}>\n                        <IndexMenu openKey='sub1' selectOptins='1' />\n                    </Route>\n                    <Route path={`${url}/:server_id/server_secret`}>\n                        <IndexMenu openKey='sub1' selectOptins='2' />\n                    </Route>\n                    <Route path={`${url}/:server_id/containerinfo`}>\n                        <IndexMenu openKey='sub2' selectOptins='5' />\n                    </Route>\n                    <Route path={`${url}/:server_id/image`}>\n                        <IndexMenu openKey='sub4' selectOptins='9' />\n                    </Route>\n                    <Route path={`${url}/:server_id/network`}>\n                        <IndexMenu openKey='sub5' selectOptins='10' />\n                    </Route>\n                    <Route path={`${url}/:server_id/volume`}>\n                        <IndexMenu openKey='sub6' selectOptins='11' />\n                    </Route>\n                </Switch>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Switch>\n                        <Route exact path={`${url}/:server_id`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <IndexData />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/serverinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器信息</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerInfo />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/server_secret`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器密钥</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerPsw />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/containerinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOneServer />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_id/containerinfo/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器创建</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerCreate />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_id/containerinfo/info/:id`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器详情</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOne />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/image`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>镜像一览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ImageOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/network`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>网络总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/network/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>创建新网络</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkCreate />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/volume/`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>卷管理</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <VolumeOneServer />\n                            </Content>\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}","import { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Form, Input, message, Card } from 'antd';\n\nimport axios from 'axios';\nimport React from 'react';\n\n\n\n\n\nexport class LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n        this.layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 12 },\n        };\n        this.tailLayout = {\n            wrapperCol: { offset: 8, span: 12 },\n        };\n    }\n\n    async onFinish(values) {\n        //console.log(values);\n        this.setState({\n            loading: true,\n        });\n\n        await axios.post('/api',\n            {\n                api: 'login',\n                username: values.username,\n                password: values.password,\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.Login()\n                } else {\n                    message.info('用户或密码错误！');\n                    this.setState({\n                        loading: false,\n                    });\n                }\n            });\n    }\n\n    onFinishFailed() {\n        ////console.log('Failed:');\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"登录\" style={{ width: 400, boxShadow:\"2px 4px 6px #123\" }}>\n                    <Form\n                        {...this.props.layout}\n                        name=\"basic\"\n                        initialValues={{ remember: true }}\n                        onFinish={values => this.onFinish(values)}\n                        onFinishFailed={() => this.onFinishFailed()}\n                    >\n                        <Form.Item\n                            label=\"用户名\"\n                            name=\"username\"\n                            rules={[{ required: true, message: '请输入用户名!' }]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={[{ required: true, message: '请输入密码!' }]}\n                        >\n                            <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} />\n                        </Form.Item>\n\n                        <Form.Item {...this.tailLayout} name=\"remember\" valuePropName=\"checked\">\n                            <Checkbox>记住我</Checkbox>\n                        </Form.Item>\n\n                        <Form.Item {...this.tailLayout}>\n                            <Button loading={this.state.loading} type=\"primary\" htmlType=\"submit\">\n                                登录\n            </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}","import { ExclamationCircleOutlined, SmileOutlined } from '@ant-design/icons';\nimport { Col, Modal, Result, Row, Spin } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { LoginForm } from '../../components/login_form';\n\n\nconst { confirm } = Modal;\n\n\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            welcome: false,\n            login: false,\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === 0) {\n                    this.setState({\n                        loading: false,\n                        welcome: true,\n                    })\n                } else {\n                    if (data.data.login) {\n                        window.location.replace('/')\n                    } else {\n                        this.setState({\n                            loading: false,\n                            welcome: false,\n                        })\n                    }\n                }\n            });\n    }\n\n    showConfirm() {\n        this.setState({\n            loading: false,\n            welcome: false,\n        })\n        confirm({\n            title: '您尚未注册任何用户或绑定任何服务器',\n            icon: <ExclamationCircleOutlined />,\n            content: '是否需要进入引导界面进行注册绑定？',\n            onOk() {\n                window.location.replace('/welcome')\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    render() {\n        const { loading, welcome } = this.state;\n        if (loading) {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            )\n        } else {\n            if (welcome) {\n                this.showConfirm();\n                return (<div></div>);\n            } else {\n                return (\n                    <div style={{\n                        background: `linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.7) ),url(/static/img/1.jpg)`,\n                        backgroundSize: \"100% 100%\",\n                        height: \"100%\",\n                        width: \"100%\"\n                    }}>\n                        <div style={{\n                                    height:\"25%\"\n                                }}>\n                            \n                        </div>\n                        <Row align={'middle'} justify=\"space-between\" >\n                            <Col span={1} />\n                            <Col >\n                                <Result\n                                    icon={<SmileOutlined />}\n                                    title={<div style={{ color: \"white\" }}>欢迎来到Docker容器可视化管理平台</div>}\n                                />\n                            </Col>\n                            <Col span={4} />\n                            <Col >\n                                <LoginForm Login={() => this.props.Login()} />\n                            </Col>\n                            <Col span={1} />\n                        </Row>\n                    </div>\n                )\n            }\n        }\n    }\n}\n","import { ArrowLeftOutlined, UserOutlined } from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\n\nexport default function UserMenu(props) {\n\n    return (\n        <UserMenuFunc {...props} />\n    );\n}\n\n\nclass UserMenuFunc extends React.Component {\n    \n    render() {\n        return (\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={this.props.selectOptins}\n                    defaultOpenKeys={['sub1']}\n\n                >\n                    <Menu.Item key=\"back\">\n                        <ArrowLeftOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/`}>回到主页</Link>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <UserOutlined style={{ fontSize: '21px' }} />\n                                用户管理\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={this.props.url}>用户列表</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={`${this.props.url}/creat`}>创建新用户</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\">\n                            <Link to={`${this.props.url}/change`}>修改用户信息</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        )\n    }\n}","import React from 'react';\n\nimport { Button, notification, Popconfirm } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class UserDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_user() {\n        this.setState({\n            loading: true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'user_delete',\n                    user_id: this.props.selected[i],\n                }).then(data => {\n                    //console.log(data.data);\n                    if (data.data.status === 0) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `用户:${this.props.selected[i]} 删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else if (data.data.status === 1) {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `你不能删除自己的账户`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else if (data.data.status === -1) {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `该用户不存在`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading: false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const { loading } = this.state\n        return (\n            <Popconfirm disabled={this.props.disabled} placement=\"top\" title=\"该操作无法撤销，您确定要删除这些用户吗\" onConfirm={() => this.delete_user()} okText=\"确定\" cancelText=\"取消\">\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    danger\n                    disabled={this.props.disabled}\n                    loading={loading}\n                >\n                    删除所选用户\n                </Button>\n            </Popconfirm>\n        );\n    }\n}","import React from 'react';\n\nimport axios from 'axios';\n\nimport { Card, Table, Tag } from 'antd';\n\nimport UserDeleteButton from './delete_button'\n\n\nexport default function UserInfo(props) {\n\n    return (\n        <div>\n            <UserInfoTable {...props} />\n        </div>\n    );\n}\n\n\n\nclass UserInfoTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: 'ID',\n                key: 'id',\n                ellipsis: true,\n                render: (text, record) => (\n                    record.id\n                )\n            },\n            {\n                title: '名字',\n                key: 'name',\n                render: (text, record) => (\n                    record.username\n                )\n            },\n            {\n                title: '身份',\n                key: 'type',\n                render: (text, record) => {\n                    if (record.ifadmin === \"100\") {\n                        return (\n                            <Tag color=\"red\">管理员</Tag>\n                        )\n                    } else {\n                        return (\n                            <Tag color=\"geekblue\">普通用户</Tag>\n                        )\n                    }\n                }\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'user_info',\n            }).then(data => {\n                //console.log(data.data.data)\n                this.setState({\n                    data: data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"用户一览\" >\n                    <div style={{ marginBottom: 16 }}>\n                        {<UserDeleteButton disabled={!hasSelected} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />}\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport axios from 'axios';\n\nimport { PageHeader, Form, Input, Button, Checkbox, message } from 'antd';\n\nexport default class UserCreate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false\n        }\n    }\n\n    send_regist(value) {\n        this.setState({\n            loading: true\n        })\n        axios.post('/api',\n            {\n                api: 'create_user',\n                ...value\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === 0) {\n                    window.location.replace('/user')\n                } else {\n                    message.info('用户名重复，请重新设置！');\n                }\n                this.setState({\n                    loading: false\n                })\n            });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 8 },\n        };\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n        const { loading } = this.state;\n        return (\n            <div>\n                <PageHeader\n                    title=\"用户创建\"\n                    subTitle=\"创建新用户\"\n                />\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={(value) => this.send_regist(value)}\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                        rules={[{ required: true, message: '请输入你的用户名' }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                        rules={[{ required: true, message: '请输入密码' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"请再次输入密码\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: '请确认你的密码',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('两次输入的密码不匹配');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout} name=\"ifadmin\" valuePropName=\"checked\">\n                        <Checkbox>是否设置为管理员</Checkbox>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n                            创建\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { Select, PageHeader, Row, Col, Input, Form, Button, message, Checkbox, Divider } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\n\nexport default function UserChangeMount(props) {\n\n    return (\n        <UserChange {...props} />\n    );\n}\n\n\nclass UserChange extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            value: \"\",\n            loading: false\n        }\n    }\n\n\n    fetch_search(value) {\n        //console.log(value)\n        if (value === \"\") {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'search_user_by_name',\n                input: value\n            }).then(data => {\n                //console.log(data.data)\n                this.setState({\n                    data: data.data.data\n                })\n            });\n    }\n\n    send_regist(value1) {\n        this.setState({\n            loading: true\n        })\n        const { value } = this.state;\n        if (value === \"\") {\n            message.error('您没有选择要修改的用户');\n            this.setState({\n                loading: false\n            })\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'change_user',\n                ...value1,\n                id: value\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === 0) {\n                    window.location.replace('/user')\n                } else {\n                    message.info('用户名重复，请重新设置！');\n                }\n                this.setState({\n                    loading: false\n                })\n            });\n    }\n\n    handleChange(value) {\n        //console.log(value);\n        this.setState({\n            value: value,\n        })\n    }\n\n    render() {\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n\n        const options = this.state.data.map(d => <Option key={d.id}>{d.name}</Option>);\n        const { value, loading } = this.state;\n        return (\n            <div>\n                <PageHeader\n                    title=\"用户信息修改\"\n                    subTitle=\"修改用户信息\"\n                />\n                <Row>\n                    <Col span={4}>\n                        <div\n                            style={{\n                                fontSize: 15\n                            }}\n                        >\n                            请输入需要修改的用户名:\n                        </div>\n                    </Col>\n                    <Col span={20}>\n                        <Select\n                            suffixIcon={<SearchOutlined />}\n                            style={{ width: 200 }}\n                            showSearch\n                            value={value}\n                            defaultActiveFirstOption={false}\n                            showArrow={false}\n                            filterOption={false}\n                            onSearch={value => this.fetch_search(value)}\n                            onChange={value => this.handleChange(value)}\n                            notFoundContent={null}\n                        >\n                            {options}\n                        </Select>\n                    </Col>\n                </Row>\n                <Divider orientation=\"left\">不修改的部分请留空</Divider>\n                <Form\n                    style={{\n                        width: \"300px\"\n                    }}\n                    name=\"basic\"\n                    onFinish={(value) => this.send_regist(value)}\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"请再次输入密码\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('两次输入的密码不匹配');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout} name=\"ifadmin\" valuePropName=\"checked\">\n                        <Checkbox>是否设置为管理员</Checkbox>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n                            修改\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\n\n\nimport { Layout, Breadcrumb } from 'antd';\n\nimport './index.css';\nimport { AllHeader } from '../../components/header'\nimport UserMenu from '../../components/user_menu'\nimport UserInfo from '../../components/user_info'\nimport UserCreate from '../../components/user_create'\nimport UserChangeMount from '../../components/user_change'\n\n\nconst { Content } = Layout;\n\n\nexport default function UserPage() {\n    let { url } = useRouteMatch();\n\n    return (\n        <Layout>\n            <AllHeader number={'2'} />\n            <Layout>\n                <Switch>\n                    <Route exact path={`${url}`}>\n                        <UserMenu selectOptins='1' url={url} />\n                    </Route>\n                    <Route exact path={`${url}/creat`}>\n                        <UserMenu selectOptins='2' url={url} />\n                    </Route>\n                    <Route exact path={`${url}/change`}>\n                        <UserMenu selectOptins='3' url={url} />\n                    </Route>\n                </Switch>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Switch>\n                        <Route exact path={`${url}`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>用户一览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserInfo />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/creat`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>用户创建</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserCreate />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/change`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>修改用户信息</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserChangeMount />\n                            </Content>\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}","import React from 'react';\n\nimport { Result, Button } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\n\n\nexport default function welcome_1(props) {\n    return (\n        <Result\n            icon={<SmileOutlined />}\n            title=\"欢迎来到Docker可视化管理平台\"\n            extra={<Button type=\"primary\" onClick={() => props.onNext()} >下一步</Button>}\n        />\n    )\n}","import { SmileOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, message, Result, Row, Spin } from 'antd';\n\nimport axios from 'axios';\nimport React from 'react';\nimport { LoginForm } from '../../login_form';\n\n\nclass WelcomeSignup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            ifUser: false,\n        }\n    }\n\n    send_regist(value) {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/welcome_api',\n            {\n                api: 'create_user',\n                ...value\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info('服务器开小差了，请稍后再试');\n                    this.setState({\n                        loading: false,\n                    })\n                }\n            }).catch(err => {\n                //console.log(err);\n                message.error('服务器开小差了，请稍后再试');\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/welcome_api',\n            {\n                aaa: 'aaa',\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === -2) {\n                    this.setState({\n                        loading: false,\n                        ifUser: true\n                    })\n                } else {\n                    this.setState({\n                        loading: false,\n                        ifUser: false\n                    })\n                }\n            }).catch(err => {\n                //console.log(err);\n                message.error('服务器开小差了，请稍后再试');\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 8 },\n        };\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n        const { loading, ifUser } = this.state;\n        if (!loading) {\n            if (ifUser) {\n                return (\n                    <Result\n                        icon={<SmileOutlined />}\n                        title=\"该服务器已经创建了管理员账户，请登录进行操作\"\n                        extra={\n                            <Row>\n                                <Col span={8} />\n                                <Col span={4}>\n                                    <LoginForm {...layout} Login={() => this.props.onNext()} />\n                                </Col>\n                            </Row>\n                        }\n                    />\n                )\n            } else {\n                return (\n                    <Result\n                        icon={<SmileOutlined />}\n                        title=\"请注册一个管理员用户\"\n                        extra={<Form\n                            {...layout}\n                            name=\"basic\"\n                            onFinish={(value) => this.send_regist(value)}\n                        >\n                            <Form.Item\n                                label=\"用户名\"\n                                name=\"username\"\n                                rules={[{ required: true, message: '请输入你的用户名' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"密码\"\n                                name=\"password\"\n                                rules={[{ required: true, message: '请输入密码' }]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"confirm\"\n                                label=\"请再次输入密码\"\n                                dependencies={['password']}\n                                hasFeedback\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请确认你的密码',\n                                    },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                            if (!value || getFieldValue('password') === value) {\n                                                return Promise.resolve();\n                                            }\n                                            return Promise.reject('两次输入的密码不匹配');\n                                        },\n                                    }),\n                                ]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item {...tailLayout}>\n                                <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n                                    下一步\n                            </Button>\n                            </Form.Item>\n                        </Form>}\n                    />\n\n                );\n            }\n        } else {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            )\n        }\n\n\n    }\n}\n\n\nexport default function welcome_2(props) {\n    return (\n        <WelcomeSignup onNext={() => props.onNext()} />\n    );\n}","import { ApiTwoTone, ContactsTwoTone, DatabaseTwoTone, EditTwoTone, EyeInvisibleTwoTone } from '@ant-design/icons';\nimport { Button, Card, Input, message, Radio, Result } from 'antd';\n\nimport axios from 'axios';\nimport React from 'react';\n\nexport default function welcome_3(props) {\n    return (\n        <WelcomeBindServer onNext={() => props.onNext()} />\n    );\n}\n\n\nclass WelcomeBindServer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            server_ip_input: \"\",\n            server_name_input: \"\",\n            server_type_input: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n            input_server_ssh_ip: \"\",\n\n            loading: false,\n        }\n    }\n\n    handleServer_ip_input(e) {\n        this.setState({\n            server_ip_input: e.target.value\n        })\n    }\n\n    handleServer_name_input(e) {\n        this.setState({\n            server_name_input: e.target.value\n        })\n    }\n\n    handleServer_type_input(e) {\n        this.setState({\n            server_type_input: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    handleInput_server_sship = (e) => {\n        this.setState({\n            input_server_ssh_ip: e.target.value\n        })\n    }\n\n    send_args() {\n        this.setState({\n            loading: true,\n        })\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input, input_server_ssh_ip } = this.state\n        axios.post('/api',\n            {\n                api: 'create_server',\n                server_ip: server_ip_input,\n                server_name: server_name_input,\n                server_type: server_type_input,\n                server_user: server_user_input,\n                server_psw: server_psw_input,\n                server_ssh_ip: input_server_ssh_ip,\n\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info(data.data.message);\n                    this.setState({\n                        loading: false,\n                    })\n                }\n            }).catch(err => {\n                //console.log(err);\n                message.error('与控制节点配对失败，请检查输入是否正确，');\n                this.setState({\n                    loading: false,\n                })\n            })\n    }\n\n    render() {\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input, loading, input_server_ssh_ip } = this.state\n        return (\n            <Result\n                icon={<DatabaseTwoTone />}\n                title=\"请绑定您第一台服务器节点\"\n                extra={\n                    <div>\n                        <center>\n                            <Card title=\"请输入服务器信息\" bordered={false} style={{ width: 500 }}>\n                                <Input.Group>\n                                    服务器ip或域名:<Input onChange={(e) => this.handleServer_ip_input(e)} value={server_ip_input} style={{ width: 300, marginLeft: 10 }} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                                    <br /><br />\n                                    服务器名字:<Input onChange={(e) => this.handleServer_name_input(e)} value={server_name_input} style={{ width: 290, marginLeft: 5 }} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                                </Input.Group>\n                                <br />\n                                连接类型:\n                                <Radio.Group onChange={(e) => this.handleServer_type_input(e)} defaultValue={server_type_input} buttonStyle=\"solid\">\n                                    <Radio.Button value=\"http\">HTTP</Radio.Button>\n                                    <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                                </Radio.Group>\n                                <br /><br />\n                                <Input.Group>\n                                    ssh服务IP:<Input onChange={(e) => this.handleInput_server_sship(e)} value={input_server_ssh_ip} style={{ width: 280, marginLeft: 10 }} prefix={<DatabaseTwoTone />} placeholder=\"127.0.0.1:22\" />\n                                    <br /><br />\n                                    服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                                    <br /><br />\n                                    服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                                </Input.Group>\n                            </Card>\n                            <Button loading={loading} onClick={() => this.send_args()} type=\"primary\">下一步</Button>\n                        </center>\n                    </div>\n                }\n            />\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport { Result, Button } from 'antd';\n\n\nexport default function welcome_4(props) {\n    return (\n        <Result\n            status=\"success\"\n            title=\"一切准备就绪\"\n            subTitle=\"现在您可以尽情使用了\"\n            extra={[\n                <Link to=\"/\">\n                    <Button type=\"primary\" key=\"console\">\n                        进入平台\n                    </Button>\n                </Link>,\n            ]}\n        />\n    )\n}","import React from 'react';\n\nimport { Steps, Col, Row, Spin } from 'antd';\nimport axios from 'axios';\n\nimport welcome_1 from '../../components/welcome/welcome_1'\nimport welcome_2 from '../../components/welcome/welcome_2'\nimport welcome_3 from '../../components/welcome/welcome_3'\nimport welcome_4 from '../../components/welcome/welcome_4'\n\n\nexport default class WelcomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 0,\n            welcome: false\n        };\n        this.steps = [\n            {\n                title: '开始',\n                content: welcome_1\n            },\n            {\n                title: '注册',\n                content: welcome_2,\n            },\n            {\n                title: '绑定一个服务器',\n                content: welcome_3,\n            },\n            {\n                title: '结束',\n                content: welcome_4,\n            },\n        ];\n    }\n\n    next() {\n        const current = this.state.current + 1;\n        this.setState({ current });\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({ current });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                //console.log(data.data)\n                if (data.data.status === 0) {\n                    this.setState({\n                        welcome: true,\n                    })\n                } else {\n                    this.setState({\n                        welcome: false,\n                    })\n                    window.location.replace('/')\n                }\n            });\n    }\n\n    render() {\n        const { current, welcome } = this.state;\n        const { Step } = Steps;\n        if (welcome) {\n            return (\n                <div>\n                    <br /><br /><br /><br /><br />\n                    <Row gutter={[8, 8]}>\n                        <Col span={3} />\n                        <Col span={18} >\n                            <Steps current={current}>\n                                {this.steps.map(item => (\n                                    <Step key={item.title} title={item.title} />\n                                ))}\n                            </Steps>\n                            <div className=\"steps-content\">{this.steps[current].content({ onNext: () => this.next(), })}</div>\n                        </Col>\n                        <Col span={3} />\n                    </Row>\n                </div>\n            );\n        } else {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            );\n        }\n\n    }\n}","import { GithubOutlined, SlidersTwoTone } from '@ant-design/icons';\nimport { Breadcrumb, Layout, message, Result } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { AllHeader } from '../../components/header';\nimport './index.css';\n\n\nexport default class AboutPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            version: \"loading...\"\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"/version\", {\n            api: \"version\"\n        }).then(d => {\n            if (d.data.status === 0) {\n                this.setState({ version: d.data.version });\n            } else {\n                message.warning(d.data.message);\n            }\n        }).catch(\n            err => {\n                message.error(\"获取版本信息失败！\")\n            }\n        )\n    }\n\n    render() {\n        const { version } = this.state;\n\n        const { Content, Footer } = Layout;\n        return (\n            <Layout className=\"layout\">\n                <AllHeader number={'3'} />\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>关于</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div className=\"site-layout-content\">\n                        <Result\n                            icon={<SlidersTwoTone />}\n                            title=\"Docker容器可视化管理平台\"\n                            subTitle={<div>客户端版本号:<b>{version}</b></div>}\n                            extra={<a href=\"https://github.com/ChoungJX/doweb_server\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                点击访问github页面\n                            </a>}\n                        />\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}><a rel=\"noopener noreferrer\"  href=\"https://github.com/ChoungJX/doweb_server\" target=\"_blank\"><GithubOutlined /></a> ChoungJX毕业作品</Footer>\n            </Layout>\n        )\n    }\n}","import { Spin } from 'antd';\nimport axios from 'axios';\nimport React from \"react\";\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport HomePage from '../pages/home';\nimport Index from '../pages/index';\nimport Login from '../pages/login';\nimport UserPage from '../pages/user';\nimport WelcomePage from '../pages/welcome';\nimport AboutPage from '../pages/about';\nimport './index.css';\n\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isAuthenticated: false,\n            isSend: false\n        }\n    }\n\n    componentDidMount() {\n        axios.post('/api',\n            {\n                api: 'check_login',\n            }).then(d => {\n                this.setState({\n                    isSend: true,\n                    isAuthenticated: d.data.isLogin\n                })\n            });\n    }\n\n    authenticate() {\n        this.setState({\n            isAuthenticated: true,\n            isSend: true\n        })\n        window.location.replace('/')\n    }\n\n    render() {\n        const { isAuthenticated, isSend } = this.state\n        return (\n            <Router>\n                <PrivateRoute path='/control' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <Index />\n                </PrivateRoute>\n                <PrivateRoute path='/user' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <UserPage />\n                </PrivateRoute>\n                <PrivateRoute exact path='/' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <HomePage />\n                </PrivateRoute>\n                <PrivateRoute exact path='/about' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <AboutPage />\n                </PrivateRoute>\n                <Route path='/login' >\n                    <Login Login={() => this.authenticate()} />\n                </Route>\n                <Route path='/welcome' >\n                    <WelcomePage />\n                </Route>\n            </Router>\n        );\n    }\n}\n\n\nfunction PrivateRoute({ children, ...rest }) {\n    //console.log(rest.isSend)\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                rest.isSend ? (\n                    rest.isAuthenticated ? (\n                        children\n                    ) : (\n                            <Redirect\n                                to={{\n                                    pathname: \"/login\",\n                                    state: { from: location }\n                                }}\n                            />\n                        )\n                ) : (\n                        <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                            <Spin size=\"large\" />\n                        </div>\n\n                    )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './router';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}