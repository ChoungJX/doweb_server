{"version":3,"sources":["components/container_create/mutiple_switch/index.js","components/network_create/network_type_option/index.js","components/header/index.js","components/index_menu/index.js","components/container_info/index.js","components/container_table/one_container_table/one_container_action_button/index.js","components/container_table/one_container_table/one_container_inspect/index.js","components/container_table/one_container_table/index.js","components/container_create/image_select/index.js","components/container_create/network_select/index.js","components/container_create/ports_choose/index.js","components/container_create/index.js","components/image_table/one_server_image/delete_button/index.js","components/image_table/one_server_image/add_button/index.js","components/image_table/one_server_image/image_inspect/index.js","components/image_table/one_server_image/index.js","components/network_table/one_network/delete_button/index.js","components/network_table/one_network/network_inspect/index.js","components/network_table/one_network/index.js","components/network_create/index.js","components/index_data/index_cpu/index.js","components/index_data/index_memory/index.js","components/index_data/index_swap/index.js","components/index_data/index_network/index.js","components/index_data/index_container/index.js","components/index_data/index_image/index.js","components/index_data/index_volume/index.js","components/index_data/index.js","components/server_info/index.js","components/server_psw/index.js","components/volume_table/delete_button/index.js","components/volume_table/index.js","pages/index/index.js","components/login_form/index.js","pages/login/index.js","components/welcome/welcome_1/index.js","components/welcome/welcome_2/index.js","components/welcome/welcome_3/index.js","components/welcome/welcome_4/index.js","pages/welcome/index.js","components/server_table/add_button/index.js","components/server_table/delete_button/index.js","components/server_table/index.js","pages/home/index.js","components/user_menu/index.js","components/user_info/delete_button/index.js","components/user_info/index.js","components/user_create/index.js","components/user_change/index.js","pages/user/index.js","router/index.js","index.js"],"names":["MultipleSwitch","state","items","items_value","input_key","input_value","selected","onKeyChange","event","setState","target","value","onValueChange","onSelectedChange","console","log","eval","addItem","this","Option","mode","style","width","placeholder","props","args","onChange","dropdownRender","menu","margin","orientation","display","flexWrap","padding","addonBefore","flex","align","cursor","onClick","map","item","key","React","Component","NetworkTypeOption","Header","AllHeader","Item","logout","username","fetch","axios","post","api","then","data","message","info","window","location","reload","className","span","theme","defaultSelectedKeys","number","lineHeight","to","overlay","e","preventDefault","DownOutlined","icon","UserOutlined","SubMenu","Sider","IndexSider","onOpenChange","openKeys","latestOpenKey","find","indexOf","rootSubmenuKeys","openKey","openOptions","selectOptins","defaultOpenKeys","ArrowLeftOutlined","fontSize","EyeOutlined","server_id","title","CloudServerOutlined","AppstoreOutlined","SaveOutlined","ApartmentOutlined","FolderOpenOutlined","IndexMenu","useParams","ContainerPageHeader","id","ghost","onBack","history","back","subTitle","ContainerInfo","loading","get_args","active","ContainerOne","OneContainerActionButton","handleMenuClick","url","onLoading","notification","open","description","SmileOutlined","color","onFresh","length","error","i","container_id","disabled","ContainerInspect","showDrawer","visible","onClose","success","base64","ip","user","psw","replace","NetworkSettings","network_drive","Object","keys","Networks","placement","type","shape","closable","bordered","column","xxl","xl","lg","md","sm","xs","label","Id","Name","IPAddress","State","Status","status","text","Created","split","PlayCircleOutlined","size","handleStart","marginLeft","ReloadOutlined","handleRestart","PoweroffOutlined","danger","handleStop","FundProjectionScreenOutlined","handelGotoTerminal","Config","Image","Ports","index","item2","index2","HostIp","HostPort","Cmd","Env","ContainerInspectButton","ContainerOneServerTable","onSelectChange","selectedRowKeys","columns","dataIndex","render","record","show_ip","moment","format","handleRefresh","get_net_work_name","rowSelection","hasSelected","extra","handleLoading","rowKey","dataSource","ContainerOneServer","useRouteMatch","ContainerSearchImage","get_image_list","labelInValue","notFoundContent","handleValue","d","RepoTags","ContainerSearchNetwork","PortsChoose","onCportChange","input_cport","onHipChange","input_hip","onHportChange","input_hport","onTypeChange","input_type","temp_list","one_key","JSON","parse","items2","Group","buttonStyle","Button","PlusOutlined","TabPane","ContainerCreate_page","container_name_input","image_name_input","ports","ports2","command_input","entrypotin_input","user_input","ifTty","ifInteractive","network_name_input","hostname","network_ip","env","value1","value2","temp_dict","temp_dict2","network_config","content","duration","image","name","connect_port","export_port","cmd","entrypoint","Tty","interactive","network_model","setTimeout","handleContainer_name_input","handleImage_name_input","handlePorts","defaultActiveKey","tab","SlidersOutlined","handleCommand_input","handleEntrypotin_input","handleUser_input","handleIfTty","marginRight","handleIfInteractive","handleNetwork_name_input","handleHostname","handleNetwork_ip","DropboxOutlined","handleEvn","BarcodeOutlined","handleLabel","BarChartOutlined","min","max","step","handle_send","ContainerCreate","ImageDeleteButton","image_id","DeleteOutlined","delete_image","ImageAddButton","showModal","handleOk","send_message","handleCancel","input_image_name","image_name","DownloadOutlined","onOk","onCancel","confirmLoading","handleInput_image_name","ImageInspect","DockerVersion","Architecture","Os","RootFS","Layers","ImageOneServer","ImagePageHeader","ImageOneServerTable","ellipsis","marginBottom","NetworkDeleteButton","network_id","delete_network","NetworkInspect","network_name","Driver","IPAM","Gateway","Subnet","NetworkOneServer","NetworkPageHeader","NetworlOneServerTable","NetworkCreate_page","network_type_input","network_type_option_input","network_subnet_input","network_iprange_input","network_gateway_input","network_label_input","network_macvlan_drive_input","network_type_option_input_new","subnet","ip_range","gateway","option","defaultValue","handleNetwork_type_input","handleNetwork_type_option_input","handleNetwork_macvlan_drive_input","handleNetwork_subnet_input","handleNetwork_iprange_input","handleNetwork_gateway_input","handleNetwork_label_input","UploadOutlined","handleUpload","NetworkCreate","IndexCpuData","used","cpu","cpu_used","cpu_number","height","suffix","QrcodeOutlined","IndexMemoryData","memory","toFixed","total","free","percent","PieChartOutlined","HddOutlined","IndexSwapData","memory_swap","IndexNetworkData","receive","network","send","time","last_receive","last_send","last_time","download","upload","download_unit","upload_unit","precision","valueStyle","prefix","ArrowDownOutlined","ArrowUpOutlined","Paragraph","IndexContainerData","running","Containers","spin","IndexImageData","Images","Size","IndexVolumeData","Volumes","UsageData","IndexData","IndexDataControl","data_docker","interval","setInterval","fetch_docker","clearInterval","data2","justify","gutter","ServerInfo","ServerInfoShow","str","server_name","catch","err","onChangeSsh","ssh","server_ssh","data1","OSType","mem","MemTotal","editable","NCPU","KernelVersion","OperatingSystem","ID","Version","BuildTime","ApiVersion","Arch","GoVersion","ServerPsw","ServerPswShow","onChangeUser","server_user","warning","onChangePsw","server_psw","showIcon","copyable","VolumeDeleteButton","free_size","SpaceReclaimed","onConfirm","delete_volume","okText","cancelText","VolumePageHeader","VolumeOneServer","VolumeOneServerTable","fresh_table","Content","Index","exact","path","minHeight","LoginForm","layout","labelCol","wrapperCol","tailLayout","offset","values","password","Login","boxShadow","initialValues","remember","onFinish","onFinishFailed","rules","required","Password","LockOutlined","valuePropName","htmlType","confirm","welcome","login","ExclamationCircleOutlined","showConfirm","background","backgroundSize","welcome_1","onNext","WelcomeSignup","ifUser","aaa","send_regist","dependencies","hasFeedback","getFieldValue","validator","rule","Promise","reject","resolve","welcome_2","welcome_3","WelcomeBindServer","handleInput_server_sship","input_server_ssh_ip","server_ip_input","server_name_input","server_type_input","server_user_input","server_psw_input","server_ip","server_type","server_ssh_ip","DatabaseTwoTone","handleServer_ip_input","ApiTwoTone","handleServer_name_input","EditTwoTone","handleServer_type_input","handleServer_user_input","ContactsTwoTone","handleServer_psw_input","EyeInvisibleTwoTone","send_args","welcome_4","WelcomePage","current","steps","Step","next","ServerAddButton","submit_input","handleInput_server_type","input_server_type","handleInput_server_ip","input_server_ip","handleInput_server_name","input_server_name","DatabaseOutlined","footer","ServerDeleteButton","delete_server","ServerTable","server_status","FullscreenOutlined","d2","ServerTableHook","HomePage","Footer","Meta","textAlign","UserMenu","UserMenuFunc","borderRight","UserDeleteButton","user_id","delete_user","UserInfo","UserInfoTable","ifadmin","UserCreate","UserChangeMount","UserChange","input","options","suffixIcon","SearchOutlined","showSearch","defaultActiveFirstOption","showArrow","filterOption","onSearch","fetch_search","handleChange","UserPage","AuthExample","isAuthenticated","isSend","isLogin","PrivateRoute","authenticate","children","rest","pathname","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf5ebb2b.chunk.js","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class MultipleSwitch extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n    onSelectedChange = value => {\n        console.log(eval(value));\n    }\n\n    addItem = () => {\n        const { items, items_value, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class NetworkTypeOption extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n    onSelectedChange = value => {\n        console.log(eval(value));\n    }\n\n    addItem = () => {\n        const { items, items_value, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport {\n    Link,\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Menu, Row, Col, Dropdown, Avatar, message } from 'antd';\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Header, } = Layout;\n\n\nexport class AllHeader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.menu = (\n            <Menu>\n                <Menu.Item>\n                    <div onClick={() => this.logout()}>\n                        登出\n                    </div>\n                </Menu.Item>\n            </Menu>\n        )\n        this.state = {\n            username: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    logout() {\n        axios.post('/api',\n            {\n                api: 'logout',\n\n            }).then(data => {\n                message.info(\"登出成功！\");\n                window.location.reload();\n            });\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'check_login',\n\n            }).then(data => {\n                this.setState({\n                    username: data.data.username,\n                })\n            });\n    }\n\n    render() {\n        const { username } = this.state;\n        return (\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Row>\n                    <Col span={21}>\n                        <Menu\n                            theme=\"dark\"\n                            mode=\"horizontal\"\n                            defaultSelectedKeys={[this.props.number]}\n                            style={{ lineHeight: '64px' }}\n                        >\n                            <Menu.Item key=\"1\">\n                                <Link to=\"/\">功能操作</Link>\n                            </Menu.Item>\n                            <Menu.Item key=\"2\">\n                                <Link to=\"/user\">用户管理</Link>\n                            </Menu.Item>\n                        </Menu>\n                    </Col>\n                    <Col>\n                        <Dropdown overlay={this.menu}>\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                {username} <DownOutlined />\n                            </a>\n                        </Dropdown>\n                        <span>|</span>\n                        <Avatar icon={<UserOutlined />} />\n                    </Col>\n                </Row>\n            </Header>\n        )\n    }\n}","import React from 'react';\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { AppstoreOutlined, CloudServerOutlined, EyeOutlined, SaveOutlined, ApartmentOutlined, ArrowLeftOutlined, FolderOpenOutlined } from '@ant-design/icons';\nimport { Layout, Menu, } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\n\n\nexport class IndexSider extends React.Component {\n    // submenu keys of first level\n\n    constructor(props) {\n        super(props);\n        this.rootSubmenuKeys = ['sub1', 'sub2', 'sub3', 'sub4', 'sub5'];\n        this.state = {\n            openKeys: [this.props.openKey],\n            openOptions: [this.props.selectOptins],\n        };\n    }\n\n\n\n\n    onOpenChange = openKeys => {\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            this.setState({ openKeys });\n        } else {\n            this.setState({\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultOpenKeys={this.state.openKeys}\n                    defaultSelectedKeys={this.state.openOptions}\n                    onOpenChange={this.onOpenChange}\n                    style={{ width: 200 }}\n                    defaultOpenKeys={['sub1', 'sub2', 'sub3', 'sub4', 'sub5', 'sub6']}\n                >\n                    <Menu.Item key=\"back\">\n                        <ArrowLeftOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/`}>回到主页</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"0\">\n                        <EyeOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/control/${this.props.server_id}`}>全局总览</Link>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <CloudServerOutlined style={{ fontSize: '21px' }} />\n                                <span>服务器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={`/control/${this.props.server_id}/serverinfo`}>服务器总览</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={`/control/${this.props.server_id}/server_secret`}>服务器密钥管理</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub2\"\n                        title={\n                            <span>\n                                <AppstoreOutlined style={{ fontSize: '21px' }} />\n                                <span>容器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"5\">\n                            <Link to={`/control/${this.props.server_id}/containerinfo`}>容器总览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub4\"\n                        title={\n                            <span>\n                                <SaveOutlined style={{ fontSize: '21px' }} />\n                                <span>镜像管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"9\">\n                            <Link to={`/control/${this.props.server_id}/image`}>镜像列表</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub5\"\n                        title={\n                            <span>\n                                <ApartmentOutlined style={{ fontSize: '21px' }} />\n                                <span>网络管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"10\">\n                            <Link to={`/control/${this.props.server_id}/network`}>网卡一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub6\"\n                        title={\n                            <span>\n                                <FolderOpenOutlined style={{ fontSize: '21px' }} />\n                                <span>卷管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"11\">\n                            <Link to={`/control/${this.props.server_id}/volume`}>卷一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default function IndexMenu(props) {\n    let { server_id } = useParams();\n\n    return (<IndexSider server_id={server_id} openKey={props.openKey} selectOptins={props.selectOptins} />)\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Row, Col, PageHeader, Skeleton } from 'antd';\n\n\n\nfunction ContainerPageHeader() {\n    let { id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"容器详情\"\n            subTitle={`容器:${id}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport class ContainerInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: '',\n        }\n        this.get_args();\n    }\n\n    get_args() {\n        axios.post('/api',\n            {\n                api: 'one_container_info',\n                id: this.props.id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    data: data.data,\n                });\n            });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Skeleton active loading={this.state.loading}>\n                    {this.state.data.data}\n                </Skeleton>\n            </div>\n        );\n    }\n}\n\nexport function ContainerOne() {\n    let { server_id, id } = useParams();\n\n    return (\n        <ContainerInfo server_id={server_id} id={id} />\n    )\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Button, Menu, Dropdown, message, notification } from 'antd';\nimport { DownOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class OneContainerActionButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.menu = (\n            <Menu onClick={(e) => this.handleMenuClick(e)}>\n                <Menu.Item key=\"0\">\n                    <Link to={`${this.props.url}/create`}>创建新容器</Link>\n                </Menu.Item>\n                <Menu.Item key=\"1\">重启选中容器</Menu.Item>\n                <Menu.Item key=\"2\">停止选中容器</Menu.Item>\n                <Menu.Item key=\"3\">删除选中容器</Menu.Item>\n                <Menu.Item key=\"4\">删除已停止容器</Menu.Item>\n            </Menu>\n        );\n    }\n\n    async handleMenuClick(e) {\n        this.props.onLoading();\n        if (e.key === '4') {\n            await axios.post('/api',\n                {\n                    api: 'container_delete_stoped',\n                    server_id: this.props.server_id,\n                }).then(data => {\n                    console.log(data.data);\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `容器删除成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                });\n            this.props.onFresh();\n            return;\n        } else if (e.key === '0') {\n            this.props.onFresh();\n            return;\n        }\n        if (this.props.selected.length === 0) {\n            message.error('您没有选中任何容器');\n            this.props.onFresh();\n            return;\n        }\n        if (e.key === '1') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_restart',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '重启成功！',\n                            description:\n                                `容器:${this.props.selected[i]}重启成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '2') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_stop',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '停止成功！',\n                            description:\n                                `容器:${this.props.selected[i]}停止成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '3') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_delete',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `容器:${this.props.selected[i]}删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        }\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <div>\n                <Dropdown overlay={this.menu}>\n                    <Button disabled={this.props.disabled} loading={this.props.loading}>\n                        快捷操作 <DownOutlined />\n                    </Button>\n                </Dropdown>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Button, Descriptions, Badge, Tooltip, Skeleton, message } from 'antd';\nimport { EyeOutlined, PlayCircleOutlined, ReloadOutlined, PoweroffOutlined, FundProjectionScreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\n\n\nexport default class ContainerInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_inspect',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    handleStart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_start',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            });\n    }\n\n    handleRestart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_restart',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            });\n    }\n\n    handleStop() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_stop',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            });\n    }\n\n    handelGotoTerminal() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n                base64: true,\n            }).then(data => {\n                console.log(data.data.data)\n                let ip = data.data.data.ip;\n                let user = data.data.data.user;\n                let psw = data.data.data.psw;\n\n                window.location.replace(`/ssh?hostname=${ip}&username=${user}&password=${psw}&command=docker exec -it ${this.props.container_id} /bin/bash`);\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data, loading } = this.state;\n        if (data.NetworkSettings) {\n            const network_drive = Object.keys(data.NetworkSettings.Networks)[0]\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\"> {data.Name ? data.Name : \"\"} </Descriptions.Item>\n                            <Descriptions.Item label=\"网络信息\">{`${data.NetworkSettings.Networks[`${network_drive}`].IPAddress}(${network_drive})`}</Descriptions.Item>\n                            <Descriptions.Item label=\"状态\">\n                                {data.State ? data.State.Status == \"running\" ? <Badge status=\"processing\" text={data.State.Status} /> : <Badge status=\"error\" text={data.State.Status} /> : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\"> {data.Created.split(\".\")[0]} </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"操作\">\n                                <Tooltip placement=\"top\" title=\"启动容器\">\n                                    <Button loading={loading} type=\"primary\" shape=\"circle\" icon={<PlayCircleOutlined />} size=\"large\" onClick={() => this.handleStart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"重启容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<ReloadOutlined />} size=\"large\" onClick={() => this.handleRestart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"结束容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<PoweroffOutlined />} size=\"large\" danger onClick={() => this.handleStop()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"启动终端\">\n                                    {data.State.Status == \"running\" ?\n                                        <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" onClick={() => this.handelGotoTerminal()} />\n                                        :\n                                        <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" disabled />\n                                    }\n\n                                </Tooltip>\n                            </Descriptions.Item>\n                        </Descriptions>\n                        <br /><br />\n                        <Descriptions title=\"详细参数\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"镜像\">{data.Config.Image}</Descriptions.Item>\n                            <Descriptions.Item label=\"端口映射信息\">\n                                {data.NetworkSettings.Ports ? Object.keys(data.NetworkSettings.Ports).map((item, index) =>\n                                    data.NetworkSettings.Ports[`${item}`] ? data.NetworkSettings.Ports[`${item}`].map((item2, index2) =>\n                                        <div>\n                                            {`${item2.HostIp}:${item2.HostPort} => ${item}`}\n                                            <br /><br />\n                                        </div>\n                                    ) : item\n                                ) : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"启动参数\">\n                                {data.Config.Cmd ? data.Config.Cmd.map((item, index) =>\n                                    item\n                                ) : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"环境变量\">\n                                {\n                                    data.Config.Env.map((item, index) =>\n                                        <div>\n                                            {item}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                        <br /><br />\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Table, Tag, PageHeader, Card } from 'antd';\n\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport OneContainerActionButton from './one_container_action_button'\nimport ContainerInspect from './one_container_inspect'\n\nfunction ContainerPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"容器详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nfunction ContainerInspectButton(props) {\n    let { server_id } = useParams();\n\n    return (\n        <ContainerInspect server_id={server_id} container_id={props.container_id} onFresh={() => props.onFresh()} />\n    )\n}\n\nclass ContainerOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Names',\n                key: 'name',\n            },\n            {\n                title: '对应镜像',\n                key: 'image',\n                render: (text, record) => (\n                    record.Image\n                )\n            },\n            {\n                title: '容器ip',\n                key: 'ip',\n                render: (text, record) => this.show_ip(text, record)\n            },\n            {\n                title: '状态',\n                key: 'stauts',\n                render: (text, record) => {\n                    if (record.State === \"running\") {\n                        return (<Tag color=\"cyan\">{record.State}</Tag>);\n                    } else {\n                        return (<Tag color=\"red\">{record.State}</Tag>)\n                    }\n                }\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <span>\n                        <ContainerInspectButton container_id={record.Id} onFresh={() => this.handleRefresh()} />\n                    </span>\n                ),\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n            loading: false\n        })\n    }\n\n    handleLoading() {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    show_ip(text, record) {\n        let get_net_work_name = Object.keys(record.NetworkSettings.Networks)[0]\n        return (\n            record.NetworkSettings.Networks[get_net_work_name].IPAddress\n        )\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"容器一览\" extra={<OneContainerActionButton disabled={!hasSelected} loading={loading} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} onLoading={() => this.handleLoading()} />} >\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\n\nexport default function ContainerOneServer() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <ContainerPageHeader />\n            <ContainerOneServerTable server_id={server_id} url={url} />\n        </div>\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Spin } from 'antd';\nimport { ControlTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\nexport default class ContainerSearchImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_id: this.props.server_id,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_id } = this.state\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_id: server_id,\n            }).then(data => {\n                console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled, value, } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.RepoTags}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Spin } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class ContainerSearchNetwork extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_id: this.props.server_id,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_id } = this.state\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_id: server_id,\n            }).then(data => {\n                console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled, value, } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.Name}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input, Form, Radio } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class PortsChoose extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            items_value: {},\n            items2: [],\n\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: '0.0.0.0',\n            input_hport: '',\n            selected: [],\n        };\n    }\n\n    onCportChange = event => {\n        this.setState({\n            input_cport: event.target.value,\n        });\n    }\n\n    onHipChange = event => {\n        this.setState({\n            input_hip: event.target.value,\n        });\n    }\n\n    onHportChange = event => {\n        this.setState({\n            input_hport: event.target.value,\n        });\n    }\n\n    onTypeChange = value => {\n        this.setState({\n            input_type: value.target.value\n        })\n    }\n\n    onSelectedChange = value => {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            let one_key = Object.keys(JSON.parse(value[i]))[0]\n            temp_list = [...temp_list, `{\"${one_key}\":{}}`]\n        }\n        this.props.onChange(value, temp_list)\n    }\n\n    addItem = () => {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_cport}/${input_type}\":[{\"HostIp\":\"${input_hip}\",\"HostPort\":\"${input_hport}\"}]}`],\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: \"0.0.0.0\",\n            input_hport: \"\",\n        });\n    };\n\n    render() {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '320px' }}\n                placeholder={this.props.args}\n                onChange={this.onSelectedChange}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            容器端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_cport} placeholder=\"443\" onChange={this.onCportChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            转发类型:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Radio.Group value={input_type} buttonStyle=\"solid\" onChange={this.onTypeChange}>\n                                <Radio.Button value=\"tcp\">TCP</Radio.Button>\n                                <Radio.Button value=\"udp\">UDP</Radio.Button>\n                            </Radio.Group>\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机IP:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hip} placeholder=\"0.0.0.0\" style={{ flex: 'auto' }} onChange={this.onHipChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hport} placeholder=\"443\" style={{ flex: 'auto' }} onChange={this.onHportChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Input, Form, Divider, Select, Button, message, notification, Tabs, Switch, Slider, InputNumber } from 'antd';\nimport { BarChartOutlined, BarcodeOutlined, DropboxOutlined, ApartmentOutlined, SlidersOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport ContainerSearchImage from \"./image_select\"\nimport ContainerSearchNetwork from \"./network_select\"\nimport MultipleSwitch from './mutiple_switch'\nimport PortsChoose from './ports_choose'\n\nconst { TabPane } = Tabs;\n\nfunction ContainerPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建容器\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass ContainerCreate_page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n\n            container_name_input: \"\",\n            image_name_input: \"\",\n            ports: {},\n            ports2: {},\n\n            command_input: \"\",\n            entrypotin_input: \"\",\n            user_input: \"\",\n            ifTty: false,\n            ifInteractive: false,\n\n            network_name_input: \"\",\n            hostname: \"\",\n            network_ip: \"\",\n\n            env: [],\n            label: [],\n        }\n    }\n\n    // =======================获取输入=======================\n    handleContainer_name_input(e) {\n        this.setState({\n            container_name_input: e.target.value\n        })\n    }\n\n    handleImage_name_input(value) {\n        this.setState({\n            image_name_input: value.label[0]\n        })\n    }\n\n    handlePorts(value1, value2) {\n        let temp_dict = {};\n        let temp_dict2 = {}\n        for (let i = 0; i < value1.length; i++) {\n            temp_dict = { ...temp_dict, ...JSON.parse(value1[i]) }\n        }\n        for (let i = 0; i < value2.length; i++) {\n            temp_dict2 = { ...temp_dict2, ...JSON.parse(value2[i]) }\n        }\n        this.setState({\n            ports: temp_dict,\n            ports2: temp_dict2,\n        })\n    }\n\n    handleCommand_input(e) {\n        this.setState({\n            command_input: e.target.value\n        })\n    }\n\n    handleEntrypotin_input(e) {\n        this.setState({\n            entrypotin_input: e.target.value\n        })\n    }\n\n    handleUser_input(e) {\n        this.setState({\n            user_input: e.target.value\n        })\n    }\n\n    handleIfTty() {\n        const { ifTty } = this.state;\n        if (ifTty) {\n            this.setState({\n                ifTty: false\n            })\n        } else {\n            this.setState({\n                ifTty: true\n            })\n        }\n    }\n\n    handleIfInteractive() {\n        const { ifInteractive } = this.state;\n        if (ifInteractive) {\n            this.setState({\n                ifInteractive: false\n            })\n        } else {\n            this.setState({\n                ifInteractive: true\n            })\n        }\n    }\n\n\n\n    handleNetwork_name_input(value) {\n        this.setState({\n            network_name_input: value.label\n        })\n    }\n\n    handleHostname(e) {\n        this.setState({\n            hostname: e.target.value\n        })\n    }\n\n    handleNetwork_ip(e) {\n        this.setState({\n            network_ip: e.target.value\n        })\n    }\n\n    handleEvn(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            env: temp_list,\n        })\n    }\n\n    handleLabel(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            label: temp_list,\n        })\n    }\n\n    test() {\n        console.log(this.state);\n    }\n    // =======================================================\n\n    async handle_send() {\n        const {\n            container_name_input,\n            image_name_input,\n            ports,\n            ports2,\n            command_input,\n            entrypotin_input,\n            user_input,\n            ifTty,\n            ifInteractive,\n            network_name_input,\n            hostname,\n            network_ip,\n            env,\n            label\n        } = this.state;\n\n        if (image_name_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            return;\n        }\n\n        let network_config = '';\n        if (network_name_input !== \"\") {\n            network_config = `{\"${network_name_input}\":{\"IPAMConfig\":{\"IPv4Address\":\"${network_ip}\"}}}`;\n            network_config = JSON.parse(network_config);\n        }\n\n        message.loading({ content: '容器创建中', key: 'updatable', duration: 0 });\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'container_add',\n                server_id: this.props.server_id,\n                image: image_name_input,\n                name: container_name_input,\n                connect_port: ports,\n                export_port: ports2,\n                cmd: command_input,\n                entrypoint: entrypotin_input,\n                user: user_input,\n                Tty: ifTty,\n                interactive: ifInteractive,\n                network_model: network_config,\n            }).then(data => {\n                this.setState({\n                    loading: false\n                })\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    message.loading({ content: '容器启动中', key: 'updatable', duration: 0 });\n                    axios.post('/api',\n                        {\n                            api: 'container_start',\n                            server_id: this.props.server_id,\n                            container_id: data.data.data.data.Id\n\n                        }).then(data => {\n                            console.log(data.data.data)\n                            setTimeout(() => {\n                                message.success({ content: '容器启动成功！', key: 'updatable', duration: 2 });\n                            }, 1000);\n                            window.history.back();\n                        });\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n    }\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"container_name\"\n                    >\n                        <Input placeholder=\"为新容器起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleContainer_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">镜像选择</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"镜像\"\n                        name=\"image_name\"\n                    >\n                        <ContainerSearchImage server_id={this.props.server_id} onChange={value => this.handleImage_name_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">端口映射</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"规则设置\"\n                        name=\"ports\"\n                    >\n                        <PortsChoose onChange={(value1, value2) => this.handlePorts(value1, value2)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">高级设置(无特殊需求可以忽略)</Divider>\n                <Tabs defaultActiveKey=\"1\" type=\"card\" >\n                    <TabPane\n                        tab={\n                            <span>\n                                <SlidersOutlined />\n                                参数设置\n                            </span>\n                        }\n                        key=\"1\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"进入命令(cmd)\"\n                                    name=\"command\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleCommand_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"入口参数(entrypoint)\"\n                                    name=\"entrypoint\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleEntrypotin_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"设定运行用户\"\n                                    name=\"user\"\n                                >\n                                    <Input placeholder=\"root\" style={{ width: '450px' }} onChange={e => this.handleUser_input(e)} />\n                                </Form.Item>\n                            </Form>\n                            创建模拟终端(-t):<Switch onChange={() => this.handleIfTty()} style={{ marginLeft: 4, marginRight: 8 }} />\n                            |\n                            交互模式(-i):<Switch onChange={() => this.handleIfInteractive()} style={{ marginLeft: 4, marginRight: 8 }} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <ApartmentOutlined />\n                                网络设置\n                            </span>\n                        }\n                        key=\"2\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"网卡选择\"\n                                    name=\"network_drive\"\n                                >\n                                    <ContainerSearchNetwork server_id={this.props.server_id} onChange={value => this.handleNetwork_name_input(value)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"主机名(Hostname)\"\n                                    name=\"hostname\"\n                                >\n                                    <Input placeholder=\"hostname\" style={{ width: '450px' }} onChange={e => this.handleHostname(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"IP\"\n                                    name=\"network_ip\"\n                                >\n                                    <Input placeholder=\"172.99.99.99\" style={{ width: '450px' }} onChange={e => this.handleNetwork_ip(e)} />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <DropboxOutlined />\n                                环境变量\n                            </span>\n                        }\n                        key=\"3\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器设置环境变量\" onChange={value => this.handleEvn(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <BarcodeOutlined />\n                                标签设置\n                            </span>\n                        }\n                        key=\"4\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器添加自定义标签(可选)\" onChange={value => this.handleLabel(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <BarChartOutlined />\n                                资源分配\n                            </span>\n                        }\n                        key=\"5\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"CPU\"\n                                    name=\"cpu\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                            <Form>\n                                <Form.Item\n                                    label=\"Memeory\"\n                                    name=\"memeory\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                </Tabs>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" loading={loading} onClick={() => this.handle_send()}>\n                    提交\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function ContainerCreate() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ContainerCreate_page server_id={server_id} url={url} />\n        </div>\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ImageDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_image() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'image_delele',\n                    server_id: this.props.server_id,\n                    image_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `镜像删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_image()}\n            >\n                删除所选镜像\n            </Button>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Button, Modal, notification, Input, message } from 'antd';\nimport { DownloadOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ImageAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n\n            input_image_name: \"\"\n        }\n    }\n\n    async send_message() {\n        const { input_image_name } = this.state;\n        this.setState({\n            loading: true,\n        })\n        message.loading({ content: '服务器下载中...', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'image_pull',\n                server_id: this.props.server_id,\n                image_name: input_image_name,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '下载成功！',\n                        description:\n                            `镜像:${input_image_name}下载成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        visible: false,\n                        loading: false,\n                        input_image_name: '',\n                    });\n                    this.props.onFresh();\n                } else {\n                    notification.open({\n                        message: '下载失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        loading: false,\n                    });\n                }\n\n            });\n    }\n\n    handleInput_image_name(e) {\n        this.setState({\n            input_image_name: e.target.value,\n        })\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.send_message();\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { input_image_name, loading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} onClick={this.showModal}>\n                    添加新镜像\n                </Button>\n                <Modal\n                    title=\"添加新镜像\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    confirmLoading={loading}\n                >\n                    <p>服务器将访问dockerhub搜索并下载镜像</p>\n                    <Input placeholder=\"请输入镜像名字\" addonBefore=\"docker.io\" onChange={(e) => this.handleInput_image_name(e)} value={input_image_name} />\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Descriptions, Tooltip, Skeleton } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class ImageInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_inspect',\n                server_id: this.props.server_id,\n                image_id: this.props.image_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <a onClick={this.showDrawer}>{this.props.image_id}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\">{data.RepoTags}</Descriptions.Item>\n                            <Descriptions.Item label=\"Docker版本\">{data.DockerVersion}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"构建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item label=\"构建平台\">{data.Architecture}</Descriptions.Item>\n                            <Descriptions.Item label=\"适用系统\">{data.Os}</Descriptions.Item>\n                            <Descriptions.Item label=\"镜像结构\">\n                                {\n                                    data.RootFS.Layers.map((item, index) =>\n                                        <div>\n                                            {`${index}: ${item}`}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <a onClick={this.showDrawer}>{this.props.image_id}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Tag, Table, Card } from 'antd';\nimport { ControlTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport ImageDeleteButton from './delete_button'\nimport ImageAddButton from './add_button'\nimport ImageInspect from './image_inspect'\n\n\nexport default function ImageOneServer(props) {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ImagePageHeader />\n            <ImageOneServerTable server_id={server_id} url={url} />\n        </div>\n    );\n}\n\nclass ImageOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: 'ID',\n                key: 'id',\n                width: '30%',\n                ellipsis: true,\n                render: (text, record) => (\n                    <ImageInspect image_id={record.Id} server_id={this.props.server_id} />\n                )\n            },\n            {\n                title: 'Tag',\n                key: 'tag',\n                render: (text, record) => (\n                    <Tag color=\"#108ee9\">{record.RepoTags}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"镜像一览\" extra={<ImageAddButton server_id={this.props.server_id} onFresh={() => this.handleRefresh()} />} >\n                    <div style={{ marginBottom: 16 }}>\n                        <ImageDeleteButton disabled={!hasSelected} loading={loading} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nfunction ImagePageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"镜像详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class NetworkDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_network() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'network_delete',\n                    server_id: this.props.server_id,\n                    network_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `网络删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_network()}\n            >\n                删除所选网络\n            </Button>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Descriptions, Tooltip, Skeleton } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class NetworkInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_inspect',\n                server_id: this.props.server_id,\n                network_id: this.props.network_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <a onClick={this.showDrawer}>{this.props.network_name}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\">{data.Name}</Descriptions.Item>\n                            <Descriptions.Item label=\"网络类型\">{data.Driver}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"创建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"详情\">\n                                {\n                                    data.IPAM.Config.map((item, index) =>\n                                        <div>\n                                            {`网关: ${item.Gateway}`}\n                                            <br />\n                                            {`网段: ${item.Subnet}`}\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <a onClick={this.showDrawer}>{this.props.network_name}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Button, Tag, Table, Card } from 'antd';\nimport { ApartmentOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport NetworkDeleteButton from './delete_button'\nimport NetworkInspect from './network_inspect'\n\nexport default function NetworkOneServer(props) {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <NetworkPageHeader />\n            <NetworlOneServerTable server_id={server_id} url={url} />\n        </div>\n    );\n}\n\nclass NetworlOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                key: 'name',\n                render: (text, record) => (\n                    <NetworkInspect network_name={record.Name} network_id={record.Id} server_id={this.props.server_id}/>\n                )\n            },\n            {\n                title: '网络类型',\n                key: 'type',\n                render: (text, record) => (\n                    <Tag color=\"#2db7f5\">{record.Driver}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    record.Created\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"网络一览\"\n                    extra={\n                        <Link to={`${this.props.url}/create`}>\n                            <Button type=\"primary\" shape=\"round\" icon={<ApartmentOutlined />} >\n                                添加新网络\n                        </Button>\n                        </Link>\n                    }\n                >\n                    <div style={{ marginBottom: 16 }}>\n                        {<NetworkDeleteButton disabled={!hasSelected} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} /> }\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\nfunction NetworkPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"网络详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Input, Form, Divider, Select, Button, message, notification } from 'antd';\nimport { UploadOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport NetworkTypeOption from './network_type_option'\n\n\nfunction NetworkPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建新网络\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass NetworkCreate_page extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n\n            network_name_input: \"\",\n            network_type_input: \"bridge\",\n            network_type_option_input: {},\n            network_subnet_input: \"\",\n            network_iprange_input: \"\",\n            network_gateway_input: \"\",\n            network_label_input: [],\n            network_macvlan_drive_input: \"\",\n        }\n    }\n\n    // =======================获取输入=======================\n    handleNetwork_name_input(e) {\n        this.setState({\n            network_name_input: e.target.value,\n        })\n    }\n\n    handleNetwork_type_input(value) {\n        this.setState({\n            network_type_input: value,\n        })\n    }\n\n    handleNetwork_type_option_input(value) {\n        let temp_list = {};\n        for (let i = 0; i < value.length; i++) {\n            temp_list = { ...temp_list, ...JSON.parse(value[i]) }\n        }\n        this.setState({\n            network_type_option_input: temp_list,\n        })\n    }\n\n    handleNetwork_subnet_input(e) {\n        this.setState({\n            network_subnet_input: e.target.value,\n        })\n    }\n\n    handleNetwork_iprange_input(e) {\n        this.setState({\n            network_iprange_input: e.target.value,\n        })\n    }\n\n    handleNetwork_gateway_input(e) {\n        this.setState({\n            network_gateway_input: e.target.value,\n        })\n    }\n\n    handleNetwork_macvlan_drive_input(e) {\n        this.setState({\n            network_macvlan_drive_input: e.target.value,\n        })\n    }\n\n    handleNetwork_label_input(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            network_label_input: temp_list,\n        })\n    }\n    // =====================================================\n\n    async handleUpload() {\n        this.setState({\n            loading: true\n        })\n        const {\n            network_name_input,\n            network_type_input,\n            network_type_option_input,\n            network_subnet_input,\n            network_iprange_input,\n            network_gateway_input,\n            network_label_input,\n            network_macvlan_drive_input,\n        } = this.state\n\n        if (network_name_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            this.setState({\n                loading: false\n            })\n            return;\n        }\n        let network_type_option_input_new = network_type_option_input;\n        if (network_type_input === \"macvlan\") {\n            network_type_option_input_new = { ...network_type_option_input, ...JSON.parse(`{\"parent\":\"${network_macvlan_drive_input}\"}`) }\n        }\n        message.loading({ content: '网络创建中', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'network_create',\n                server_id: this.props.server_id,\n                network_name: network_name_input,\n                network_drive: network_type_input,\n                subnet: network_subnet_input,\n                ip_range: network_iprange_input,\n                gateway: network_gateway_input,\n                option: network_type_option_input_new,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    window.history.back();\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        const { Option } = Select;\n        const { loading, network_type_input } = this.state;\n        return (\n            <div>\n                <NetworkPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"network_name\"\n                    >\n                        <Input placeholder=\"为新网络起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleNetwork_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络类型配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型\"\n                        name=\"network_type\"\n                    >\n                        <Select defaultValue=\"bridge\" style={{ width: '450px' }} onChange={value => this.handleNetwork_type_input(value)}>\n                            <Option value=\"bridge\">NAT</Option>\n                            <Option value=\"macvlan\">桥接</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义选项(可选)\" onChange={value => this.handleNetwork_type_option_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络详情配置</Divider>\n                {network_type_input === \"macvlan\" ?\n                    <Form>\n                        <Form.Item\n                            label=\"桥接网卡\"\n                            name=\"macvlan_drive\"\n                        >\n                            <Input placeholder=\"如:eth0\" style={{ width: '450px' }} onChange={e => this.handleNetwork_macvlan_drive_input(e)} />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"子网段\"\n                            name=\"subnet\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/16\" style={{ width: '450px' }} onChange={e => this.handleNetwork_subnet_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"IP段\"\n                            name=\"iprange\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/25\" style={{ width: '450px' }} onChange={e => this.handleNetwork_iprange_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"网关\"\n                            name=\"gateway\"\n                        >\n                            <Input placeholder=\"如:172.18.0.1\" style={{ width: '450px' }} onChange={e => this.handleNetwork_gateway_input(e)} />\n\n                        </Form.Item>\n                    </Form>\n                    :\n                    <Form>\n                        <Form.Item\n                            label=\"子网段\"\n                            name=\"subnet\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/16\" style={{ width: '450px' }} onChange={e => this.handleNetwork_subnet_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"IP段\"\n                            name=\"iprange\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/25\" style={{ width: '450px' }} onChange={e => this.handleNetwork_iprange_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"网关\"\n                            name=\"gateway\"\n                        >\n                            <Input placeholder=\"如:172.18.0.1\" style={{ width: '450px' }} onChange={e => this.handleNetwork_gateway_input(e)} />\n\n                        </Form.Item>\n                    </Form>}\n\n                <Divider orientation=\"left\">高级配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义标签(可选)\" onChange={value => this.handleNetwork_label_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" icon={<UploadOutlined />} shape=\"round\" onClick={() => this.handleUpload()} loading={loading} >\n                    创建网络\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function NetworkCreate() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (<NetworkCreate_page server_id={server_id} url={url} />)\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { QrcodeOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexCpuData(props) {\n    let used = props.data.cpu.cpu_used\n    let number = props.data.cpu.cpu_number\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"CPU占用率\" value={used} suffix=\"%\" />\n            <Divider style={{ margin: '4px 0' }} />\n            <QrcodeOutlined />  CPU核心数量: <b>{number}</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexMemoryData(props) {\n    let used = props.data.memory.used;\n    used = used.toFixed(2);\n    let total = props.data.memory.total;\n    total = total.toFixed(2);\n    let free = props.data.memory.free;\n    free = free.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"内存占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  内存总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexSwapData(props) {\n    let used = props.data.memory_swap.used;\n    used = used.toFixed(2);\n    let total = props.data.memory_swap.total;\n    total = total.toFixed(2);\n    let free = props.data.memory_swap.free;\n    free = free.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"交换空间占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  交换空间总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexNetworkData(props) {\n    let receive = props.data.network.receive;\n    let send = props.data.network.send;\n    let time = props.data.network.time;\n    let last_receive = props.data.network.last_receive;\n    let last_send = props.data.network.last_send;\n    let last_time = props.data.network.last_time;\n\n    let download = (receive - last_receive) / (time - last_time);\n    let upload = (send - last_send) / (time - last_time)\n    let download_unit = 'b/s'\n    let upload_unit = 'b/s'\n\n    download /= 8;\n    if (download > 1000) {\n        download /= 1024;\n        download_unit = 'kb/s';\n        if (download > 1000) {\n            download /= 1024;\n            download_unit = 'mb/s';\n            if (download > 1000) {\n                download /= 1024;\n                download_unit = 'gb/s';\n            }\n        }\n    }\n    upload /= 8;\n    if (upload > 1000) {\n        upload /= 1024;\n        upload_unit = 'kb/s';\n        if (upload > 1000) {\n            upload /= 1024;\n            upload_unit = 'mb/s';\n            if (upload > 1000) {\n                upload /= 1024;\n                upload_unit = 'gb/s';\n            }\n        }\n    }\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic\n                title=\"网络接收数据\"\n                value={download}\n                precision={2}\n                valueStyle={{ color: '#cf1322' }}\n                prefix={<ArrowDownOutlined />}\n                suffix={download_unit}\n            />\n            <Divider style={{ margin: '10px 0' }} />\n            <Statistic\n                title=\"网络发送数据\"\n                value={upload}\n                precision={2}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<ArrowUpOutlined />}\n                suffix={upload_unit}\n            />\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { AppstoreOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexContainerData(props) {\n    let total = 0;\n    let running = 0;\n    let aaa = props.data.Containers;\n    if (aaa) {\n        total = props.data.Containers.length;\n        running = 0;\n        for (let i = 0; i < total; i++) {\n            if (props.data.Containers[i].State === \"running\") {\n                running++;\n            }\n        }\n    }\n    return (\n        <Card size=\"small\" title={<div><AppstoreOutlined spin={true} style={{ fontSize: '21px' }} />   <b>容器</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        已创建: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        正在运行: <b>{running}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { SaveOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexImageData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Images\n    if (aaa) {\n        total = props.data.Images.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Images[i].Size;\n        }\n        size = size / 1024 / 1024 / 1024;\n        size = size.toFixed(2);\n    }\n\n    return (\n        <Card size=\"small\" title={<div><SaveOutlined spin={true} style={{ fontSize: '21px' }} />  <b>镜像</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size} GB</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { FolderOpenOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexVolumeData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Volumes\n    if (aaa) {\n        total = props.data.Volumes.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Volumes[i].UsageData.Size\n        }\n        size = size / 1024 / 1024\n        if (size > 1000) {\n            size = size / 1024\n            size = size.toFixed(2);\n            size = `${size} GB`\n        }else{\n            size = size.toFixed(2);\n            size = `${size} MB`\n        }\n        \n    }\n\n    return (\n        <Card size=\"small\" title={<div><FolderOpenOutlined spin={true} style={{ fontSize: '21px' }} />  <b>卷</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport { Row, Col, Divider, PageHeader } from 'antd'\nimport 'antd/dist/antd.css';\n//import { AppleOutlined, AndroidOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport IndexCpuData from './index_cpu'\nimport IndexMemoryData from './index_memory'\nimport IndexSwapData from './index_swap'\nimport IndexNetworkData from './index_network'\nimport IndexContainerData from './index_container'\nimport IndexImageData from './index_image'\nimport IndexVolumeData from './index_volume'\n\n\nexport default function IndexData() {\n    let { server_id } = useParams();\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"总览\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <IndexDataControl server_id={server_id} />\n        </div>\n    );\n}\n\nclass IndexDataControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                cpu: {\n                    cpu_number: 0,\n                    cpu_used: 0,\n                },\n                memory: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                memory_swap: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                network: {\n                    receive: 0,\n                    send: 0,\n                    time: 0,\n                    last_receive: 0,\n                    last_send: 0,\n                    last_time: 0,\n                }\n            },\n            data_docker: {}\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.fetch(), 1000);\n        this.fetch_docker();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'check_server_status',\n                server_id: this.props.server_id,\n            }).then(d => {\n                const { data } = this.state;\n                let data2 = {\n                    ...d.data.data.data\n                }\n                data2.network.last_receive = data.network.receive\n                data2.network.last_send = data.network.send\n                data2.network.last_time = data.network.time\n                this.setState({\n                    data: data2\n                })\n            });\n    }\n\n    fetch_docker() {\n        axios.post('/api',\n            {\n                api: 'system_use',\n                server_id: this.props.server_id,\n            }).then(d => {\n                console.log(d.data.data.data);\n                this.setState({\n                    data_docker: d.data.data.data\n                })\n            });\n    }\n\n    callback(key) {\n        console.log(key);\n    }\n\n\n    render() {\n        const { data, data_docker } = this.state\n        return (\n            <div>\n                <Divider orientation=\"left\">系统资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={6} >\n                        <IndexCpuData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexMemoryData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexSwapData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexNetworkData data={data} />\n                    </Col>\n                </Row>\n                <Divider orientation=\"left\">Docker资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={8} >\n                        <IndexContainerData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexImageData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexVolumeData data={data_docker} />\n                    </Col>\n\n                </Row>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Descriptions, Skeleton, PageHeader, Divider, Typography, message } from 'antd';\nimport axios from 'axios';\n\nconst { Paragraph } = Typography;\n\nexport default function ServerInfo(props) {\n    let { server_id } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器信息\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerInfoShow server_id={server_id} />\n        </div>\n    );\n}\n\n\nclass ServerInfoShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data1: {},\n            data2: {},\n            name: \"\",\n            ssh: \"\"\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'system_infomation',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data1: data.data.data.data\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'system_version',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data2: data.data.data.data\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_one_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    name: data.data.name\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n                base64: true,\n            }).then(data => {\n                this.setState({\n                    ssh: data.data.data.ip\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    onChange = str => {\n        const { name } = this.state;\n        if (name === str) {\n            return;\n        }\n        console.log('Content change:', str);\n        axios.post('/api',\n            {\n                api: 'server_change_name',\n                server_id: this.props.server_id,\n                server_name: str,\n            }).then(data => {\n                this.setState({\n                    name: str\n                })\n                message.success(\"名字修改成功！\")\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    onChangeSsh = str => {\n        const { ssh } = this.state;\n        if (ssh === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_ssh',\n                server_id: this.props.server_id,\n                server_ssh: str,\n            }).then(data => {\n                this.setState({\n                    ssh: str\n                })\n                message.success(\"ssh服务器ip修改成功！\")\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    render() {\n        const { data1, data2, name, ssh } = this.state;\n        if (data1.OSType) {\n            let mem = data1.MemTotal / 1024 / 1024 / 1024;\n            mem = mem.toFixed(2);\n            return (\n                <div>\n                    <Descriptions\n                        title=\"用户设定\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"节点名字\">\n                            <Paragraph editable={{ onChange: this.onChange }}>{name}</Paragraph>\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"节点ssh服务ip\">\n                            <Paragraph editable={{ onChange: this.onChangeSsh }}>{ssh}</Paragraph>\n                        </Descriptions.Item>\n                    </Descriptions>\n                    <br /><br />\n                    <Descriptions\n                        title=\"系统信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"系统内核\">{data1.OSType}</Descriptions.Item>\n                        <Descriptions.Item label=\"系统名字\">{data1.Name}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU平台\">{data1.Architecture}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU数量\">{data1.NCPU}</Descriptions.Item>\n                        <Descriptions.Item label=\"内存总量\">\n                            {`${mem} GB`}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"驱动类型\">\n                            {data1.Driver}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"详细信息\">\n                            {`内核版本: ${data1.KernelVersion}`}\n                            <br />\n                            {`系统版本: ${data1.OperatingSystem}`}\n                            <br />\n                            {`ID: ${data1.ID}`}\n                        </Descriptions.Item>\n                    </Descriptions>\n                    <br /><br />\n                    <Descriptions\n                        title=\"Docker信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"版本\">{data2.Version}</Descriptions.Item>\n                        <Descriptions.Item span={2} label=\"构建时间\">{data2.BuildTime}</Descriptions.Item>\n                        <Descriptions.Item label=\"api版本\">{data2.ApiVersion}</Descriptions.Item>\n                        <Descriptions.Item label=\"适用平台\">{data2.Arch}</Descriptions.Item>\n                        <Descriptions.Item label=\"Go语言版本\">{data2.GoVersion}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Skeleton active />\n                    <Skeleton active />\n                    <Skeleton active />\n                </div>\n            );\n        }\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Typography, Descriptions, Alert, PageHeader, Divider, message } from 'antd';\nimport axios from 'axios';\nconst { Paragraph } = Typography;\n\nexport default function ServerPsw(props) {\n    let { server_id } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器密钥信息\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerPswShow server_id={server_id} />\n        </div>\n    );\n}\n\nclass ServerPswShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            user: \"暂无权限查看\",\n            psw: \"暂无权限查看\"\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'psw_check',\n            }).then(data => {\n                console.log(data.data.id)\n                this.setState({\n                    id: data.data.id\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    user: data.data.data.user,\n                    psw: data.data.data.psw\n                })\n            });\n    }\n\n    onChangeUser = str => {\n        const { user } = this.state;\n        if (user === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_user',\n                server_id: this.props.server_id,\n                server_user: str,\n            }).then(data => {\n                if (data.data.status === 0) {\n                    this.setState({\n                        user: str\n                    })\n                    message.success(\"用户修改成功！\")\n                } else {\n                    message.warning(\"只有管理员才能修改\")\n                }\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    onChangePsw = str => {\n        const { psw } = this.state;\n        if (psw === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_psw',\n                server_id: this.props.server_id,\n                server_psw: str,\n            }).then(data => {\n                if (data.data.status === 0) {\n                    this.setState({\n                        psw: str\n                    })\n                    message.success(\"密码修改成功！\")\n                } else {\n                    message.warning(\"只有管理员才能修改\")\n                }\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    render() {\n        const { id, user, psw } = this.state;\n        return (\n            <div>\n                <Alert\n                    message=\"关于通讯密钥\"\n                    description=\"通讯密钥由系统自动生成，用于与控制节点通信时使用，原则上不允许更改。如果服务器与控制节点绑定失败，可尝试复制通讯密钥手动添加至控制节点！\"\n                    type=\"info\"\n                    showIcon\n                />\n                <br />\n                <Descriptions\n                    title=\"服务器密钥\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Descriptions.Item label=\"通讯密钥\" span={4}>\n                        <Paragraph copyable>{id}</Paragraph>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"登录服务器用户\">\n                        <Paragraph editable={{ onChange: this.onChangeUser }}>{user}</Paragraph>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"登录服务器密码\">\n                        <Paragraph editable={{ onChange: this.onChangePsw }}>{psw}</Paragraph>\n                    </Descriptions.Item>\n                </Descriptions>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification, Popconfirm } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class VolumeDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_volume() {\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'volume_delete_unused',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    let free_size = data.data.data.data.SpaceReclaimed / 1024 / 1024\n                    if (free_size > 1000) {\n                        free_size = free_size / 1024;\n                        free_size = `${free_size.toFixed(2)} GB 储存空间`\n                    } else {\n                        free_size = `${free_size.toFixed(2)} MB 储存空间`\n                    }\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `已释放: ${free_size}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                } else {\n                    notification.open({\n                        message: '删除失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                }\n            });\n        this.setState({\n            loading: false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const { loading } = this.state\n        return (\n            <Popconfirm placement=\"top\" title=\"该操作无法撤销，您确定要删除未使用的卷吗？\" onConfirm={() => this.delete_volume()} okText=\"确定\" cancelText=\"我再想想\">\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    danger\n                    disabled={this.props.disabled}\n                    loading={loading}\n                >\n                    删除未使用的卷\n            </Button>\n            </Popconfirm>\n        );\n    }\n}","import React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Table, Tag, PageHeader, Card } from 'antd';\n\nimport axios from 'axios';\n\nimport VolumeDeleteButton from './delete_button'\n\n\n\nfunction VolumePageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"卷详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport default function VolumeOneServer() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <VolumePageHeader />\n            <VolumeOneServerTable server_id={server_id} url={url} />\n        </div>\n    )\n}\n\nclass VolumeOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Name',\n                key: 'name',\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                dataIndex: 'CreatedAt',\n            }\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'volume_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data.Volumes,\n                    loading: false,\n                })\n            });\n    }\n\n    fresh_table() {\n        this.fetch();\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"卷一览\" extra={<VolumeDeleteButton server_id={this.props.server_id} onFresh={() => this.fresh_table()} />} >\n                    <Table loading={loading} rowKey={record => record.Name} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Breadcrumb } from 'antd';\n\nimport { AllHeader } from '../../components/header'\nimport IndexMenu from '../../components/index_menu'\nimport { ContainerOne } from '../../components/container_info'\nimport ContainerOneServer from '../../components/container_table/one_container_table'\nimport ContainerCreate from '../../components/container_create'\nimport ImageOneServer from '../../components/image_table/one_server_image'\nimport NetworkOneServer from '../../components/network_table/one_network'\nimport NetworkCreate from '../../components/network_create'\nimport IndexData from '../../components/index_data'\nimport ServerInfo from '../../components/server_info'\nimport ServerPsw from '../../components/server_psw'\nimport VolumeOneServer from '../../components/volume_table'\n\n\n\nconst { Content } = Layout;\n\n\nexport default function Index() {\n    let { url } = useRouteMatch();\n\n    return (\n        <Layout>\n            <AllHeader number={'1'} />\n            <Layout>\n                <Switch>\n                    <Route exact path={`${url}/:server_id`}>\n                        <IndexMenu selectOptins='0' />\n                    </Route>\n                    <Route path={`${url}/:server_id/serverinfo`}>\n                        <IndexMenu openKey='sub1' selectOptins='1' />\n                    </Route>\n                    <Route path={`${url}/:server_id/server_secret`}>\n                        <IndexMenu openKey='sub1' selectOptins='2' />\n                    </Route>\n                    <Route path={`${url}/:server_id/containerinfo`}>\n                        <IndexMenu openKey='sub2' selectOptins='5' />\n                    </Route>\n                    <Route path={`${url}/:server_id/image`}>\n                        <IndexMenu openKey='sub4' selectOptins='9' />\n                    </Route>\n                    <Route path={`${url}/:server_id/network`}>\n                        <IndexMenu openKey='sub5' selectOptins='10' />\n                    </Route>\n                    <Route path={`${url}/:server_id/volume`}>\n                        <IndexMenu openKey='sub6' selectOptins='11' />\n                    </Route>\n                </Switch>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Switch>\n                        <Route exact path={`${url}/:server_id`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <IndexData />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/serverinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器信息</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerInfo />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/server_secret`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器密钥</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerPsw />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/containerinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOneServer />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_id/containerinfo/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器创建</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerCreate />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_id/containerinfo/info/:id`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器详情</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOne />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/image`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>镜像一览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ImageOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/network`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>网络总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/network/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>创建新网络</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkCreate />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/volume/`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>卷管理</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <VolumeOneServer />\n                            </Content>\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}","import { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Form, Input, message, Card } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport React from 'react';\n\n\n\n\n\nexport class LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n        this.layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 12 },\n        };\n        this.tailLayout = {\n            wrapperCol: { offset: 8, span: 12 },\n        };\n    }\n\n    async onFinish(values) {\n        console.log(values);\n        this.setState({\n            loading: true,\n        });\n\n        await axios.post('/api',\n            {\n                api: 'login',\n                username: values.username,\n                password: values.password,\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.Login()\n                } else {\n                    message.info('用户或密码错误！');\n                    this.setState({\n                        loading: false,\n                    });\n                }\n            });\n    }\n\n    onFinishFailed() {\n        //console.log('Failed:');\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"登录\" style={{ width: 400, boxShadow:\"2px 4px 6px #123\" }}>\n                    <Form\n                        {...this.props.layout}\n                        name=\"basic\"\n                        initialValues={{ remember: true }}\n                        onFinish={values => this.onFinish(values)}\n                        onFinishFailed={() => this.onFinishFailed()}\n                    >\n                        <Form.Item\n                            label=\"用户名\"\n                            name=\"username\"\n                            rules={[{ required: true, message: '请输入用户名!' }]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"密码\"\n                            name=\"password\"\n                            rules={[{ required: true, message: '请输入密码!' }]}\n                        >\n                            <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} />\n                        </Form.Item>\n\n                        <Form.Item {...this.tailLayout} name=\"remember\" valuePropName=\"checked\">\n                            <Checkbox>记住我</Checkbox>\n                        </Form.Item>\n\n                        <Form.Item {...this.tailLayout}>\n                            <Button loading={this.state.loading} type=\"primary\" htmlType=\"submit\">\n                                登录\n            </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport {\n    Row,\n    Col,\n    Calendar,\n    Spin,\n    Modal,\n    Result,\n} from 'antd'\nimport { ExclamationCircleOutlined, SmileOutlined } from '@ant-design/icons';\nimport { LoginForm } from '../../components/login_form'\nimport axios from 'axios';\n\nconst { confirm } = Modal;\n\n\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            welcome: false,\n            login: false,\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.setState({\n                        loading: false,\n                        welcome: true,\n                    })\n                } else {\n                    if (data.data.login) {\n                        window.location.replace('/')\n                    } else {\n                        this.setState({\n                            loading: false,\n                            welcome: false,\n                        })\n                    }\n                }\n            });\n    }\n\n    showConfirm() {\n        this.setState({\n            loading: false,\n            welcome: false,\n        })\n        confirm({\n            title: '您尚未注册任何用户或绑定任何服务器',\n            icon: <ExclamationCircleOutlined />,\n            content: '是否需要进入引导界面进行注册绑定？',\n            onOk() {\n                window.location.replace('/welcome')\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    render() {\n        const { loading, welcome } = this.state;\n        if (loading) {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            )\n        } else {\n            if (welcome) {\n                this.showConfirm();\n                return (<div></div>);\n            } else {\n                return (\n                    <div style={{\n                        background: `linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.7) ),url(/static/img/1.jpg)`,\n                        backgroundSize: \"100% 100%\",\n                        height: \"100%\",\n                        width: \"100%\"\n                    }}>\n                        <div style={{\n                                    height:\"30%\"\n                                }}>\n                            aaa\n                        </div>\n                        <Row align={'middle'}>\n                            <Col span={1} />\n                            <Col span={9}>\n                                <Result\n                                    icon={<SmileOutlined />}\n                                    title={<div style={{ color: \"white\" }}>欢迎来到Docker容器可视化管理平台</div>}\n                                />\n                            </Col>\n                            <Col span={6} />\n                            <Col span={8}>\n                                <LoginForm Login={() => this.props.Login()} />\n                            </Col>\n                            <Col span={2} />\n                        </Row>\n                    </div>\n                )\n            }\n        }\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Result, Button } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\n\n\nexport default function welcome_1(props) {\n    return (\n        <Result\n            icon={<SmileOutlined />}\n            title=\"欢迎来到Docker可视化管理平台\"\n            extra={<Button type=\"primary\" onClick={() => props.onNext()} >下一步</Button>}\n        />\n    )\n}","import { SmileOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Input, message, Result, Row, Spin } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport React from 'react';\nimport { LoginForm } from '../../login_form';\n\n\nclass WelcomeSignup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            ifUser: false,\n        }\n    }\n\n    send_regist(value) {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/welcome_api',\n            {\n                api: 'create_user',\n                ...value\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info('服务器开小差了，请稍后再试');\n                    this.setState({\n                        loading: false,\n                    })\n                }\n            }).catch(err => {\n                console.log(err);\n                message.error('服务器开小差了，请稍后再试');\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/welcome_api',\n            {\n                aaa: 'aaa',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === -2) {\n                    this.setState({\n                        loading: false,\n                        ifUser: true\n                    })\n                } else {\n                    this.setState({\n                        loading: false,\n                        ifUser: false\n                    })\n                }\n            }).catch(err => {\n                console.log(err);\n                message.error('服务器开小差了，请稍后再试');\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 8 },\n        };\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n        const { loading, ifUser } = this.state;\n        if (!loading) {\n            if (ifUser) {\n                return (\n                    <Result\n                        icon={<SmileOutlined />}\n                        title=\"该服务器已经创建了管理员账户，请登录进行操作\"\n                        extra={\n                            <Row>\n                                <Col span={8} />\n                                <Col span={4}>\n                                    <LoginForm {...layout} Login={() => this.props.onNext()} />\n                                </Col>\n                            </Row>\n                        }\n                    />\n                )\n            } else {\n                return (\n                    <Result\n                        icon={<SmileOutlined />}\n                        title=\"请注册一个管理员用户\"\n                        extra={<Form\n                            {...layout}\n                            name=\"basic\"\n                            onFinish={(value) => this.send_regist(value)}\n                        >\n                            <Form.Item\n                                label=\"用户名\"\n                                name=\"username\"\n                                rules={[{ required: true, message: '请输入你的用户名' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"密码\"\n                                name=\"password\"\n                                rules={[{ required: true, message: '请输入密码' }]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"confirm\"\n                                label=\"请再次输入密码\"\n                                dependencies={['password']}\n                                hasFeedback\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请确认你的密码',\n                                    },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                            if (!value || getFieldValue('password') === value) {\n                                                return Promise.resolve();\n                                            }\n                                            return Promise.reject('两次输入的密码不匹配');\n                                        },\n                                    }),\n                                ]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item {...tailLayout}>\n                                <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n                                    下一步\n                            </Button>\n                            </Form.Item>\n                        </Form>}\n                    />\n\n                );\n            }\n        } else {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            )\n        }\n\n\n    }\n}\n\n\nexport default function welcome_2(props) {\n    return (\n        <WelcomeSignup onNext={() => props.onNext()} />\n    );\n}","import { ApiTwoTone, ContactsTwoTone, DatabaseTwoTone, EditTwoTone, EyeInvisibleTwoTone } from '@ant-design/icons';\nimport { Button, Card, Input, message, Radio, Result } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport React from 'react';\n\nexport default function welcome_3(props) {\n    return (\n        <WelcomeBindServer onNext={() => props.onNext()} />\n    );\n}\n\n\nclass WelcomeBindServer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            server_ip_input: \"\",\n            server_name_input: \"\",\n            server_type_input: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n            input_server_ssh_ip: \"\",\n\n            loading: false,\n        }\n    }\n\n    handleServer_ip_input(e) {\n        this.setState({\n            server_ip_input: e.target.value\n        })\n    }\n\n    handleServer_name_input(e) {\n        this.setState({\n            server_name_input: e.target.value\n        })\n    }\n\n    handleServer_type_input(e) {\n        this.setState({\n            server_type_input: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    handleInput_server_sship = (e) => {\n        this.setState({\n            input_server_ssh_ip: e.target.value\n        })\n    }\n\n    send_args() {\n        this.setState({\n            loading: true,\n        })\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input, input_server_ssh_ip } = this.state\n        axios.post('/api',\n            {\n                api: 'create_server',\n                server_ip: server_ip_input,\n                server_name: server_name_input,\n                server_type: server_type_input,\n                server_user: server_user_input,\n                server_psw: server_psw_input,\n                server_ssh_ip: input_server_ssh_ip,\n\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info(data.data.message);\n                    this.setState({\n                        loading: false,\n                    })\n                }\n            }).catch(err => {\n                console.log(err);\n                message.error('与控制节点配对失败，请检查输入是否正确，');\n                this.setState({\n                    loading: false,\n                })\n            })\n    }\n\n    render() {\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input, loading, input_server_ssh_ip } = this.state\n        return (\n            <Result\n                icon={<DatabaseTwoTone />}\n                title=\"请绑定您第一台服务器节点\"\n                extra={\n                    <div>\n                        <center>\n                            <Card title=\"请输入服务器信息\" bordered={false} style={{ width: 500 }}>\n                                <Input.Group>\n                                    服务器ip或域名:<Input onChange={(e) => this.handleServer_ip_input(e)} value={server_ip_input} style={{ width: 300, marginLeft: 10 }} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                                    <br /><br />\n                                    服务器名字:<Input onChange={(e) => this.handleServer_name_input(e)} value={server_name_input} style={{ width: 290, marginLeft: 5 }} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                                </Input.Group>\n                                <br />\n                                连接类型:\n                                <Radio.Group onChange={(e) => this.handleServer_type_input(e)} defaultValue={server_type_input} buttonStyle=\"solid\">\n                                    <Radio.Button value=\"http\">HTTP</Radio.Button>\n                                    <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                                </Radio.Group>\n                                <br /><br />\n                                <Input.Group>\n                                    ssh服务IP:<Input onChange={(e) => this.handleInput_server_sship(e)} value={input_server_ssh_ip} style={{ width: 280, marginLeft: 10 }} prefix={<DatabaseTwoTone />} placeholder=\"127.0.0.1:22\" />\n                                    <br /><br />\n                                    服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                                    <br /><br />\n                                    服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                                </Input.Group>\n                            </Card>\n                            <Button loading={loading} onClick={() => this.send_args()} type=\"primary\">下一步</Button>\n                        </center>\n                    </div>\n                }\n            />\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Result, Button } from 'antd';\n\n\nexport default function welcome_4(props) {\n    return (\n        <Result\n            status=\"success\"\n            title=\"一切准备就绪\"\n            subTitle=\"现在您可以尽情使用了\"\n            extra={[\n                <Link to=\"/\">\n                    <Button type=\"primary\" key=\"console\">\n                        进入平台\n                    </Button>\n                </Link>,\n            ]}\n        />\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Steps, Col, Row, Spin } from 'antd';\nimport axios from 'axios';\n\nimport welcome_1 from '../../components/welcome/welcome_1'\nimport welcome_2 from '../../components/welcome/welcome_2'\nimport welcome_3 from '../../components/welcome/welcome_3'\nimport welcome_4 from '../../components/welcome/welcome_4'\n\n\nexport default class WelcomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 0,\n            welcome: false\n        };\n        this.steps = [\n            {\n                title: '开始',\n                content: welcome_1\n            },\n            {\n                title: '注册',\n                content: welcome_2,\n            },\n            {\n                title: '绑定一个服务器',\n                content: welcome_3,\n            },\n            {\n                title: '结束',\n                content: welcome_4,\n            },\n        ];\n    }\n\n    next() {\n        const current = this.state.current + 1;\n        this.setState({ current });\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({ current });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.setState({\n                        welcome: true,\n                    })\n                } else {\n                    this.setState({\n                        welcome: false,\n                    })\n                    window.location.replace('/')\n                }\n            });\n    }\n\n    render() {\n        const { current, welcome } = this.state;\n        const { Step } = Steps;\n        if (welcome) {\n            return (\n                <div>\n                    <br /><br /><br /><br /><br />\n                    <Row gutter={[8, 8]}>\n                        <Col span={3} />\n                        <Col span={18} >\n                            <Steps current={current}>\n                                {this.steps.map(item => (\n                                    <Step key={item.title} title={item.title} />\n                                ))}\n                            </Steps>\n                            <div className=\"steps-content\">{this.steps[current].content({ onNext: () => this.next(), })}</div>\n                        </Col>\n                        <Col span={3} />\n                    </Row>\n                </div>\n            );\n        } else {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            );\n        }\n\n    }\n}","import { ApiTwoTone, ContactsTwoTone, DatabaseOutlined, DatabaseTwoTone, EditTwoTone, EyeInvisibleTwoTone, SmileOutlined } from '@ant-design/icons';\nimport { Button, Input, Modal, notification, Radio } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport React from 'react';\n\n\nexport default class ServerAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            visible: false,\n\n            input_server_ip: \"\",\n            input_server_name: \"\",\n            input_server_type: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n            input_server_ssh_ip: \"\",\n        }\n    }\n\n    async submit_input() {\n        const { input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input, input_server_ssh_ip } = this.state\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_add',\n                server_ip: input_server_ip,\n                server_name: input_server_name,\n                server_type: input_server_type,\n                server_ssh_ip: input_server_ssh_ip,\n                server_user: server_user_input,\n                server_psw: server_psw_input\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    input_server_ip: \"\",\n                    input_server_name: \"\",\n                    input_server_type: \"http\",\n                    server_user_input: \"root\",\n                    server_psw_input: \"\",\n                    input_server_ssh_ip: \"\",\n                    visible: false\n                })\n                notification.open({\n                    message: '创建成功！',\n                    description:\n                        `节点:${input_server_name}创建成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.props.onFresh();\n    }\n\n    // =================================================\n    // 监听对话框\n    // =================================================\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.submit_input();\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n    // ====================================================\n\n    // ==========================================\n    // 监听输入框\n    // ==========================================\n    handleInput_server_type = (e) => {\n        this.setState({\n            input_server_type: e.target.value\n        })\n    }\n\n    handleInput_server_ip = (e) => {\n        this.setState({\n            input_server_ip: e.target.value\n        })\n    }\n\n    handleInput_server_name = (e) => {\n        this.setState({\n            input_server_name: e.target.value\n        })\n    }\n\n    handleInput_server_sship = (e) => {\n        this.setState({\n            input_server_ssh_ip: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    // ====================================================\n\n    render() {\n        const { loading, visible, input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input, input_server_ssh_ip } = this.state\n        return (\n            <div>\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DatabaseOutlined />}\n                    onClick={this.showModal}\n                >\n                    添加新的服务器节点\n            </Button>\n                <Modal\n                    visible={visible}\n                    title=\"添加服务器\"\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={this.handleCancel}>\n                            返回\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n                            提交\n                        </Button>,\n                    ]}\n                >\n                    <Input.Group>\n                        服务器ip或域名:<Input value={input_server_ip} onChange={this.handleInput_server_ip} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                        服务器名字:<Input value={input_server_name} onChange={this.handleInput_server_name} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                    </Input.Group>\n                    <br />\n                    连接类型:\n                    <Radio.Group onChange={this.handleInput_server_type} defaultValue={input_server_type} buttonStyle=\"solid\">\n                        <Radio.Button value=\"http\">HTTP</Radio.Button>\n                        <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                    </Radio.Group>\n                    <br /><br />\n                    <Input.Group>\n                        ssh服务IP:<Input onChange={(e) => this.handleInput_server_sship(e)} value={input_server_ssh_ip} style={{ width: 280, marginLeft: 10 }} prefix={<DatabaseTwoTone />} placeholder=\"127.0.0.1:22\" />\n                        <br /><br />\n                        服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                        <br /><br />\n                        服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                    </Input.Group>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Popconfirm, notification, Tooltip } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ServerDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_server() {\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_delete',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                })\n                notification.open({\n                    message: '删除成功！',\n                    description:\n                        `节点:${this.props.server_id}删除成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <Tooltip placement=\"top\" title=\"删除该服务器\">\n                <Popconfirm disabled={this.props.disabled} placement=\"right\" title=\"您确定要删除该节点吗\" onConfirm={() => this.delete_server()} okText=\"是\" cancelText=\"否\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} danger disabled={this.props.disabled} />\n                </Popconfirm>\n            </Tooltip>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Card, Tag, Button, Tooltip } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport ServerAddButton from './add_button'\nimport ServerDeleteButton from './delete_button'\n\nexport class ServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '节点名字',\n                dataIndex: 'server_name',\n                key: 'name',\n            },\n            {\n                title: '节点ip',\n                dataIndex: 'server_ip',\n                key: 'age',\n            },\n            {\n                title: '状态',\n                key: 'server_status',\n                render: (text, record) => {\n                    if (record.server_status === 0) {\n                        return (<Tag color=\"green\">在线</Tag>)\n                    } else {\n                        return (<Tag color=\"red\">离线</Tag>)\n                    }\n                }\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => {\n                    if (record.server_status === 0) {\n                        return (\n                            <div>\n                                <span style={{ marginRight: 8 }}>\n                                    <Tooltip placement=\"top\" title=\"进入该服务器\">\n                                        <Link to={`${this.props.url}control/${record.id}`} >\n                                            <Button type=\"primary\" shape=\"circle\" icon={<FullscreenOutlined />} />\n                                        </Link>\n                                    </Tooltip>\n                                </span>\n                                <span style={{ marginRight: 8 }}>\n                                    <ServerDeleteButton server_id={record.id} onFresh={() => this.handleRefresh()} />\n                                </span>\n                            </div>\n                        );\n                    } else {\n                        return (\n                            <div>\n                                <span style={{ marginRight: 8 }}>\n                                    <Tooltip placement=\"top\" title=\"进入该服务器\">\n                                        <Link to={`${this.props.url}control/${record.id}`} >\n                                            <Button type=\"primary\" shape=\"circle\" icon={<FullscreenOutlined />} disabled />\n                                        </Link>\n                                    </Tooltip>\n                                </span>\n                                <span style={{ marginRight: 8 }}>\n                                    <ServerDeleteButton server_id={record.id} onFresh={() => this.handleRefresh()} disabled={true} />\n                                </span>\n                            </div>\n                        );\n                    }\n                },\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'server_info',\n            }).then(d => {\n                this.setState({\n                    data: d.data.data,\n                    loading: false,\n                })\n                for (let i = 0; i < d.data.data.length; i++) {\n                    axios.post('/api',\n                        {\n                            api: 'server_check',\n                            server_id: d.data.data[i].id,\n                        }).then(d2 => {\n                            const { data } = this.state;\n                            data[i][\"server_status\"] = d2.data.status\n                            this.setState({\n                                data: data,\n                            })\n                        });\n                }\n            });\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"服务器一览\" extra={<ServerAddButton onFresh={() => this.handleRefresh()} />} >\n                    <Table loading={loading} rowKey={record => record.id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nexport default function ServerTableHook() {\n    let { url } = useRouteMatch();\n\n    return (\n        <ServerTable url={url} />\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Layout, Breadcrumb, Divider, Col, Row, Card,Alert } from 'antd';\nimport './index.css';\nimport { AllHeader } from '../../components/header'\n\nimport ServerTableHook from '../../components/server_table'\n\nexport default class HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    render() {\n        const { Header, Content, Footer } = Layout;\n        const { Meta } = Card;\n        const { loading } = this.state;\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <AllHeader number={'1'} />\n                </Header>\n                <Content style={{ padding: '0 50px' }} className=\"site-layout-background\">\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>主页</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Divider orientation=\"left\">系统公告</Divider>\n                    <Row justify=\"center\" gutter={[16, 16]}>\n                        <Col span={24} >\n                            <Alert\n                                message=\"欢迎来到Docker容器可视化平台\"\n                                description=\"请选择一个服务器来进行操作。您也可以添加新的服务器或者删除一个服务器\"\n                                type=\"info\"\n                                showIcon\n                            />\n                        </Col>\n                    </Row>\n                    <Divider orientation=\"left\">进入服务器</Divider>\n                    <ServerTableHook />\n                    <Divider />\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</Footer>\n            </Layout>\n        )\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined, ArrowLeftOutlined } from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\n\nexport default function UserMenu(props) {\n\n    return (\n        <div>\n            <UserMenuFunc {...props} />\n        </div>\n    );\n}\n\n\nclass UserMenuFunc extends React.Component {\n\n\n    render() {\n        return (\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={this.props.selectOptins}\n                    defaultOpenKeys={['sub1']}\n                    style={{ height: '100%', borderRight: 0 }}\n                >\n                    <Menu.Item key=\"back\">\n                        <ArrowLeftOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/`}>回到主页</Link>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <UserOutlined style={{ fontSize: '21px' }} />\n                                用户管理\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={this.props.url}>用户列表</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={`${this.props.url}/creat`}>创建新用户</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\">\n                            <Link to={`${this.props.url}/change`}>修改用户信息</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification, Popconfirm } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class UserDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_user() {\n        this.setState({\n            loading: true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'user_delete',\n                    user_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data);\n                    if (data.data.status === 0) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `用户:${this.props.selected[i]} 删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else if (data.data.status === 1) {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `你不能删除自己的账户`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else if (data.data.status === -1) {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `该用户不存在`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading: false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const { loading } = this.state\n        return (\n            <Popconfirm disabled={this.props.disabled} placement=\"top\" title=\"该操作无法撤销，您确定要删除这些用户吗\" onConfirm={() => this.delete_user()} okText=\"确定\" cancelText=\"取消\">\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    danger\n                    disabled={this.props.disabled}\n                    loading={loading}\n                >\n                    删除所选用户\n                </Button>\n            </Popconfirm>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nimport { Card, Table, Tag } from 'antd';\n\nimport UserDeleteButton from './delete_button'\n\n\nexport default function UserInfo(props) {\n\n    return (\n        <div>\n            <UserInfoTable {...props} />\n        </div>\n    );\n}\n\n\n\nclass UserInfoTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: 'ID',\n                key: 'id',\n                ellipsis: true,\n                render: (text, record) => (\n                    record.id\n                )\n            },\n            {\n                title: '名字',\n                key: 'name',\n                render: (text, record) => (\n                    record.username\n                )\n            },\n            {\n                title: '身份',\n                key: 'type',\n                render: (text, record) => {\n                    if (record.ifadmin === \"100\") {\n                        return (\n                            <Tag color=\"red\">管理员</Tag>\n                        )\n                    } else {\n                        return (\n                            <Tag color=\"geekblue\">普通用户</Tag>\n                        )\n                    }\n                }\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'user_info',\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    data: data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"用户一览\" >\n                    <div style={{ marginBottom: 16 }}>\n                        {<UserDeleteButton disabled={!hasSelected} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />}\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nimport { PageHeader, Form, Input, Button, Checkbox, message } from 'antd';\n\nexport default class UserCreate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false\n        }\n    }\n\n    send_regist(value) {\n        this.setState({\n            loading: true\n        })\n        axios.post('/api',\n            {\n                api: 'create_user',\n                ...value\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    window.location.replace('/user')\n                } else {\n                    message.info('用户名重复，请重新设置！');\n                }\n                this.setState({\n                    loading: false\n                })\n            });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 8 },\n        };\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n        const { loading } = this.state;\n        return (\n            <div>\n                <PageHeader\n                    title=\"用户创建\"\n                    subTitle=\"创建新用户\"\n                />\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={(value) => this.send_regist(value)}\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                        rules={[{ required: true, message: '请输入你的用户名' }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                        rules={[{ required: true, message: '请输入密码' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"请再次输入密码\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: '请确认你的密码',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('两次输入的密码不匹配');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout} name=\"ifadmin\" valuePropName=\"checked\">\n                        <Checkbox>是否设置为管理员</Checkbox>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n                            创建\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, PageHeader, Row, Col, Input, Form, Button, message, Checkbox, Divider } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\n\nexport default function UserChangeMount(props) {\n\n    return (\n        <UserChange {...props} />\n    );\n}\n\n\nclass UserChange extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            value: \"\",\n            loading: false\n        }\n    }\n\n\n    fetch_search(value) {\n        console.log(value)\n        if (value === \"\") {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'search_user_by_name',\n                input: value\n            }).then(data => {\n                console.log(data.data)\n                this.setState({\n                    data: data.data.data\n                })\n            });\n    }\n\n    send_regist(value1) {\n        this.setState({\n            loading: true\n        })\n        const { value } = this.state;\n        if (value === \"\") {\n            message.error('您没有选择要修改的用户');\n            this.setState({\n                loading: false\n            })\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'change_user',\n                ...value1,\n                id: value\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    window.location.replace('/user')\n                } else {\n                    message.info('用户名重复，请重新设置！');\n                }\n                this.setState({\n                    loading: false\n                })\n            });\n    }\n\n    handleChange(value) {\n        console.log(value);\n        this.setState({\n            value: value,\n        })\n    }\n\n    render() {\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n\n        const options = this.state.data.map(d => <Option key={d.id}>{d.name}</Option>);\n        const { value, loading } = this.state;\n        return (\n            <div>\n                <PageHeader\n                    title=\"用户信息修改\"\n                    subTitle=\"修改用户信息\"\n                />\n                <Row>\n                    <Col span={4}>\n                        <div\n                            style={{\n                                fontSize: 15\n                            }}\n                        >\n                            请输入需要修改的用户名:\n                        </div>\n                    </Col>\n                    <Col span={20}>\n                        <Select\n                            suffixIcon={<SearchOutlined />}\n                            style={{ width: 200 }}\n                            showSearch\n                            value={value}\n                            defaultActiveFirstOption={false}\n                            showArrow={false}\n                            filterOption={false}\n                            onSearch={value => this.fetch_search(value)}\n                            onChange={value => this.handleChange(value)}\n                            notFoundContent={null}\n                        >\n                            {options}\n                        </Select>\n                    </Col>\n                </Row>\n                <Divider orientation=\"left\">不修改的部分请留空</Divider>\n                <Form\n                    style={{\n                        width: \"300px\"\n                    }}\n                    name=\"basic\"\n                    onFinish={(value) => this.send_regist(value)}\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"请再次输入密码\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('两次输入的密码不匹配');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout} name=\"ifadmin\" valuePropName=\"checked\">\n                        <Checkbox>是否设置为管理员</Checkbox>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n                            修改\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\n\nimport { Layout, Breadcrumb } from 'antd';\n\nimport './index.css';\nimport { AllHeader } from '../../components/header'\nimport UserMenu from '../../components/user_menu'\nimport UserInfo from '../../components/user_info'\nimport UserCreate from '../../components/user_create'\nimport UserChangeMount from '../../components/user_change'\n\n\nconst { Content } = Layout;\n\n\nexport default function UserPage() {\n    let { url } = useRouteMatch();\n\n    return (\n        <Layout>\n            <AllHeader number={'2'} />\n            <Layout>\n                <Switch>\n                    <Route exact path={`${url}`}>\n                        <UserMenu selectOptins='1' url={url} />\n                    </Route>\n                    <Route exact path={`${url}/creat`}>\n                        <UserMenu selectOptins='2' url={url} />\n                    </Route>\n                    <Route exact path={`${url}/change`}>\n                        <UserMenu selectOptins='3' url={url} />\n                    </Route>\n                </Switch>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Switch>\n                        <Route exact path={`${url}`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>用户一览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserInfo />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/creat`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>用户创建</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserCreate />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/change`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>修改用户信息</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserChangeMount />\n                            </Content>\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, useLocation, Redirect } from 'react-router-dom'\n\nimport Index from '../pages/index'\nimport Login from '../pages/login'\nimport WelcomePage from '../pages/welcome'\nimport HomePage from '../pages/home'\nimport UserPage from '../pages/user'\n\nimport { Spin } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nimport './index.css';\n\n\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nexport default class AuthExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isAuthenticated: false,\n            isSend: false\n        }\n    }\n\n    componentDidMount() {\n        axios.post('/api',\n            {\n                api: 'check_login',\n            }).then(d => {\n                this.setState({\n                    isSend: true,\n                    isAuthenticated: d.data.isLogin\n                })\n            });\n    }\n\n    authenticate() {\n        this.setState({\n            isAuthenticated: true,\n            isSend: true\n        })\n        window.location.replace('/')\n    }\n\n    render() {\n        const { isAuthenticated, isSend } = this.state\n        return (\n            <Router>\n                <PrivateRoute path='/control' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <Index />\n                </PrivateRoute>\n                <PrivateRoute path='/user' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <UserPage />\n                </PrivateRoute>\n                <PrivateRoute exact path='/' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <HomePage />\n                </PrivateRoute>\n                <Route path='/login' >\n                    <Login Login={() => this.authenticate()} />\n                </Route>\n                <Route path='/welcome' >\n                    <WelcomePage />\n                </Route>\n            </Router>\n        );\n    }\n}\n\n\nfunction LoginPage(props) {\n    let history = useHistory();\n    let location = useLocation();\n\n    let { from } = location.state || { from: { pathname: \"/\" } };\n    let login = () => {\n        props.Login(() => {\n            history.replace(from);\n        });\n    };\n\n    return (\n        <div>\n            <p>You must log in to view the page at {from.pathname}</p>\n            <button onClick={login}>Log in</button>\n        </div>\n    );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n    console.log(rest.isSend)\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                rest.isSend ? (\n                    rest.isAuthenticated ? (\n                        children\n                    ) : (\n                            <Redirect\n                                to={{\n                                    pathname: \"/login\",\n                                    state: { from: location }\n                                }}\n                            />\n                        )\n                ) : (\n                        <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                            <Spin size=\"large\" />\n                        </div>\n\n                    )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './router';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}