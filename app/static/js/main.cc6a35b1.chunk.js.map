{"version":3,"sources":["components/container_create/mutiple_switch/index.js","components/network_create/network_type_option/index.js","components/header/index.js","components/index_menu/index.js","components/container_info/index.js","components/container_table/one_container_table/one_container_action_button/index.js","components/container_table/one_container_table/one_container_inspect/index.js","components/container_table/one_container_table/index.js","components/container_create/image_select/index.js","components/container_create/network_select/index.js","components/container_create/ports_choose/index.js","components/container_create/index.js","components/image_table/one_server_image/delete_button/index.js","components/image_table/one_server_image/add_button/index.js","components/image_table/one_server_image/image_inspect/index.js","components/image_table/one_server_image/index.js","components/network_table/one_network/delete_button/index.js","components/network_table/one_network/network_inspect/index.js","components/network_table/one_network/index.js","components/network_create/index.js","components/index_data/index_cpu/index.js","components/index_data/index_memory/index.js","components/index_data/index_swap/index.js","components/index_data/index_network/index.js","components/index_data/index_container/index.js","components/index_data/index_image/index.js","components/index_data/index_volume/index.js","components/index_data/index.js","components/server_info/index.js","components/server_psw/index.js","components/volume_table/delete_button/index.js","components/volume_table/index.js","pages/index/index.js","components/login_form/index.js","pages/login/index.js","components/welcome/welcome_1/index.js","components/welcome/welcome_2/index.js","components/welcome/welcome_3/index.js","components/welcome/welcome_4/index.js","pages/welcome/index.js","components/server_table/add_button/index.js","components/server_table/delete_button/index.js","components/server_table/index.js","pages/home/index.js","router/index.js","index.js"],"names":["MultipleSwitch","state","items","items_value","input_key","input_value","selected","onKeyChange","event","setState","target","value","onValueChange","onSelectedChange","console","log","eval","addItem","this","Option","Select","mode","style","width","placeholder","props","args","onChange","dropdownRender","menu","margin","orientation","display","flexWrap","padding","addonBefore","flex","align","cursor","onClick","map","item","key","React","Component","NetworkTypeOption","Header","Layout","AllHeader","show_number","number","className","theme","defaultSelectedKeys","lineHeight","Item","to","SubMenu","Menu","Sider","IndexSider","onOpenChange","openKeys","latestOpenKey","find","indexOf","rootSubmenuKeys","openKey","openOptions","selectOptins","defaultOpenKeys","ArrowLeftOutlined","fontSize","EyeOutlined","server_ip","title","CloudServerOutlined","AppstoreOutlined","SaveOutlined","ApartmentOutlined","FolderOpenOutlined","IndexMenu","useParams","ContainerPageHeader","id","ghost","onBack","window","history","back","subTitle","ContainerInfo","loading","data","get_args","axios","post","api","then","active","ContainerOne","OneContainerActionButton","e","handleMenuClick","url","onLoading","notification","open","message","description","icon","SmileOutlined","color","onFresh","length","error","i","container_id","overlay","disabled","DownOutlined","ContainerInspect","showDrawer","visible","fetch","onClose","success","NetworkSettings","network_drive","Object","keys","Networks","placement","type","shape","closable","bordered","column","xxl","xl","lg","md","sm","xs","span","label","Id","Name","IPAddress","State","Status","status","text","Created","split","PlayCircleOutlined","size","handleStart","marginLeft","ReloadOutlined","handleRestart","PoweroffOutlined","danger","handleStop","FundProjectionScreenOutlined","Config","Image","Ports","index","item2","index2","HostIp","HostPort","Cmd","Env","ContainerInspectButton","ContainerOneServerTable","onSelectChange","selectedRowKeys","columns","dataIndex","render","record","show_ip","moment","format","get_net_work_name","rowSelection","hasSelected","extra","handleRefresh","handleLoading","rowKey","dataSource","ContainerOneServer","useRouteMatch","ContainerSearchImage","get_image_list","labelInValue","notFoundContent","handleValue","d","RepoTags","ContainerSearchNetwork","PortsChoose","onCportChange","input_cport","onHipChange","input_hip","onHportChange","input_hport","onTypeChange","input_type","temp_list","one_key","JSON","parse","items2","Group","buttonStyle","Button","PlusOutlined","TabPane","Tabs","ContainerCreate_page","container_name_input","image_name_input","ports","ports2","command_input","entrypotin_input","user_input","ifTty","ifInteractive","network_name_input","hostname","network_ip","env","value1","value2","temp_dict","temp_dict2","network_config","content","duration","image","name","connect_port","export_port","cmd","entrypoint","user","Tty","interactive","network_model","setTimeout","handleContainer_name_input","handleImage_name_input","handlePorts","defaultActiveKey","tab","AppleOutlined","handleCommand_input","handleEntrypotin_input","handleUser_input","handleIfTty","marginRight","handleIfInteractive","AndroidOutlined","handleNetwork_name_input","handleHostname","handleNetwork_ip","handleEvn","handleLabel","min","max","step","handle_send","ContainerCreate","ImageDeleteButton","image_id","DeleteOutlined","delete_image","ImageAddButton","showModal","handleOk","send_message","handleCancel","input_image_name","image_name","DownloadOutlined","onOk","onCancel","confirmLoading","handleInput_image_name","ImageInspect","DockerVersion","Architecture","Os","RootFS","Layers","ImageOneServer","ImagePageHeader","ImageOneServerTable","ellipsis","marginBottom","NetworkDeleteButton","network_id","delete_network","NetworkInspect","network_name","Driver","IPAM","Gateway","Subnet","NetworkOneServer","NetworkPageHeader","NetworlOneServerTable","NetworkCreate_page","network_type_input","network_type_option_input","network_subnet_input","network_iprange_input","network_gateway_input","network_label_input","subnet","ip_range","gateway","defaultValue","handleNetwork_type_input","handleNetwork_type_option_input","handleNetwork_subnet_input","handleNetwork_iprange_input","handleNetwork_gateway_input","handleNetwork_label_input","UploadOutlined","handleUpload","NetworkCreate","IndexCpuData","used","cpu","cpu_used","cpu_number","height","suffix","QrcodeOutlined","IndexMemoryData","memory","toFixed","total","free","percent","PieChartOutlined","HddOutlined","IndexSwapData","memory_swap","IndexNetworkData","receive","network","send","download","last_receive","upload","last_send","precision","valueStyle","prefix","ArrowDownOutlined","ArrowUpOutlined","Paragraph","Typography","IndexContainerData","running","Containers","spin","IndexImageData","Images","Size","IndexVolumeData","Volumes","UsageData","IndexData","IndexDataControl","data_docker","interval","setInterval","fetch_docker","clearInterval","data2","justify","gutter","ServerInfo","ServerInfoShow","data1","OSType","mem","MemTotal","NCPU","KernelVersion","OperatingSystem","ID","Version","BuildTime","ApiVersion","Arch","GoVersion","ServerPsw","ServerPswShow","showIcon","copyable","VolumeDeleteButton","free_size","SpaceReclaimed","onConfirm","delete_volume","okText","cancelText","VolumePageHeader","VolumeOneServer","VolumeOneServerTable","fresh_table","Content","Index","exact","path","minHeight","LoginForm","layout","labelCol","wrapperCol","tailLayout","offset","values","username","password","Login","location","replace","info","initialValues","remember","onFinish","onFinishFailed","rules","required","UserOutlined","Password","LockOutlined","valuePropName","htmlType","onPanelChange","welcome","welcome_1","onNext","WelcomeSignup","send_regist","dependencies","hasFeedback","getFieldValue","validator","rule","Promise","reject","resolve","welcome_2","welcome_3","WelcomeBindServer","server_ip_input","server_name_input","server_type_input","server_user_input","server_psw_input","server_name","server_type","server_user","server_psw","DatabaseTwoTone","handleServer_ip_input","ApiTwoTone","handleServer_name_input","EditTwoTone","handleServer_type_input","handleServer_user_input","ContactsTwoTone","handleServer_psw_input","EyeInvisibleTwoTone","send_args","welcome_4","WelcomePage","current","steps","Step","Steps","next","ServerAddButton","submit_input","handleInput_server_type","input_server_type","handleInput_server_ip","input_server_ip","handleInput_server_name","input_server_name","DatabaseOutlined","footer","ServerDeleteButton","server_id","delete_server","ServerTable","server_status","FullscreenOutlined","d2","ServerTableHook","HomePage","Footer","Card","Meta","textAlign","AuthExample","isAuthenticated","isSend","isLogin","PrivateRoute","authenticate","children","rest","pathname","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cc6a35b1.chunk.js","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class MultipleSwitch extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n    onSelectedChange = value => {\n        console.log(eval(value));\n    }\n\n    addItem = () => {\n        const { items, items_value, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class NetworkTypeOption extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n    onSelectedChange = value => {\n        console.log(eval(value));\n    }\n\n    addItem = () => {\n        const { items, items_value, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport {\n    Link,\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Menu, } from 'antd';\n\n\nconst { Header, } = Layout;\n\nexport class AllHeader extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            show_number: props.number\n        }\n    }\n\n    render() {\n        return (\n            <Header className=\"header\">\n                <div className=\"logo\" />\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={[this.state.show_number]}\n                    style={{ lineHeight: '64px' }}\n                >\n                    <Menu.Item key=\"1\">\n                        <Link to=\"/\">功能操作</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <Link to=\"/user\">用户管理</Link>\n                    </Menu.Item>\n                </Menu>\n            </Header>\n        )\n    }\n}","import React from 'react';\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { AppstoreOutlined, CloudServerOutlined, EyeOutlined, SaveOutlined, ApartmentOutlined, ArrowLeftOutlined, FolderOpenOutlined } from '@ant-design/icons';\nimport { Layout, Menu, } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\n\n\nexport class IndexSider extends React.Component {\n    // submenu keys of first level\n\n    constructor(props) {\n        super(props);\n        this.rootSubmenuKeys = ['sub1', 'sub2', 'sub3', 'sub4', 'sub5'];\n        this.state = {\n            openKeys: [this.props.openKey],\n            openOptions: [this.props.selectOptins],\n        };\n    }\n\n\n\n\n    onOpenChange = openKeys => {\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            this.setState({ openKeys });\n        } else {\n            this.setState({\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultOpenKeys={this.state.openKeys}\n                    defaultSelectedKeys={this.state.openOptions}\n                    onOpenChange={this.onOpenChange}\n                    style={{ width: 200 }}\n                    defaultOpenKeys={['sub1', 'sub2', 'sub3', 'sub4', 'sub5', 'sub6']}\n                >\n                    <Menu.Item key=\"back\">\n                        <ArrowLeftOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/`}>回到主页</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"0\">\n                        <EyeOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/control/${this.props.server_ip}`}>全局总览</Link>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <CloudServerOutlined style={{ fontSize: '21px' }} />\n                                <span>服务器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={`/control/${this.props.server_ip}/serverinfo`}>服务器总览</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={`/control/${this.props.server_ip}/server_secret`}>服务器密钥管理</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub2\"\n                        title={\n                            <span>\n                                <AppstoreOutlined style={{ fontSize: '21px' }} />\n                                <span>容器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"5\">\n                            <Link to={`/control/${this.props.server_ip}/containerinfo`}>容器总览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub4\"\n                        title={\n                            <span>\n                                <SaveOutlined style={{ fontSize: '21px' }} />\n                                <span>镜像管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"9\">\n                            <Link to={`/control/${this.props.server_ip}/image`}>镜像列表</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub5\"\n                        title={\n                            <span>\n                                <ApartmentOutlined style={{ fontSize: '21px' }} />\n                                <span>网络管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"10\">\n                            <Link to={`/control/${this.props.server_ip}/network`}>网卡一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub6\"\n                        title={\n                            <span>\n                                <FolderOpenOutlined style={{ fontSize: '21px' }} />\n                                <span>卷管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"11\">\n                            <Link to={`/control/${this.props.server_ip}/volume`}>卷一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default function IndexMenu(props) {\n    let { server_ip } = useParams();\n\n    return (<IndexSider server_ip={server_ip} openKey={props.openKey} selectOptins={props.selectOptins} />)\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Row, Col, PageHeader, Skeleton } from 'antd';\n\n\n\nfunction ContainerPageHeader() {\n    let { id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"容器详情\"\n            subTitle={`容器:${id}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport class ContainerInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: '',\n        }\n        this.get_args();\n    }\n\n    get_args() {\n        axios.post('/api',\n            {\n                api: 'one_container_info',\n                id: this.props.id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    data: data.data,\n                });\n            });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Skeleton active loading={this.state.loading}>\n                    {this.state.data.data}\n                </Skeleton>\n            </div>\n        );\n    }\n}\n\nexport function ContainerOne() {\n    let { server_ip, id } = useParams();\n\n    return (\n        <ContainerInfo server_ip={server_ip} id={id} />\n    )\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Button, Menu, Dropdown, message, notification } from 'antd';\nimport { DownOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class OneContainerActionButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.menu = (\n            <Menu onClick={(e) => this.handleMenuClick(e)}>\n                <Menu.Item key=\"0\">\n                    <Link to={`${this.props.url}/create`}>创建新容器</Link>\n                </Menu.Item>\n                <Menu.Item key=\"1\">重启选中容器</Menu.Item>\n                <Menu.Item key=\"2\">停止选中容器</Menu.Item>\n                <Menu.Item key=\"3\">删除选中容器</Menu.Item>\n                <Menu.Item key=\"4\">删除已停止容器</Menu.Item>\n            </Menu>\n        );\n    }\n\n    async handleMenuClick(e) {\n        this.props.onLoading();\n        if (e.key === '4') {\n            await axios.post('/api',\n                {\n                    api: 'container_delete_stoped',\n                    server_ip: this.props.server_ip,\n                }).then(data => {\n                    console.log(data.data);\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `容器删除成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                });\n            this.props.onFresh();\n            return;\n        } else if (e.key === '0') {\n            this.props.onFresh();\n            return;\n        }\n        if (this.props.selected.length === 0) {\n            message.error('您没有选中任何容器');\n            this.props.onFresh();\n            return;\n        }\n        if (e.key === '1') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_restart',\n                        server_ip: this.props.server_ip,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '重启成功！',\n                            description:\n                                `容器:${this.props.selected[i]}重启成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '2') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_stop',\n                        server_ip: this.props.server_ip,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '停止成功！',\n                            description:\n                                `容器:${this.props.selected[i]}停止成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '3') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_delete',\n                        server_ip: this.props.server_ip,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `容器:${this.props.selected[i]}删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        }\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <div>\n                <Dropdown overlay={this.menu}>\n                    <Button disabled={this.props.disabled} loading={this.props.loading}>\n                        快捷操作 <DownOutlined />\n                    </Button>\n                </Dropdown>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Button, Descriptions, Badge, Tooltip, Skeleton, message } from 'antd';\nimport { EyeOutlined, PlayCircleOutlined, ReloadOutlined, PoweroffOutlined, FundProjectionScreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\n\n\nexport default class ContainerInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_inspect',\n                server_ip: this.props.server_ip,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    handleStart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_start',\n                server_ip: this.props.server_ip,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n            });\n    }\n\n    handleRestart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_restart',\n                server_ip: this.props.server_ip,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n            });\n    }\n\n    handleStop() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_stop',\n                server_ip: this.props.server_ip,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data, loading } = this.state;\n        if (data.NetworkSettings) {\n            const network_drive = Object.keys(data.NetworkSettings.Networks)[0]\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\"> {data.Name ? data.Name : \"\"} </Descriptions.Item>\n                            <Descriptions.Item label=\"网络信息\">{`${data.NetworkSettings.Networks[`${network_drive}`].IPAddress}(${network_drive})`}</Descriptions.Item>\n                            <Descriptions.Item label=\"状态\">\n                                {data.State ? data.State.Status == \"running\" ? <Badge status=\"processing\" text={data.State.Status} /> : <Badge status=\"error\" text={data.State.Status} /> : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\"> {data.Created.split(\".\")[0]} </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"操作\">\n                                <Tooltip placement=\"top\" title=\"启动容器\">\n                                    <Button loading={loading} type=\"primary\" shape=\"circle\" icon={<PlayCircleOutlined />} size=\"large\" onClick={() => this.handleStart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"重启容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<ReloadOutlined />} size=\"large\" onClick={() => this.handleRestart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"结束容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<PoweroffOutlined />} size=\"large\" danger onClick={() => this.handleStop()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"启动终端\">\n                                    {data.State.Status == \"running\" ?\n                                        <Button style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" />\n                                        :\n                                        <Button style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" disabled />\n                                    }\n\n                                </Tooltip>\n                            </Descriptions.Item>\n                        </Descriptions>\n                        <br /><br />\n                        <Descriptions title=\"详细参数\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"镜像\">{data.Config.Image}</Descriptions.Item>\n                            <Descriptions.Item label=\"端口映射信息\">\n                                {Object.keys(data.NetworkSettings.Ports).map((item, index) =>\n                                    data.NetworkSettings.Ports[`${item}`] ? data.NetworkSettings.Ports[`${item}`].map((item2, index2) =>\n                                        `${item2.HostIp}:${item2.HostPort} => ${item}`\n                                    ) : item\n                                )}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"启动参数\">\n                                {data.Config.Cmd ? data.Config.Cmd.map((item, index) =>\n                                    item\n                                ) : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"环境变量\">\n                                {\n                                    data.Config.Env.map((item, index) =>\n                                        <div>\n                                            {item}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                        <br /><br />\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Table, Tag, PageHeader, Card } from 'antd';\n\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport OneContainerActionButton from './one_container_action_button'\nimport ContainerInspect from './one_container_inspect'\n\nfunction ContainerPageHeader() {\n    let { server_ip } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"容器详情\"\n            subTitle={`服务器:${server_ip}`}\n        >\n        </PageHeader>\n    );\n}\n\nfunction ContainerInspectButton(props) {\n    let { server_ip } = useParams();\n\n    return (\n        <ContainerInspect server_ip={server_ip} container_id={props.container_id} />\n    )\n}\n\nclass ContainerOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Names',\n                key: 'name',\n            },\n            {\n                title: '对应镜像',\n                key: 'image',\n                render: (text, record) => (\n                    record.Image\n                )\n            },\n            {\n                title: '容器ip',\n                key: 'ip',\n                render: (text, record) => this.show_ip(text, record)\n            },\n            {\n                title: '状态',\n                key: 'stauts',\n                render: (text, record) => (\n                    <Tag color=\"cyan\">{record.State}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <span>\n                        <ContainerInspectButton container_id={record.Id} />\n                    </span>\n                ),\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n            loading: false\n        })\n    }\n\n    handleLoading() {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_info',\n                server_ip: this.props.server_ip,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    show_ip(text, record) {\n        let get_net_work_name = Object.keys(record.NetworkSettings.Networks)[0]\n        return (\n            record.NetworkSettings.Networks[get_net_work_name].IPAddress\n        )\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"容器一览\" extra={<OneContainerActionButton disabled={!hasSelected} loading={loading} server_ip={this.props.server_ip} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} onLoading={() => this.handleLoading()} />} >\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\n\nexport default function ContainerOneServer() {\n    let { server_ip } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <ContainerPageHeader />\n            <ContainerOneServerTable server_ip={server_ip} url={url} />\n        </div>\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Spin } from 'antd';\nimport { ControlTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\nexport default class ContainerSearchImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_ip: this.props.server_ip,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_ip } = this.state\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_ip: server_ip,\n            }).then(data => {\n                console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled, value, } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.RepoTags}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Spin } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class ContainerSearchNetwork extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_ip: this.props.server_ip,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_ip } = this.state\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_ip: server_ip,\n            }).then(data => {\n                console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled, value, } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.Name}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input, Form, Radio } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class PortsChoose extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            items_value: {},\n            items2: [],\n\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: '0.0.0.0',\n            input_hport: '',\n            selected: [],\n        };\n    }\n\n    onCportChange = event => {\n        this.setState({\n            input_cport: event.target.value,\n        });\n    }\n\n    onHipChange = event => {\n        this.setState({\n            input_hip: event.target.value,\n        });\n    }\n\n    onHportChange = event => {\n        this.setState({\n            input_hport: event.target.value,\n        });\n    }\n\n    onTypeChange = value => {\n        this.setState({\n            input_type: value.target.value\n        })\n    }\n\n    onSelectedChange = value => {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            let one_key = Object.keys(JSON.parse(value[i]))[0]\n            temp_list = [...temp_list, `{\"${one_key}\":{}}`]\n        }\n        this.props.onChange(value, temp_list)\n    }\n\n    addItem = () => {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_cport}/${input_type}\":[{\"HostIp\":\"${input_hip}\",\"HostPort\":\"${input_hport}\"}]}`],\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: \"0.0.0.0\",\n            input_hport: \"\",\n        });\n    };\n\n    render() {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '320px' }}\n                placeholder={this.props.args}\n                onChange={this.onSelectedChange}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            容器端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_cport} placeholder=\"443\" onChange={this.onCportChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            转发类型:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Radio.Group value={input_type} buttonStyle=\"solid\" onChange={this.onTypeChange}>\n                                <Radio.Button value=\"tcp\">TCP</Radio.Button>\n                                <Radio.Button value=\"udp\">UDP</Radio.Button>\n                            </Radio.Group>\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机IP:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hip} placeholder=\"0.0.0.0\" style={{ flex: 'auto' }} onChange={this.onHipChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hport} placeholder=\"443\" style={{ flex: 'auto' }} onChange={this.onHportChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Input, Form, Divider, Select, Button, message, notification, Tabs, Switch, Slider, InputNumber } from 'antd';\nimport { AppleOutlined, AndroidOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport ContainerSearchImage from \"./image_select\"\nimport ContainerSearchNetwork from \"./network_select\"\nimport MultipleSwitch from './mutiple_switch'\nimport PortsChoose from './ports_choose'\n\nconst { TabPane } = Tabs;\n\nfunction ContainerPageHeader() {\n    let { server_ip } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建容器\"\n            subTitle={`服务器:${server_ip}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass ContainerCreate_page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n\n            container_name_input: \"\",\n            image_name_input: \"\",\n            ports: {},\n            ports2: {},\n\n            command_input: \"\",\n            entrypotin_input: \"\",\n            user_input: \"\",\n            ifTty: false,\n            ifInteractive: false,\n\n            network_name_input: \"\",\n            hostname: \"\",\n            network_ip: \"\",\n\n            env: [],\n            label: [],\n        }\n    }\n\n    // =======================获取输入=======================\n    handleContainer_name_input(e) {\n        this.setState({\n            container_name_input: e.target.value\n        })\n    }\n\n    handleImage_name_input(value) {\n        this.setState({\n            image_name_input: value.label[0]\n        })\n    }\n\n    handlePorts(value1, value2) {\n        let temp_dict = {};\n        let temp_dict2 = {}\n        for (let i = 0; i < value1.length; i++) {\n            temp_dict = { ...temp_dict, ...JSON.parse(value1[i]) }\n        }\n        for (let i = 0; i < value2.length; i++) {\n            temp_dict2 = { ...temp_dict2, ...JSON.parse(value2[i]) }\n        }\n        this.setState({\n            ports: temp_dict,\n            ports2: temp_dict2,\n        })\n    }\n\n    handleCommand_input(e) {\n        this.setState({\n            command_input: e.target.value\n        })\n    }\n\n    handleEntrypotin_input(e) {\n        this.setState({\n            entrypotin_input: e.target.value\n        })\n    }\n\n    handleUser_input(e) {\n        this.setState({\n            user_input: e.target.value\n        })\n    }\n\n    handleIfTty() {\n        const { ifTty } = this.state;\n        if (ifTty) {\n            this.setState({\n                ifTty: false\n            })\n        } else {\n            this.setState({\n                ifTty: true\n            })\n        }\n    }\n\n    handleIfInteractive() {\n        const { ifInteractive } = this.state;\n        if (ifInteractive) {\n            this.setState({\n                ifInteractive: false\n            })\n        } else {\n            this.setState({\n                ifInteractive: true\n            })\n        }\n    }\n\n\n\n    handleNetwork_name_input(value) {\n        this.setState({\n            network_name_input: value.label\n        })\n    }\n\n    handleHostname(e) {\n        this.setState({\n            hostname: e.target.value\n        })\n    }\n\n    handleNetwork_ip(e) {\n        this.setState({\n            network_ip: e.target.value\n        })\n    }\n\n    handleEvn(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            env: temp_list,\n        })\n    }\n\n    handleLabel(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            label: temp_list,\n        })\n    }\n\n    test() {\n        console.log(this.state);\n    }\n    // =======================================================\n\n    async handle_send() {\n        const {\n            container_name_input,\n            image_name_input,\n            ports,\n            ports2,\n            command_input,\n            entrypotin_input,\n            user_input,\n            ifTty,\n            ifInteractive,\n            network_name_input,\n            hostname,\n            network_ip,\n            env,\n            label\n        } = this.state;\n\n        if (image_name_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            return;\n        }\n\n        let network_config = '';\n        if (network_name_input !== \"\") {\n            network_config = `{\"${network_name_input}\":{\"IPAMConfig\":{\"IPv4Address\":\"${network_ip}\"}}}`;\n            network_config = JSON.parse(network_config);\n        }\n\n        message.loading({ content: '容器创建中', key: 'updatable', duration: 0 });\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'container_add',\n                server_ip: this.props.server_ip,\n                image: image_name_input,\n                name: container_name_input,\n                connect_port: ports,\n                export_port: ports2,\n                cmd: command_input,\n                entrypoint: entrypotin_input,\n                user: user_input,\n                Tty: ifTty,\n                interactive: ifInteractive,\n                network_model: network_config,\n            }).then(data => {\n                this.setState({\n                    loading: false\n                })\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    message.loading({ content: '容器启动中', key: 'updatable', duration: 0 });\n                    axios.post('/api',\n                        {\n                            api: 'container_start',\n                            server_ip: this.props.server_ip,\n                            container_id: data.data.data.data.Id\n\n                        }).then(data => {\n                            console.log(data.data.data)\n                            setTimeout(() => {\n                                message.success({ content: '容器启动成功！', key: 'updatable', duration: 2 });\n                            }, 1000);\n                            window.history.back();\n                        });\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n    }\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"container_name\"\n                    >\n                        <Input placeholder=\"为新容器起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleContainer_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">镜像选择</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"镜像\"\n                        name=\"image_name\"\n                    >\n                        <ContainerSearchImage server_ip={this.props.server_ip} onChange={value => this.handleImage_name_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">端口映射</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"规则设置\"\n                        name=\"ports\"\n                    >\n                        <PortsChoose onChange={(value1, value2) => this.handlePorts(value1, value2)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">高级设置(无特殊需求可以忽略)</Divider>\n                <Tabs defaultActiveKey=\"1\" type=\"card\" >\n                    <TabPane\n                        tab={\n                            <span>\n                                <AppleOutlined />\n                                参数设置\n                            </span>\n                        }\n                        key=\"1\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"进入命令(cmd)\"\n                                    name=\"command\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleCommand_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"入口参数(entrypoint)\"\n                                    name=\"entrypoint\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleEntrypotin_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"设定运行用户\"\n                                    name=\"user\"\n                                >\n                                    <Input placeholder=\"root\" style={{ width: '450px' }} onChange={e => this.handleUser_input(e)} />\n                                </Form.Item>\n                            </Form>\n                            创建模拟终端(-t):<Switch onChange={() => this.handleIfTty()} style={{ marginLeft: 4, marginRight: 8 }} />\n                            |\n                            交互模式(-i):<Switch onChange={() => this.handleIfInteractive()} style={{ marginLeft: 4, marginRight: 8 }} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                网络设置\n                            </span>\n                        }\n                        key=\"2\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"网卡选择\"\n                                    name=\"network_drive\"\n                                >\n                                    <ContainerSearchNetwork server_ip={this.props.server_ip} onChange={value => this.handleNetwork_name_input(value)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"主机名(Hostname)\"\n                                    name=\"hostname\"\n                                >\n                                    <Input placeholder=\"hostname\" style={{ width: '450px' }} onChange={e => this.handleHostname(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"IP\"\n                                    name=\"network_ip\"\n                                >\n                                    <Input placeholder=\"172.99.99.99\" style={{ width: '450px' }} onChange={e => this.handleNetwork_ip(e)} />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                环境变量\n                            </span>\n                        }\n                        key=\"3\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器设置环境变量\" onChange={value => this.handleEvn(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                标签设置\n                            </span>\n                        }\n                        key=\"4\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器添加自定义标签(可选)\" onChange={value => this.handleLabel(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                资源分配\n                            </span>\n                        }\n                        key=\"5\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"CPU\"\n                                    name=\"cpu\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                            <Form>\n                                <Form.Item\n                                    label=\"Memeory\"\n                                    name=\"memeory\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                </Tabs>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" loading={loading} onClick={() => this.handle_send()}>\n                    提交\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function ContainerCreate() {\n    let { server_ip } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ContainerCreate_page server_ip={server_ip} url={url} />\n        </div>\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ImageDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_image() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'image_delele',\n                    server_ip: this.props.server_ip,\n                    image_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `镜像删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_image()}\n            >\n                删除所选镜像\n            </Button>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Button, Modal, notification, Input, message } from 'antd';\nimport { DownloadOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ImageAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n\n            input_image_name: \"\"\n        }\n    }\n\n    async send_message() {\n        const { input_image_name } = this.state;\n        this.setState({\n            loading: true,\n        })\n        message.loading({ content: '服务器下载中...', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'image_pull',\n                server_ip: this.props.server_ip,\n                image_name: input_image_name,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '下载成功！',\n                        description:\n                            `镜像:${input_image_name}下载成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        visible: false,\n                        loading: false,\n                        input_image_name: '',\n                    });\n                    this.props.onFresh();\n                } else {\n                    notification.open({\n                        message: '下载失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        loading: false,\n                    });\n                }\n\n            });\n    }\n\n    handleInput_image_name(e) {\n        this.setState({\n            input_image_name: e.target.value,\n        })\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.send_message();\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { input_image_name, loading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} onClick={this.showModal}>\n                    添加新镜像\n                </Button>\n                <Modal\n                    title=\"添加新镜像\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    confirmLoading={loading}\n                >\n                    <p>服务器将访问dockerhub搜索并下载镜像</p>\n                    <Input placeholder=\"请输入镜像名字\" addonBefore=\"docker.io\" onChange={(e) => this.handleInput_image_name(e)} value={input_image_name} />\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Descriptions, Tooltip, Skeleton } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class ImageInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_inspect',\n                server_ip: this.props.server_ip,\n                image_id: this.props.image_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <a onClick={this.showDrawer}>{this.props.image_id}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\">{data.RepoTags}</Descriptions.Item>\n                            <Descriptions.Item label=\"Docker版本\">{data.DockerVersion}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"构建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item label=\"构建平台\">{data.Architecture}</Descriptions.Item>\n                            <Descriptions.Item label=\"适用系统\">{data.Os}</Descriptions.Item>\n                            <Descriptions.Item label=\"镜像结构\">\n                                {\n                                    data.RootFS.Layers.map((item, index) =>\n                                        <div>\n                                            {`${index}: ${item}`}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <a onClick={this.showDrawer}>{this.props.image_id}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Tag, Table, Card } from 'antd';\nimport { ControlTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport ImageDeleteButton from './delete_button'\nimport ImageAddButton from './add_button'\nimport ImageInspect from './image_inspect'\n\n\nexport default function ImageOneServer(props) {\n    let { server_ip } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ImagePageHeader />\n            <ImageOneServerTable server_ip={server_ip} url={url} />\n        </div>\n    );\n}\n\nclass ImageOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: 'ID',\n                key: 'id',\n                width: '30%',\n                ellipsis: true,\n                render: (text, record) => (\n                    <ImageInspect image_id={record.Id} server_ip={this.props.server_ip} />\n                )\n            },\n            {\n                title: 'Tag',\n                key: 'tag',\n                render: (text, record) => (\n                    <Tag color=\"#108ee9\">{record.RepoTags}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_ip: this.props.server_ip,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"镜像一览\" extra={<ImageAddButton server_ip={this.props.server_ip} onFresh={() => this.handleRefresh()} />} >\n                    <div style={{ marginBottom: 16 }}>\n                        <ImageDeleteButton disabled={!hasSelected} loading={loading} server_ip={this.props.server_ip} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nfunction ImagePageHeader() {\n    let { server_ip } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"镜像详情\"\n            subTitle={`服务器:${server_ip}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class NetworkDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_network() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'network_delete',\n                    server_ip: this.props.server_ip,\n                    network_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `网络删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_network()}\n            >\n                删除所选网络\n            </Button>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Descriptions, Tooltip, Skeleton } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class NetworkInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_inspect',\n                server_ip: this.props.server_ip,\n                network_id: this.props.network_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <a onClick={this.showDrawer}>{this.props.network_name}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\">{data.Name}</Descriptions.Item>\n                            <Descriptions.Item label=\"网络类型\">{data.Driver}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"创建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"详情\">\n                                {\n                                    data.IPAM.Config.map((item, index) =>\n                                        <div>\n                                            {`网关: ${item.Gateway}`}\n                                            <br />\n                                            {`网段: ${item.Subnet}`}\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <a onClick={this.showDrawer}>{this.props.network_name}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Button, Tag, Table, Card } from 'antd';\nimport { ApartmentOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport NetworkDeleteButton from './delete_button'\nimport NetworkInspect from './network_inspect'\n\nexport default function NetworkOneServer(props) {\n    let { server_ip } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <NetworkPageHeader />\n            <NetworlOneServerTable server_ip={server_ip} url={url} />\n        </div>\n    );\n}\n\nclass NetworlOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                key: 'name',\n                render: (text, record) => (\n                    <NetworkInspect network_name={record.Name} network_id={record.Id} server_ip={this.props.server_ip}/>\n                )\n            },\n            {\n                title: '网络类型',\n                key: 'type',\n                render: (text, record) => (\n                    <Tag color=\"#2db7f5\">{record.Driver}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    record.Created\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_ip: this.props.server_ip,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"网络一览\"\n                    extra={\n                        <Link to={`${this.props.url}/create`}>\n                            <Button type=\"primary\" shape=\"round\" icon={<ApartmentOutlined />} >\n                                添加新网络\n                        </Button>\n                        </Link>\n                    }\n                >\n                    <div style={{ marginBottom: 16 }}>\n                        {<NetworkDeleteButton disabled={!hasSelected} server_ip={this.props.server_ip} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} /> }\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\nfunction NetworkPageHeader() {\n    let { server_ip } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"网络详情\"\n            subTitle={`服务器:${server_ip}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Input, Form, Divider, Select, Button, message, notification } from 'antd';\nimport { UploadOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport NetworkTypeOption from './network_type_option'\n\n\nfunction NetworkPageHeader() {\n    let { server_ip } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建新网络\"\n            subTitle={`服务器:${server_ip}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass NetworkCreate_page extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n\n            network_name_input: \"\",\n            network_type_input: \"bridge\",\n            network_type_option_input: [],\n            network_subnet_input: \"\",\n            network_iprange_input: \"\",\n            network_gateway_input: \"\",\n            network_label_input: [],\n        }\n    }\n\n    // =======================获取输入=======================\n    handleNetwork_name_input(e) {\n        this.setState({\n            network_name_input: e.target.value,\n        })\n    }\n\n    handleNetwork_type_input(value) {\n        this.setState({\n            network_type_input: value,\n        })\n    }\n\n    handleNetwork_type_option_input(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            network_type_option_input: temp_list,\n        })\n    }\n\n    handleNetwork_subnet_input(e) {\n        this.setState({\n            network_subnet_input: e.target.value,\n        })\n    }\n\n    handleNetwork_iprange_input(e) {\n        this.setState({\n            network_iprange_input: e.target.value,\n        })\n    }\n\n    handleNetwork_gateway_input(e) {\n        this.setState({\n            network_gateway_input: e.target.value,\n        })\n    }\n\n    handleNetwork_label_input(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            network_label_input: temp_list,\n        })\n    }\n    // =====================================================\n\n    async handleUpload() {\n        this.setState({\n            loading: true\n        })\n        const {\n            network_name_input,\n            network_type_input,\n            network_type_option_input,\n            network_subnet_input,\n            network_iprange_input,\n            network_gateway_input,\n            network_label_input,\n        } = this.state\n\n        if (network_name_input === \"\" || network_subnet_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            return;\n        }\n        message.loading({ content: '网络创建中', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'network_create',\n                server_ip: this.props.server_ip,\n                network_name: network_name_input,\n                network_drive: network_type_input,\n                subnet: network_subnet_input,\n                ip_range: network_iprange_input,\n                gateway: network_gateway_input,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    window.history.back();\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        const { Option } = Select;\n        const { loading } = this.state;\n        return (\n            <div>\n                <NetworkPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"network_name\"\n                    >\n                        <Input placeholder=\"为新网络起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleNetwork_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络类型配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型\"\n                        name=\"network_type\"\n                    >\n                        <Select defaultValue=\"bridge\" style={{ width: '450px' }} onChange={value => this.handleNetwork_type_input(value)}>\n                            <Option value=\"bridge\">桥接</Option>\n                            <Option value=\"macvlan\">混合</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义选项(可选)\" onChange={value => this.handleNetwork_type_option_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络详情配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"子网段\"\n                        name=\"subnet\"\n                    >\n                        <Input placeholder=\"如:172.18.0.0/16\" style={{ width: '450px' }} onChange={e => this.handleNetwork_subnet_input(e)} />\n\n                    </Form.Item>\n                    <Form.Item\n                        label=\"IP段\"\n                        name=\"iprange\"\n                    >\n                        <Input placeholder=\"如:172.18.0.0/25\" style={{ width: '450px' }} onChange={e => this.handleNetwork_iprange_input(e)} />\n\n                    </Form.Item>\n                    <Form.Item\n                        label=\"网关\"\n                        name=\"gateway\"\n                    >\n                        <Input placeholder=\"如:172.18.0.1\" style={{ width: '450px' }} onChange={e => this.handleNetwork_gateway_input(e)} />\n\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">高级配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义标签(可选)\" onChange={value => this.handleNetwork_label_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" icon={<UploadOutlined />} shape=\"round\" onClick={() => this.handleUpload()} loading={loading} >\n                    创建网络\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function NetworkCreate() {\n    let { server_ip } = useParams();\n    let { url } = useRouteMatch();\n\n    return (<NetworkCreate_page server_ip={server_ip} url={url} />)\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { QrcodeOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexCpuData(props) {\n    let used = props.data.cpu.cpu_used\n    let number = props.data.cpu.cpu_number\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"CPU占用率\" value={used} suffix=\"%\" />\n            <Divider style={{ margin: '4px 0' }} />\n            <QrcodeOutlined />  CPU核心数量: <b>{number}</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexMemoryData(props) {\n    let used = props.data.memory.used;\n    used = used.toFixed(2);\n    let total = props.data.memory.total;\n    total = total.toFixed(2);\n    let free = props.data.memory.free;\n    free = free.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"内存占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  内存总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexSwapData(props) {\n    let used = props.data.memory_swap.used;\n    used = used.toFixed(2);\n    let total = props.data.memory_swap.total;\n    total = total.toFixed(2);\n    let free = props.data.memory_swap.free;\n    free = free.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"交换空间占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  交换空间总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexNetworkData(props) {\n    let receive = props.data.network.receive;\n    let send = props.data.network.send;\n    let last_receive = props.data.network.last_receive;\n    let last_send = props.data.network.last_send;\n\n    let download = receive - last_receive;\n    let upload = send - last_send\n\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic\n                title=\"网络接收数据\"\n                value={download}\n                precision={2}\n                valueStyle={{ color: '#cf1322' }}\n                prefix={<ArrowDownOutlined />}\n                suffix=\"kb/s\"\n            />\n            <Divider style={{ margin: '10px 0' }} />\n            <Statistic\n                title=\"网络发送数据\"\n                value={upload}\n                precision={2}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<ArrowUpOutlined />}\n                suffix=\"kb/s\"\n            />\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { AppstoreOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexContainerData(props) {\n    let total = 0;\n    let running = 0;\n    let aaa = props.data.Containers;\n    if (aaa) {\n        total = props.data.Containers.length;\n        running = 0;\n        for (let i = 0; i < total; i++) {\n            if (props.data.Containers[i].State === \"running\") {\n                running++;\n            }\n        }\n    }\n    return (\n        <Card size=\"small\" title={<div><AppstoreOutlined spin={true} style={{ fontSize: '21px' }} />   <b>容器</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        已创建: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        正在运行: <b>{running}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { SaveOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexImageData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Images\n    if (aaa) {\n        total = props.data.Images.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Images[i].Size;\n        }\n        size = size / 1024 / 1024 / 1024;\n        size = size.toFixed(2);\n    }\n\n    return (\n        <Card size=\"small\" title={<div><SaveOutlined spin={true} style={{ fontSize: '21px' }} />  <b>镜像</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size} GB</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { FolderOpenOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexVolumeData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Volumes\n    if (aaa) {\n        total = props.data.Volumes.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Volumes[i].UsageData.Size\n        }\n        size = size / 1024 / 1024\n        if (size > 1000) {\n            size = size / 1024\n            size = size.toFixed(2);\n            size = `${size} GB`\n        }else{\n            size = size.toFixed(2);\n            size = `${size} MB`\n        }\n        \n    }\n\n    return (\n        <Card size=\"small\" title={<div><FolderOpenOutlined spin={true} style={{ fontSize: '21px' }} />  <b>卷</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport { Row, Col, Divider, PageHeader } from 'antd'\nimport 'antd/dist/antd.css';\n//import { AppleOutlined, AndroidOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport IndexCpuData from './index_cpu'\nimport IndexMemoryData from './index_memory'\nimport IndexSwapData from './index_swap'\nimport IndexNetworkData from './index_network'\nimport IndexContainerData from './index_container'\nimport IndexImageData from './index_image'\nimport IndexVolumeData from './index_volume'\n\n\nexport default function IndexData() {\n    let { server_ip } = useParams();\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"总览\"\n                subTitle={`服务器:${server_ip}`}\n            >\n            </PageHeader>\n            <IndexDataControl server_ip={server_ip} />\n        </div>\n    );\n}\n\nclass IndexDataControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                cpu: {\n                    cpu_number: 0,\n                    cpu_used: 0,\n                },\n                memory: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                memory_swap: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                network: {\n                    receive: 0,\n                    send: 0,\n                    last_receive: 0,\n                    last_send: 0\n                }\n            },\n            data_docker: {}\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.fetch(), 1000);\n        this.fetch_docker();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'check_server_status',\n                server_ip: this.props.server_ip,\n            }).then(d => {\n                const { data } = this.state;\n                let data2 = {\n                    ...d.data.data.data\n                }\n                data2.network.last_receive = data.network.receive\n                data2.network.last_send = data.network.send\n                this.setState({\n                    data: data2\n                })\n            });\n    }\n\n    fetch_docker() {\n        axios.post('/api',\n            {\n                api: 'system_use',\n                server_ip: this.props.server_ip,\n            }).then(d => {\n                console.log(d.data.data.data);\n                this.setState({\n                    data_docker: d.data.data.data\n                })\n            });\n    }\n\n    callback(key) {\n        console.log(key);\n    }\n\n\n    render() {\n        const { data, data_docker } = this.state\n        return (\n            <div>\n                <Divider orientation=\"left\">系统资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={6} >\n                        <IndexCpuData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexMemoryData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexSwapData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexNetworkData data={data} />\n                    </Col>\n                </Row>\n                <Divider orientation=\"left\">Docker资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={8} >\n                        <IndexContainerData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexImageData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexVolumeData data={data_docker} />\n                    </Col>\n\n                </Row>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Descriptions, Skeleton, PageHeader,Divider } from 'antd';\nimport axios from 'axios';\n\n\nexport default function ServerInfo(props) {\n    let { server_ip } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器信息\"\n                subTitle={`服务器:${server_ip}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerInfoShow server_ip={server_ip} />\n        </div>\n    );\n}\n\n\nclass ServerInfoShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data1: {},\n            data2: {},\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'system_infomation',\n                server_ip: this.props.server_ip,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data1: data.data.data.data\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'system_version',\n                server_ip: this.props.server_ip,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data2: data.data.data.data\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    render() {\n        const { data1, data2 } = this.state;\n        if (data1.OSType) {\n            let mem = data1.MemTotal / 1024 / 1024 / 1024;\n            mem = mem.toFixed(2);\n            return (\n                <div>\n                    <Descriptions\n                        title=\"系统信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"系统内核\">{data1.OSType}</Descriptions.Item>\n                        <Descriptions.Item label=\"系统名字\">{data1.Name}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU平台\">{data1.Architecture}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU数量\">{data1.NCPU}</Descriptions.Item>\n                        <Descriptions.Item label=\"内存总量\">\n                            {`${mem} GB`}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"驱动类型\">\n                            {data1.Driver}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"详细信息\">\n                            {`内核版本: ${data1.KernelVersion}`}\n                            <br />\n                            {`系统版本: ${data1.OperatingSystem}`}\n                            <br />\n                            {`ID: ${data1.ID}`}\n                        </Descriptions.Item>\n                    </Descriptions>\n                    <br /><br />\n                    <Descriptions\n                        title=\"Docker信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"版本\">{data2.Version}</Descriptions.Item>\n                        <Descriptions.Item span={2} label=\"构建时间\">{data2.BuildTime}</Descriptions.Item>\n                        <Descriptions.Item label=\"api版本\">{data2.ApiVersion}</Descriptions.Item>\n                        <Descriptions.Item label=\"适用平台\">{data2.Arch}</Descriptions.Item>\n                        <Descriptions.Item label=\"Go语言版本\">{data2.GoVersion}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Skeleton active />\n                    <Skeleton active />\n                    <Skeleton active />\n                </div>\n            );\n        }\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Typography, Descriptions, Alert, PageHeader, Divider } from 'antd';\nimport axios from 'axios';\nconst { Paragraph } = Typography;\n\nexport default function ServerPsw(props) {\n    let { server_ip } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器密钥信息\"\n                subTitle={`服务器:${server_ip}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerPswShow server_ip={server_ip} />\n        </div>\n    );\n}\n\nclass ServerPswShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'psw_check',\n            }).then(data => {\n                console.log(data.data.id)\n                this.setState({\n                    id: data.data.id\n                })\n            });\n    }\n\n    render() {\n        const { id } = this.state;\n        return (\n            <div>\n                <Alert\n                    message=\"关于服务器密钥\"\n                    description=\"服务器密钥由系统自动生成，用于与控制节点通信时使用，原则上不允许更改。如果服务器与控制节点绑定失败，可尝试复制密钥手动添加至控制节点！\"\n                    type=\"info\"\n                    showIcon\n                />\n                <br />\n                <Descriptions\n                    title=\"服务器密钥\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Descriptions.Item label=\"服务器密钥\">\n                        <Paragraph copyable>{id}</Paragraph>\n                    </Descriptions.Item>\n                </Descriptions>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification, Popconfirm } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class VolumeDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_volume() {\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'volume_delete_unused',\n                server_ip: this.props.server_ip,\n            }).then(data => {\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    let free_size = data.data.data.data.SpaceReclaimed / 1024 / 1024\n                    if (free_size > 1000) {\n                        free_size = free_size / 1024;\n                        free_size = `${free_size.toFixed(2)} GB 储存空间`\n                    } else {\n                        free_size = `${free_size.toFixed(2)} MB 储存空间`\n                    }\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `已释放: ${free_size}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                } else {\n                    notification.open({\n                        message: '删除失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                }\n            });\n        this.setState({\n            loading: false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const { loading } = this.state\n        return (\n            <Popconfirm placement=\"top\" title=\"该操作无法撤销，您确定要删除未使用的卷吗？\" onConfirm={() => this.delete_volume()} okText=\"确定\" cancelText=\"我再想想\">\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    danger\n                    disabled={this.props.disabled}\n                    loading={loading}\n                >\n                    删除未使用的卷\n            </Button>\n            </Popconfirm>\n        );\n    }\n}","import React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Table, Tag, PageHeader, Card } from 'antd';\n\nimport axios from 'axios';\n\nimport VolumeDeleteButton from './delete_button'\n\n\n\nfunction VolumePageHeader() {\n    let { server_ip } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"卷详情\"\n            subTitle={`服务器:${server_ip}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport default function VolumeOneServer() {\n    let { server_ip } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <VolumePageHeader />\n            <VolumeOneServerTable server_ip={server_ip} url={url} />\n        </div>\n    )\n}\n\nclass VolumeOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Name',\n                key: 'name',\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                dataIndex: 'CreatedAt',\n            }\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'volume_info',\n                server_ip: this.props.server_ip,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data.Volumes,\n                    loading: false,\n                })\n            });\n    }\n\n    fresh_table() {\n        this.fetch();\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"卷一览\" extra={<VolumeDeleteButton server_ip={this.props.server_ip} onFresh={() => this.fresh_table()} />} >\n                    <Table loading={loading} rowKey={record => record.Name} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Breadcrumb } from 'antd';\n\nimport { AllHeader } from '../../components/header'\nimport IndexMenu from '../../components/index_menu'\nimport { ContainerOne } from '../../components/container_info'\nimport ContainerOneServer from '../../components/container_table/one_container_table'\nimport ContainerCreate from '../../components/container_create'\nimport ImageOneServer from '../../components/image_table/one_server_image'\nimport NetworkOneServer from '../../components/network_table/one_network'\nimport NetworkCreate from '../../components/network_create'\nimport IndexData from '../../components/index_data'\nimport ServerInfo from '../../components/server_info'\nimport ServerPsw from '../../components/server_psw'\nimport VolumeOneServer from '../../components/volume_table'\n\n\n\nconst { Content } = Layout;\n\n\nexport default function Index() {\n    let { url } = useRouteMatch();\n\n    return (\n        <Layout>\n            <AllHeader number={'1'} />\n            <Layout>\n                <Switch>\n                    <Route exact path={`${url}/:server_ip`}>\n                        <IndexMenu selectOptins='0' />\n                    </Route>\n                    <Route path={`${url}/:server_ip/serverinfo`}>\n                        <IndexMenu openKey='sub1' selectOptins='1' />\n                    </Route>\n                    <Route path={`${url}/:server_ip/server_secret`}>\n                        <IndexMenu openKey='sub1' selectOptins='2' />\n                    </Route>\n                    <Route path={`${url}/:server_ip/containerinfo`}>\n                        <IndexMenu openKey='sub2' selectOptins='5' />\n                    </Route>\n                    <Route path={`${url}/:server_ip/image`}>\n                        <IndexMenu openKey='sub4' selectOptins='9' />\n                    </Route>\n                    <Route path={`${url}/:server_ip/network`}>\n                        <IndexMenu openKey='sub5' selectOptins='10' />\n                    </Route>\n                    <Route path={`${url}/:server_ip/volume`}>\n                        <IndexMenu openKey='sub6' selectOptins='11' />\n                    </Route>\n                </Switch>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Switch>\n                        <Route exact path={`${url}/:server_ip`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <IndexData />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_ip/serverinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器信息</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerInfo />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_ip/server_secret`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器密钥</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerPsw />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_ip/containerinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOneServer />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_ip/containerinfo/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器创建</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerCreate />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_ip/containerinfo/info/:id`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器详情</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOne />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_ip/image`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>镜像一览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ImageOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_ip/network`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>网络总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_ip/network/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>创建新网络</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkCreate />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_ip/volume/`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>卷管理</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <VolumeOneServer />\n                            </Content>\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nimport { Form, Input, Button, Checkbox, message, } from 'antd';\n\n\n\nexport class LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n        this.layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 12 },\n        };\n        this.tailLayout = {\n            wrapperCol: { offset: 8, span: 12 },\n        };\n    }\n\n    async onFinish(values) {\n        console.log(values);\n        this.setState({\n            loading: true,\n        });\n\n        await axios.post('/api',\n            {\n                api: 'login',\n                username: values.username,\n                password: values.password,\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.Login()\n                    window.location.replace('/')\n                } else {\n                    message.info('用户或密码错误！');\n                }\n            });\n\n        this.setState({\n            loading: false,\n        });\n    }\n\n    onFinishFailed() {\n        //console.log('Failed:');\n    }\n\n    render() {\n        return (\n            <div>\n                <Form\n                    {...this.layout}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={values => this.onFinish(values)}\n                    onFinishFailed={() => this.onFinishFailed()}\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                        rules={[{ required: true, message: '请输入用户名!' }]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                        rules={[{ required: true, message: '请输入密码!' }]}\n                    >\n                        <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item {...this.tailLayout} name=\"remember\" valuePropName=\"checked\">\n                        <Checkbox>记住我</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item {...this.tailLayout}>\n                        <Button loading={this.state.loading} type=\"primary\" htmlType=\"submit\">\n                            登录\n            </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport {\n    Row,\n    Col,\n    Calendar,\n    Spin,\n} from 'antd'\nimport { LoginForm } from '../../components/login_form'\nimport axios from 'axios';\n\n\n\nfunction onPanelChange(value, mode) {\n    console.log(value.format('YYYY-MM-DD'), mode);\n}\n\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            welcome: false,\n        }\n    }\n\n    componentDidMount(){\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    window.location.replace('/welcome')\n                    this.setState({\n                        loading: false,\n                        welcome: true,\n                    })\n                } else {\n                    this.setState({\n                        loading: false,\n                        welcome: false,\n                    })\n                }\n            });\n    }\n\n    render() {\n        const { loading, welcome } = this.state;\n        if (loading) {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            )\n        } else {\n            if (welcome) {\n                window.location.replace('/welcome')\n            } else {\n                return (\n                    <div>\n                        <Row>\n                            <Col span={24}><br></br></Col>\n                        </Row>\n                        <Row align={'middle'}>\n                            <Col span={1} />\n                            <Col span={12}>\n                                <Calendar onPanelChange={onPanelChange} />\n                            </Col>\n                            <Col span={9}>\n                                <LoginForm Login={() => this.props.Login()} />\n                            </Col>\n                            <Col span={2} />\n                        </Row>\n                    </div>\n                )\n            }\n        }\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Result, Button } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\n\n\nexport default function welcome_1(props) {\n    return (\n        <Result\n            icon={<SmileOutlined />}\n            title=\"欢迎来到Docker可视化管理平台\"\n            extra={<Button type=\"primary\" onClick={() => props.onNext()} >下一步</Button>}\n        />\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Result, message } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nclass WelcomeSignup extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    send_regist(value) {\n        axios.post('/welcome_api',\n            {\n                api: 'create_user',\n                ...value\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info('服务器开小差了，请稍后再试');\n                }\n            });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 8 },\n        };\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n        return (\n            <Result\n                icon={<SmileOutlined />}\n                title=\"请注册一个管理员用户\"\n                extra={<Form\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={(value) => this.send_regist(value)}\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                        rules={[{ required: true, message: '请输入你的用户名' }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                        rules={[{ required: true, message: '请输入密码' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"请再次输入密码\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: '请确认你的密码',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('两次输入的密码不匹配');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            下一步\n                        </Button>\n                    </Form.Item>\n                </Form>}\n            />\n\n        );\n    }\n}\n\n\nexport default function welcome_2(props) {\n    return (\n        <WelcomeSignup onNext={() => props.onNext()} />\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, message, Result, Input, Radio, Card } from 'antd';\nimport { DatabaseTwoTone, ApiTwoTone, EditTwoTone, ContactsTwoTone, EyeInvisibleTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default function welcome_3(props) {\n    return (\n        <WelcomeBindServer onNext={() => props.onNext()} />\n    );\n}\n\n\nclass WelcomeBindServer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            server_ip_input: \"\",\n            server_name_input: \"\",\n            server_type_input: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n        }\n    }\n\n    handleServer_ip_input(e) {\n        this.setState({\n            server_ip_input: e.target.value\n        })\n    }\n\n    handleServer_name_input(e) {\n        this.setState({\n            server_name_input: e.target.value\n        })\n    }\n\n    handleServer_type_input(e) {\n        this.setState({\n            server_type_input: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    send_args() {\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input } = this.state\n        axios.post('/welcome_api',\n            {\n                api: 'create_server',\n                server_ip: server_ip_input,\n                server_name: server_name_input,\n                server_type: server_type_input,\n                server_user: server_user_input,\n                server_psw: server_psw_input\n\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info(data.data.message);\n                }\n            });\n    }\n\n    render() {\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input } = this.state\n        return (\n            <Result\n                icon={<DatabaseTwoTone />}\n                title=\"请绑定您第一台服务器节点\"\n                extra={\n                    <div>\n                        <center>\n                            <Card title=\"请输入服务器信息\" bordered={false} style={{ width: 500 }}>\n                                <Input.Group>\n                                    服务器ip:<Input onChange={(e) => this.handleServer_ip_input(e)} value={server_ip_input} style={{ width: 300, marginLeft: 10 }} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                                    <br /><br />\n                                    服务器名字:<Input onChange={(e) => this.handleServer_name_input(e)} value={server_name_input} style={{ width: 290, marginLeft: 5 }} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                                </Input.Group>\n                                <br />\n                                连接类型:\n                                <Radio.Group onChange={(e) => this.handleServer_type_input(e)} defaultValue={server_type_input} buttonStyle=\"solid\">\n                                    <Radio.Button value=\"http\">HTTP</Radio.Button>\n                                    <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                                </Radio.Group>\n                                <br /><br />\n                                <Input.Group>\n                                    服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                                    <br /><br />\n                                    服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                                </Input.Group>\n                            </Card>\n                            <Button onClick={() => this.send_args()} type=\"primary\">下一步</Button>\n                        </center>\n                    </div>\n                }\n            />\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Result, Button } from 'antd';\n\n\nexport default function welcome_4(props) {\n    return (\n        <Result\n            status=\"success\"\n            title=\"一切准备就绪\"\n            subTitle=\"现在您可以尽情使用了\"\n            extra={[\n                <Link to=\"/\">\n                    <Button type=\"primary\" key=\"console\">\n                        进入平台\n                    </Button>\n                </Link>,\n            ]}\n        />\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Steps, Col, Row, Spin } from 'antd';\nimport axios from 'axios';\n\nimport welcome_1 from '../../components/welcome/welcome_1'\nimport welcome_2 from '../../components/welcome/welcome_2'\nimport welcome_3 from '../../components/welcome/welcome_3'\nimport welcome_4 from '../../components/welcome/welcome_4'\n\n\nexport default class WelcomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 0,\n            welcome: false\n        };\n        this.steps = [\n            {\n                title: '开始',\n                content: welcome_1\n            },\n            {\n                title: '注册',\n                content: welcome_2,\n            },\n            {\n                title: '绑定一个服务器',\n                content: welcome_3,\n            },\n            {\n                title: '结束',\n                content: welcome_4,\n            },\n        ];\n    }\n\n    next() {\n        const current = this.state.current + 1;\n        this.setState({ current });\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({ current });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.setState({\n                        welcome: true,\n                    })\n                } else {\n                    this.setState({\n                        welcome: false,\n                    })\n                    window.location.replace('/')\n                }\n            });\n    }\n\n    render() {\n        const { current, welcome } = this.state;\n        const { Step } = Steps;\n        if (welcome) {\n            return (\n                <div>\n                    <br /><br /><br /><br /><br />\n                    <Row gutter={[8, 8]}>\n                        <Col span={3} />\n                        <Col span={18} >\n                            <Steps current={current}>\n                                {this.steps.map(item => (\n                                    <Step key={item.title} title={item.title} />\n                                ))}\n                            </Steps>\n                            <div className=\"steps-content\">{this.steps[current].content({ onNext: () => this.next(), })}</div>\n                        </Col>\n                        <Col span={3} />\n                    </Row>\n                </div>\n            );\n        } else {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Modal, Input, Radio, notification } from 'antd';\nimport { DatabaseOutlined, ApiTwoTone, EditTwoTone, SmileOutlined, ContactsTwoTone, EyeInvisibleTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ServerAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            visible: false,\n\n            input_server_ip: \"\",\n            input_server_name: \"\",\n            input_server_type: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n        }\n    }\n\n    async submit_input() {\n        const { input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input } = this.state\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_add',\n                server_ip: input_server_ip,\n                server_name: input_server_name,\n                server_type: input_server_type,\n                server_user: server_user_input,\n                server_psw: server_psw_input\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    input_server_ip: \"\",\n                    input_server_name: \"\",\n                    input_server_type: \"http\",\n                    server_user_input: \"root\",\n                    server_psw_input: \"\",\n                    visible: false\n                })\n                notification.open({\n                    message: '创建成功！',\n                    description:\n                        `节点:${input_server_name}创建成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.props.onFresh();\n    }\n\n    // =================================================\n    // 监听对话框\n    // =================================================\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.submit_input();\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n    // ====================================================\n\n    // ==========================================\n    // 监听输入框\n    // ==========================================\n    handleInput_server_type = (e) => {\n        this.setState({\n            input_server_type: e.target.value\n        })\n    }\n\n    handleInput_server_ip = (e) => {\n        this.setState({\n            input_server_ip: e.target.value\n        })\n    }\n\n    handleInput_server_name = (e) => {\n        this.setState({\n            input_server_name: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    // ====================================================\n\n    render() {\n        const { loading, visible, input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input } = this.state\n        return (\n            <div>\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DatabaseOutlined />}\n                    onClick={this.showModal}\n                >\n                    添加新的服务器节点\n            </Button>\n                <Modal\n                    visible={visible}\n                    title=\"添加服务器\"\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={this.handleCancel}>\n                            返回\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n                            提交\n                        </Button>,\n                    ]}\n                >\n                    <Input.Group>\n                        服务器ip:<Input value={input_server_ip} onChange={this.handleInput_server_ip} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                        服务器名字:<Input value={input_server_name} onChange={this.handleInput_server_name} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                    </Input.Group>\n                    <br />\n                    连接类型:\n                    <Radio.Group onChange={this.handleInput_server_type} defaultValue={input_server_type} buttonStyle=\"solid\">\n                        <Radio.Button value=\"http\">HTTP</Radio.Button>\n                        <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                    </Radio.Group>\n                    <br /><br />\n                    <Input.Group>\n                        服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                        <br /><br />\n                        服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                    </Input.Group>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Popconfirm, notification, Tooltip } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ServerDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_server() {\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_delete',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                })\n                notification.open({\n                    message: '删除成功！',\n                    description:\n                        `节点:${this.props.server_id}删除成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <Tooltip placement=\"top\" title=\"删除该服务器\">\n                <Popconfirm placement=\"right\" title=\"您确定要删除该节点吗\" onConfirm={() => this.delete_server()} okText=\"是\" cancelText=\"否\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} danger />\n                </Popconfirm>\n            </Tooltip>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Card, Tag, Button, Tooltip } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport ServerAddButton from './add_button'\nimport ServerDeleteButton from './delete_button'\n\nexport class ServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '节点名字',\n                dataIndex: 'server_name',\n                key: 'name',\n            },\n            {\n                title: '节点ip',\n                dataIndex: 'server_ip',\n                key: 'age',\n            },\n            {\n                title: '状态',\n                key: 'server_status',\n                render: (text, record) => {\n                    if (record.server_status === 0) {\n                        return (<Tag color=\"green\">在线</Tag>)\n                    } else {\n                        return (<Tag color=\"red\">离线</Tag>)\n                    }\n                }\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <div>\n                        <span style={{ marginRight: 8 }}>\n                            <Tooltip placement=\"top\" title=\"进入该服务器\">\n                                <Link to={`${this.props.url}control/${record.server_ip}`} >\n                                    <Button type=\"primary\" shape=\"circle\" icon={<FullscreenOutlined />} />\n                                </Link>\n                            </Tooltip>\n                        </span>\n                        <span style={{ marginRight: 8 }}>\n                            <ServerDeleteButton server_id={record.id} onFresh={() => this.handleRefresh()} />\n                        </span>\n                    </div>\n                ),\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'server_info',\n            }).then(d => {\n                this.setState({\n                    data: d.data.data,\n                    loading: false,\n                })\n                for (let i = 0; i < d.data.data.length; i++) {\n                    axios.post('/api',\n                        {\n                            api: 'server_check',\n                            server_ip: d.data.data[i].server_ip,\n                        }).then(d2 => {\n                            const { data } = this.state;\n                            data[i][\"server_status\"] = d2.data.status\n                            this.setState({\n                                data: data,\n                            })\n                        });\n                }\n            });\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"服务器一览\" extra={<ServerAddButton onFresh={() => this.handleRefresh()} />} >\n                    <Table loading={loading} rowKey={record => record.id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nexport default function ServerTableHook() {\n    let { url } = useRouteMatch();\n\n    return (\n        <ServerTable url={url} />\n    );\n}\n\n\n// import { Table, Button, Popconfirm, notification, Modal, Input } from 'antd';\n// import { DeleteOutlined, SmileOutlined, EditOutlined, AppstoreAddOutlined, FormOutlined, CloudServerOutlined } from '@ant-design/icons';\n// import axios from 'axios';\n\n\n\n\n// class ServerDeleteButton extends React.Component {\n\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             loading: props.loading,\n//         }\n//     }\n\n//     async deleteServer() {\n//         this.setState({\n//             loading: true,\n//         });\n\n//         await axios.post('/api',\n//             {\n//                 api: 'server_delete',\n//                 id: this.props.id,\n//             }).then(data => {\n//                 //message.info('删除成功!');\n//                 notification.open({\n//                     message: '删除成功!',\n//                     description:\n//                         '节点:' + this.props.id + '  删除成功!',\n//                     icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n//                 });\n//             });\n\n//         this.setState({\n//             loading: false,\n//         });\n\n//         this.props.onClick();\n//     }\n\n//     render() {\n//         return (\n//             <span>\n//                 <Popconfirm\n//                     placement=\"right\"\n//                     title={'您确定要删除该节点吗？'}\n//                     onConfirm={() => this.deleteServer()}\n//                     okText=\"是\"\n//                     cancelText=\"否\">\n//                     <Button\n//                         type=\"primary\"\n//                         shape=\"circle\"\n//                         icon={<DeleteOutlined />}\n//                         danger\n//                         loading={this.state.loading}\n//                     />\n//                 </Popconfirm>\n//             </span>\n//         )\n//     }\n// }\n\n// class ServerEditButton extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             loading: false,\n//             visible: false,\n//             input_value: '',\n//         };\n//     }\n\n//     showModal = () => {\n//         this.setState({\n//             visible: true,\n//         });\n//     };\n\n//     async handleOk() {\n//         this.setState({ loading: true });\n\n//         await axios.post('/api',\n//             {\n//                 api: 'server_renew',\n//                 id: this.props.id,\n//                 name: this.state.input_value,\n//             }).then(data => {\n//                 //message.info('删除成功!');\n//                 notification.open({\n//                     message: '修改成功!',\n//                     description:\n//                         '节点:' + this.props.id + '  名字修改成功!',\n//                     icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n//                 });\n//             });\n\n//         this.props.onClick();\n\n//         this.setState({ loading: false, visible: false });\n//     };\n\n//     handleCancel = () => {\n//         this.setState({ visible: false });\n//     };\n\n//     handleInpul(e) {\n//         this.setState({\n//             input_value: e.target.value\n//         })\n//     }\n\n//     render() {\n//         const { visible, loading } = this.state;\n//         return (\n//             <span>\n//                 <Button\n//                     type=\"primary\"\n//                     shape=\"circle\"\n//                     icon={<EditOutlined />}\n//                     onClick={this.showModal}\n//                 />\n//                 <Modal\n//                     visible={visible}\n//                     title=\"节点信息修改\"\n//                     onOk={this.handleOk}\n//                     onCancel={this.handleCancel}\n//                     footer={[\n//                         <Button key=\"back\" onClick={this.handleCancel}>\n//                             返回\n//                     </Button>,\n//                         <Button key=\"submit\" type=\"primary\" loading={loading} onClick={() => this.handleOk()}>\n//                             提交\n//                     </Button>,\n//                     ]}\n//                 >\n//                     <p>\n//                         <Input\n//                             size=\"large\"\n//                             placeholder=\"请输入名字...\"\n//                             prefix={<FormOutlined />}\n//                             defaultValue={this.props.name}\n//                             onChange={this.handleInpul.bind(this)}\n//                         />\n//                     </p>\n//                 </Modal>\n//             </span>\n//         )\n//     }\n// }\n\n// class ServerAddButton extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             loading: false,\n//             visible: false,\n//             input_name: '',\n//             input_ip: '',\n//         };\n//     }\n\n//     handleInpulName(e) {\n//         this.setState({\n//             input_name: e.target.value\n//         })\n//     }\n\n//     handleInpulIp(e) {\n//         this.setState({\n//             input_ip: e.target.value\n//         })\n//     }\n\n//     showModal = () => {\n//         this.setState({\n//             visible: true,\n//         });\n//     };\n\n//     async handleOk() {\n//         this.setState({ loading: true });\n\n//         await axios.post('/api',\n//             {\n//                 api: 'server_add',\n//                 ip: this.state.input_ip,\n//                 name: this.state.input_name,\n//             }).then(data => {\n//                 //message.info('删除成功!');\n//                 notification.open({\n//                     message: '添加成功!',\n//                     description:\n//                         '节点:' + data.data.uuid + '  添加成功!',\n//                     icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n//                 });\n//             });\n\n//         this.props.onClick();\n\n//         this.setState({ loading: false, visible: false, input_ip: '', input_name: '' });\n//     };\n\n//     handleCancel = () => {\n//         this.setState({ visible: false });\n//     };\n\n//     render() {\n//         const { visible, loading } = this.state;\n//         return (\n//             <div>\n//                 <Button\n//                     type=\"primary\"\n//                     shape=\"round\"\n//                     icon={<AppstoreAddOutlined />}\n//                     onClick={this.showModal}\n//                 >添加新节点</Button>\n//                 <Modal\n//                     visible={visible}\n//                     title=\"节点添加\"\n//                     onOk={this.handleOk}\n//                     onCancel={this.handleCancel}\n//                     footer={[\n//                         <Button key=\"back\" onClick={this.handleCancel}>\n//                             取消\n//             </Button>,\n//                         <Button key=\"submit\" type=\"primary\" loading={loading} onClick={() => this.handleOk()}>\n//                             提交\n//             </Button>,\n//                     ]}\n//                 >\n//                     <p>\n//                         <Input\n//                             size=\"large\"\n//                             prefix={<FormOutlined />}\n//                             placeholder=\"请输入节点名字...\"\n//                             onChange={this.handleInpulName.bind(this)}\n//                             value={this.state.input_name}\n//                         />\n//                     </p>\n//                     <p>\n//                         <Input\n//                             size=\"large\"\n//                             prefix={<CloudServerOutlined />}\n//                             placeholder=\"请输入节点ip...\"\n//                             onChange={this.handleInpulIp.bind(this)}\n//                             value={this.state.input_ip}\n//                         />\n//                     </p>\n//                 </Modal>\n//             </div>\n//         );\n//     }\n// }\n\n// export class ServerTable extends React.Component {\n//     state = {\n//         data: [],\n//         pagination: {},\n//         loading: false,\n//     };\n\n//     columns = [\n//         {\n//             title: '节点名字',\n//             dataIndex: 'name',\n//             width: '20%',\n//         },\n//         {\n//             title: '节点ip',\n//             dataIndex: 'ip',\n//             width: '20%',\n//         },\n//         {\n//             title: '状态',\n//             dataIndex: 'status',\n//             width: '20%'\n//         },\n//         {\n//             title: '操作',\n//             dataIndex: \"tags\",\n//             render: (text, record, index) => {\n//                 return (\n//                     <span>\n//                         <ServerDeleteButton\n//                             loading={Boolean(false)}\n//                             id={record.id}\n//                             onClick={() => this.handleRefresh({ id: record.id })}\n//                         />\n//                         <ServerEditButton\n//                             id={record.id}\n//                             name={record.name}\n//                             onClick={() => this.handleRefresh({ id: record.id })}\n//                         />\n//                     </span>\n//                 )\n//             }\n//         }\n//     ];\n\n\n//     handleRefresh(props) {\n\n//         const pager = { ...this.state.pagination };\n\n//         this.fetch({\n//             page: pager.current,\n//             results: 8,\n//         });\n\n//     }\n\n\n//     componentDidMount() {\n//         this.fetch({\n//             page: 1,\n//             results: 8,\n//         });\n//     }\n\n//     handleTableChange = (pagination, filters, sorter) => {\n//         const pager = { ...this.state.pagination };\n//         pager.current = pagination.current;\n//         this.setState({\n//             pagination: pager,\n//         });\n//         this.fetch({\n//             results: pagination.pageSize,\n//             page: pagination.current,\n//             sortField: sorter.field,\n//             sortOrder: sorter.order,\n//             ...filters,\n//         });\n//     };\n\n//     fetch = (params = {}) => {\n//         this.setState({ loading: true });\n\n//         axios.post('/api',\n//             {\n//                 api: 'server_info',\n//                 page_current: params.page,\n//                 need: params.results,\n//             }).then(data => {\n//                 const pagination = { ...this.state.pagination };\n//                 // Read total count from server\n//                 // pagination.total = data.totalCount;\n//                 pagination.total = data.data.total;\n//                 pagination.current = params.page;\n//                 pagination.pageSize = params.results;\n//                 this.setState({\n//                     loading: false,\n//                     data: data.data.data,\n//                     pagination: pagination,\n//                 });\n//             });\n//     };\n\n//     render() {\n//         return (\n//             <div>\n//                 <ServerAddButton onClick={() => this.handleRefresh()} />\n//                 <Table\n//                     columns={this.columns}\n//                     rowKey={record => record.id}\n//                     dataSource={this.state.data}\n//                     pagination={this.state.pagination}\n//                     loading={this.state.loading}\n//                     onChange={this.handleTableChange}\n//                 />\n//             </div>\n//         );\n//     }\n// }","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Layout, Breadcrumb, Divider, Col, Row, Card,Alert } from 'antd';\nimport './index.css';\nimport { AllHeader } from '../../components/header'\n\nimport ServerTableHook from '../../components/server_table'\n\nexport default class HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    render() {\n        const { Header, Content, Footer } = Layout;\n        const { Meta } = Card;\n        const { loading } = this.state;\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <AllHeader number={'1'} />\n                </Header>\n                <Content style={{ padding: '0 50px' }} className=\"site-layout-background\">\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>主页</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Divider orientation=\"left\">系统公告</Divider>\n                    <Row justify=\"center\" gutter={[16, 16]}>\n                        <Col span={24} >\n                            <Alert\n                                message=\"欢迎来到Docker容器可视化平台\"\n                                description=\"请选择一个服务器来进行操作。您也可以添加新的服务器或者删除一个服务器\"\n                                type=\"info\"\n                                showIcon\n                            />\n                        </Col>\n                    </Row>\n                    <Divider orientation=\"left\">进入服务器</Divider>\n                    <ServerTableHook />\n                    <Divider />\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</Footer>\n            </Layout>\n        )\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, useLocation, Redirect } from 'react-router-dom'\n\nimport Index from '../pages/index'\nimport Login from '../pages/login'\nimport WelcomePage from '../pages/welcome'\nimport HomePage from '../pages/home'\nimport { Spin } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nimport './index.css';\n\n\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nexport default class AuthExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isAuthenticated: false,\n            isSend: false\n        }\n    }\n\n    componentDidMount() {\n        axios.post('/api',\n            {\n                api: 'check_login',\n            }).then(d => {\n                this.setState({\n                    isSend: true,\n                    isAuthenticated: d.data.isLogin\n                })\n            });\n    }\n\n    authenticate() {\n        this.setState({\n            isAuthenticated: true,\n            isSend: true\n        })\n    }\n\n    render() {\n        const { isAuthenticated, isSend } = this.state\n        return (\n            <Router>\n                <PrivateRoute path='/control' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <Index />\n                </PrivateRoute>\n                <PrivateRoute exact path='/' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <HomePage />\n                </PrivateRoute>\n                <Route path='/login' >\n                    <Login Login={() => this.authenticate()} />\n                </Route>\n                <Route path='/welcome' >\n                    <WelcomePage />\n                </Route>\n            </Router>\n        );\n    }\n}\n\n\nfunction LoginPage(props) {\n    let history = useHistory();\n    let location = useLocation();\n\n    let { from } = location.state || { from: { pathname: \"/\" } };\n    let login = () => {\n        props.Login(() => {\n            history.replace(from);\n        });\n    };\n\n    return (\n        <div>\n            <p>You must log in to view the page at {from.pathname}</p>\n            <button onClick={login}>Log in</button>\n        </div>\n    );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n    console.log(rest.isSend)\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                rest.isSend ? (\n                    rest.isAuthenticated ? (\n                        children\n                    ) : (\n                            <Redirect\n                                to={{\n                                    pathname: \"/login\",\n                                    state: { from: location }\n                                }}\n                            />\n                        )\n                ) : (\n                        <div align=\"center\" style={{\"marginTop\":\"20%\"}}>\n                            <Spin size=\"large\" />\n                        </div>\n\n                    )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './router';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}