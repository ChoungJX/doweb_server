{"version":3,"sources":["components/container_create/mutiple_switch/index.js","components/network_create/network_type_option/index.js","components/header/index.js","components/index_menu/index.js","components/container_info/index.js","components/container_table/one_container_table/one_container_action_button/index.js","components/container_table/one_container_table/one_container_inspect/index.js","components/container_table/one_container_table/index.js","components/container_create/image_select/index.js","components/container_create/network_select/index.js","components/container_create/ports_choose/index.js","components/container_create/index.js","components/image_table/one_server_image/delete_button/index.js","components/image_table/one_server_image/add_button/index.js","components/image_table/one_server_image/image_inspect/index.js","components/image_table/one_server_image/index.js","components/network_table/one_network/delete_button/index.js","components/network_table/one_network/network_inspect/index.js","components/network_table/one_network/index.js","components/network_create/index.js","components/index_data/index_cpu/index.js","components/index_data/index_memory/index.js","components/index_data/index_swap/index.js","components/index_data/index_network/index.js","components/index_data/index_container/index.js","components/index_data/index_image/index.js","components/index_data/index_volume/index.js","components/index_data/index.js","components/server_info/index.js","components/server_psw/index.js","components/volume_table/delete_button/index.js","components/volume_table/index.js","pages/index/index.js","components/login_form/index.js","pages/login/index.js","components/welcome/welcome_1/index.js","components/welcome/welcome_2/index.js","components/welcome/welcome_3/index.js","components/welcome/welcome_4/index.js","pages/welcome/index.js","components/server_table/add_button/index.js","components/server_table/delete_button/index.js","components/server_table/index.js","pages/home/index.js","components/user_menu/index.js","components/user_info/delete_button/index.js","components/user_info/index.js","components/user_create/index.js","pages/user/index.js","router/index.js","index.js"],"names":["MultipleSwitch","state","items","items_value","input_key","input_value","selected","onKeyChange","event","setState","target","value","onValueChange","onSelectedChange","console","log","eval","addItem","this","Option","mode","style","width","placeholder","props","args","onChange","dropdownRender","menu","margin","orientation","display","flexWrap","padding","addonBefore","flex","align","cursor","onClick","map","item","key","React","Component","NetworkTypeOption","Header","AllHeader","className","theme","defaultSelectedKeys","number","lineHeight","Item","to","SubMenu","Sider","IndexSider","onOpenChange","openKeys","latestOpenKey","find","indexOf","rootSubmenuKeys","openKey","openOptions","selectOptins","defaultOpenKeys","ArrowLeftOutlined","fontSize","EyeOutlined","server_id","title","CloudServerOutlined","AppstoreOutlined","SaveOutlined","ApartmentOutlined","FolderOpenOutlined","IndexMenu","useParams","ContainerPageHeader","id","ghost","onBack","window","history","back","subTitle","ContainerInfo","loading","data","get_args","axios","post","api","then","active","ContainerOne","OneContainerActionButton","e","handleMenuClick","url","onLoading","notification","open","message","description","icon","SmileOutlined","color","onFresh","length","error","i","container_id","overlay","disabled","DownOutlined","ContainerInspect","showDrawer","visible","fetch","onClose","success","base64","ip","user","psw","location","replace","NetworkSettings","network_drive","Object","keys","Networks","placement","type","shape","closable","bordered","column","xxl","xl","lg","md","sm","xs","span","label","Id","Name","IPAddress","State","Status","status","text","Created","split","PlayCircleOutlined","size","handleStart","marginLeft","ReloadOutlined","handleRestart","PoweroffOutlined","danger","handleStop","FundProjectionScreenOutlined","handelGotoTerminal","Config","Image","Ports","index","item2","index2","HostIp","HostPort","Cmd","Env","ContainerInspectButton","ContainerOneServerTable","onSelectChange","selectedRowKeys","columns","dataIndex","render","record","show_ip","moment","format","handleRefresh","get_net_work_name","rowSelection","hasSelected","extra","handleLoading","rowKey","dataSource","ContainerOneServer","useRouteMatch","ContainerSearchImage","get_image_list","labelInValue","notFoundContent","handleValue","d","RepoTags","ContainerSearchNetwork","PortsChoose","onCportChange","input_cport","onHipChange","input_hip","onHportChange","input_hport","onTypeChange","input_type","temp_list","one_key","JSON","parse","items2","Group","buttonStyle","Button","PlusOutlined","TabPane","ContainerCreate_page","container_name_input","image_name_input","ports","ports2","command_input","entrypotin_input","user_input","ifTty","ifInteractive","network_name_input","hostname","network_ip","env","value1","value2","temp_dict","temp_dict2","network_config","content","duration","image","name","connect_port","export_port","cmd","entrypoint","Tty","interactive","network_model","setTimeout","handleContainer_name_input","handleImage_name_input","handlePorts","defaultActiveKey","tab","AppleOutlined","handleCommand_input","handleEntrypotin_input","handleUser_input","handleIfTty","marginRight","handleIfInteractive","AndroidOutlined","handleNetwork_name_input","handleHostname","handleNetwork_ip","handleEvn","handleLabel","min","max","step","handle_send","ContainerCreate","ImageDeleteButton","image_id","DeleteOutlined","delete_image","ImageAddButton","showModal","handleOk","send_message","handleCancel","input_image_name","image_name","DownloadOutlined","onOk","onCancel","confirmLoading","handleInput_image_name","ImageInspect","DockerVersion","Architecture","Os","RootFS","Layers","ImageOneServer","ImagePageHeader","ImageOneServerTable","ellipsis","marginBottom","NetworkDeleteButton","network_id","delete_network","NetworkInspect","network_name","Driver","IPAM","Gateway","Subnet","NetworkOneServer","NetworkPageHeader","NetworlOneServerTable","NetworkCreate_page","network_type_input","network_type_option_input","network_subnet_input","network_iprange_input","network_gateway_input","network_label_input","network_macvlan_drive_input","network_type_option_input_new","subnet","ip_range","gateway","option","defaultValue","handleNetwork_type_input","handleNetwork_type_option_input","handleNetwork_macvlan_drive_input","handleNetwork_subnet_input","handleNetwork_iprange_input","handleNetwork_gateway_input","handleNetwork_label_input","UploadOutlined","handleUpload","NetworkCreate","IndexCpuData","used","cpu","cpu_used","cpu_number","height","suffix","QrcodeOutlined","IndexMemoryData","memory","toFixed","total","free","percent","PieChartOutlined","HddOutlined","IndexSwapData","memory_swap","IndexNetworkData","receive","network","send","time","last_receive","last_send","last_time","download","upload","download_unit","upload_unit","precision","valueStyle","prefix","ArrowDownOutlined","ArrowUpOutlined","Paragraph","IndexContainerData","running","Containers","spin","IndexImageData","Images","Size","IndexVolumeData","Volumes","UsageData","IndexData","IndexDataControl","data_docker","interval","setInterval","fetch_docker","clearInterval","data2","justify","gutter","ServerInfo","ServerInfoShow","str","server_name","catch","err","data1","OSType","mem","MemTotal","editable","NCPU","KernelVersion","OperatingSystem","ID","Version","BuildTime","ApiVersion","Arch","GoVersion","ServerPsw","ServerPswShow","onChangeUser","server_user","warning","onChangePsw","server_psw","showIcon","copyable","VolumeDeleteButton","free_size","SpaceReclaimed","onConfirm","delete_volume","okText","cancelText","VolumePageHeader","VolumeOneServer","VolumeOneServerTable","fresh_table","Content","Index","exact","path","minHeight","LoginForm","layout","labelCol","wrapperCol","tailLayout","offset","values","username","password","Login","info","initialValues","remember","onFinish","onFinishFailed","rules","required","UserOutlined","Password","LockOutlined","valuePropName","htmlType","confirm","welcome","login","ExclamationCircleOutlined","showConfirm","background","backgroundSize","welcome_1","onNext","WelcomeSignup","ifUser","aaa","send_regist","dependencies","hasFeedback","getFieldValue","validator","rule","Promise","reject","resolve","welcome_2","welcome_3","WelcomeBindServer","server_ip_input","server_name_input","server_type_input","server_user_input","server_psw_input","server_ip","server_type","DatabaseTwoTone","handleServer_ip_input","ApiTwoTone","handleServer_name_input","EditTwoTone","handleServer_type_input","handleServer_user_input","ContactsTwoTone","handleServer_psw_input","EyeInvisibleTwoTone","send_args","welcome_4","WelcomePage","current","steps","Step","next","ServerAddButton","submit_input","handleInput_server_type","input_server_type","handleInput_server_ip","input_server_ip","handleInput_server_name","input_server_name","DatabaseOutlined","footer","ServerDeleteButton","delete_server","ServerTable","server_status","FullscreenOutlined","d2","ServerTableHook","HomePage","Footer","Meta","textAlign","UserMenu","UserMenuFunc","borderRight","UserDeleteButton","user_id","delete_user","UserInfo","UserInfoTable","ifadmin","UserCreate","UserPage","AuthExample","isAuthenticated","isSend","isLogin","PrivateRoute","authenticate","children","rest","pathname","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e79a353.chunk.js","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class MultipleSwitch extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n    onSelectedChange = value => {\n        console.log(eval(value));\n    }\n\n    addItem = () => {\n        const { items, items_value, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class NetworkTypeOption extends React.Component {\n    state = {\n        items: [],\n        items_value: {},\n\n        input_key: '',\n        input_value: '',\n        selected: [],\n    };\n\n    onKeyChange = event => {\n        this.setState({\n            input_key: event.target.value,\n        });\n    }\n\n    onValueChange = event => {\n        this.setState({\n            input_value: event.target.value,\n        });\n    };\n\n    onSelectedChange = value => {\n        console.log(eval(value));\n    }\n\n    addItem = () => {\n        const { items, items_value, input_value, input_key } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_key}\":\"${input_value}\"}`],\n            input_key: '',\n            input_value: '',\n        });\n    };\n\n    render() {\n        const { items, input_key, input_value } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '600px' }}\n                placeholder={this.props.args}\n                onChange={value => this.props.onChange(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input addonBefore=\"key\" style={{ flex: 'auto' }} value={input_key} onChange={this.onKeyChange} />\n                            :\n                            <Input addonBefore=\"value\" style={{ flex: 'auto' }} value={input_value} onChange={this.onValueChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport {\n    Link,\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Menu, } from 'antd';\n\n\nconst { Header, } = Layout;\n\nexport function AllHeader(props) {\n\n    return (\n        <Header className=\"header\">\n            <div className=\"logo\" />\n            <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={[props.number]}\n                style={{ lineHeight: '64px' }}\n            >\n                <Menu.Item key=\"1\">\n                    <Link to=\"/\">功能操作</Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                    <Link to=\"/user\">用户管理</Link>\n                </Menu.Item>\n            </Menu>\n        </Header>\n    )\n}","import React from 'react';\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport { AppstoreOutlined, CloudServerOutlined, EyeOutlined, SaveOutlined, ApartmentOutlined, ArrowLeftOutlined, FolderOpenOutlined } from '@ant-design/icons';\nimport { Layout, Menu, } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\n\n\nexport class IndexSider extends React.Component {\n    // submenu keys of first level\n\n    constructor(props) {\n        super(props);\n        this.rootSubmenuKeys = ['sub1', 'sub2', 'sub3', 'sub4', 'sub5'];\n        this.state = {\n            openKeys: [this.props.openKey],\n            openOptions: [this.props.selectOptins],\n        };\n    }\n\n\n\n\n    onOpenChange = openKeys => {\n        const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n        if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n            this.setState({ openKeys });\n        } else {\n            this.setState({\n                openKeys: latestOpenKey ? [latestOpenKey] : [],\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultOpenKeys={this.state.openKeys}\n                    defaultSelectedKeys={this.state.openOptions}\n                    onOpenChange={this.onOpenChange}\n                    style={{ width: 200 }}\n                    defaultOpenKeys={['sub1', 'sub2', 'sub3', 'sub4', 'sub5', 'sub6']}\n                >\n                    <Menu.Item key=\"back\">\n                        <ArrowLeftOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/`}>回到主页</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"0\">\n                        <EyeOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/control/${this.props.server_id}`}>全局总览</Link>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <CloudServerOutlined style={{ fontSize: '21px' }} />\n                                <span>服务器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={`/control/${this.props.server_id}/serverinfo`}>服务器总览</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={`/control/${this.props.server_id}/server_secret`}>服务器密钥管理</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub2\"\n                        title={\n                            <span>\n                                <AppstoreOutlined style={{ fontSize: '21px' }} />\n                                <span>容器管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"5\">\n                            <Link to={`/control/${this.props.server_id}/containerinfo`}>容器总览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub4\"\n                        title={\n                            <span>\n                                <SaveOutlined style={{ fontSize: '21px' }} />\n                                <span>镜像管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"9\">\n                            <Link to={`/control/${this.props.server_id}/image`}>镜像列表</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub5\"\n                        title={\n                            <span>\n                                <ApartmentOutlined style={{ fontSize: '21px' }} />\n                                <span>网络管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"10\">\n                            <Link to={`/control/${this.props.server_id}/network`}>网卡一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                    <SubMenu\n                        key=\"sub6\"\n                        title={\n                            <span>\n                                <FolderOpenOutlined style={{ fontSize: '21px' }} />\n                                <span>卷管理</span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"11\">\n                            <Link to={`/control/${this.props.server_id}/volume`}>卷一览</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default function IndexMenu(props) {\n    let { server_id } = useParams();\n\n    return (<IndexSider server_id={server_id} openKey={props.openKey} selectOptins={props.selectOptins} />)\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Row, Col, PageHeader, Skeleton } from 'antd';\n\n\n\nfunction ContainerPageHeader() {\n    let { id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"容器详情\"\n            subTitle={`容器:${id}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport class ContainerInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: '',\n        }\n        this.get_args();\n    }\n\n    get_args() {\n        axios.post('/api',\n            {\n                api: 'one_container_info',\n                id: this.props.id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    data: data.data,\n                });\n            });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Skeleton active loading={this.state.loading}>\n                    {this.state.data.data}\n                </Skeleton>\n            </div>\n        );\n    }\n}\n\nexport function ContainerOne() {\n    let { server_id, id } = useParams();\n\n    return (\n        <ContainerInfo server_id={server_id} id={id} />\n    )\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Button, Menu, Dropdown, message, notification } from 'antd';\nimport { DownOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class OneContainerActionButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.menu = (\n            <Menu onClick={(e) => this.handleMenuClick(e)}>\n                <Menu.Item key=\"0\">\n                    <Link to={`${this.props.url}/create`}>创建新容器</Link>\n                </Menu.Item>\n                <Menu.Item key=\"1\">重启选中容器</Menu.Item>\n                <Menu.Item key=\"2\">停止选中容器</Menu.Item>\n                <Menu.Item key=\"3\">删除选中容器</Menu.Item>\n                <Menu.Item key=\"4\">删除已停止容器</Menu.Item>\n            </Menu>\n        );\n    }\n\n    async handleMenuClick(e) {\n        this.props.onLoading();\n        if (e.key === '4') {\n            await axios.post('/api',\n                {\n                    api: 'container_delete_stoped',\n                    server_id: this.props.server_id,\n                }).then(data => {\n                    console.log(data.data);\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `容器删除成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                });\n            this.props.onFresh();\n            return;\n        } else if (e.key === '0') {\n            this.props.onFresh();\n            return;\n        }\n        if (this.props.selected.length === 0) {\n            message.error('您没有选中任何容器');\n            this.props.onFresh();\n            return;\n        }\n        if (e.key === '1') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_restart',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '重启成功！',\n                            description:\n                                `容器:${this.props.selected[i]}重启成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '2') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_stop',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '停止成功！',\n                            description:\n                                `容器:${this.props.selected[i]}停止成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        } else if (e.key === '3') {\n            for (let i = 0; i < this.props.selected.length; i++) {\n                await axios.post('/api',\n                    {\n                        api: 'container_delete',\n                        server_id: this.props.server_id,\n                        container_id: this.props.selected[i],\n                    }).then(data => {\n                        console.log(data.data);\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `容器:${this.props.selected[i]}删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    });\n            }\n        }\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <div>\n                <Dropdown overlay={this.menu}>\n                    <Button disabled={this.props.disabled} loading={this.props.loading}>\n                        快捷操作 <DownOutlined />\n                    </Button>\n                </Dropdown>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Button, Descriptions, Badge, Tooltip, Skeleton, message } from 'antd';\nimport { EyeOutlined, PlayCircleOutlined, ReloadOutlined, PoweroffOutlined, FundProjectionScreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\n\n\nexport default class ContainerInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_inspect',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    handleStart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_start',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            });\n    }\n\n    handleRestart() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_restart',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            });\n    }\n\n    handleStop() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'container_stop',\n                server_id: this.props.server_id,\n                container_id: this.props.container_id\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    loading: false,\n                })\n                message.success(\"已向服务器发起请求\")\n                this.fetch();\n                this.props.onFresh();\n            });\n    }\n\n    handelGotoTerminal() {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n                base64: true,\n            }).then(data => {\n                console.log(data.data.data)\n                let ip = data.data.data.ip;\n                let user = data.data.data.user;\n                let psw = data.data.data.psw;\n\n                window.location.replace(`/ssh?hostname=${ip}&username=${user}&password=${psw}&command=docker exec -it ${this.props.container_id} /bin/bash`);\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data, loading } = this.state;\n        if (data.NetworkSettings) {\n            const network_drive = Object.keys(data.NetworkSettings.Networks)[0]\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\"> {data.Name ? data.Name : \"\"} </Descriptions.Item>\n                            <Descriptions.Item label=\"网络信息\">{`${data.NetworkSettings.Networks[`${network_drive}`].IPAddress}(${network_drive})`}</Descriptions.Item>\n                            <Descriptions.Item label=\"状态\">\n                                {data.State ? data.State.Status == \"running\" ? <Badge status=\"processing\" text={data.State.Status} /> : <Badge status=\"error\" text={data.State.Status} /> : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\"> {data.Created.split(\".\")[0]} </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"操作\">\n                                <Tooltip placement=\"top\" title=\"启动容器\">\n                                    <Button loading={loading} type=\"primary\" shape=\"circle\" icon={<PlayCircleOutlined />} size=\"large\" onClick={() => this.handleStart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"重启容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<ReloadOutlined />} size=\"large\" onClick={() => this.handleRestart()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"结束容器\">\n                                    <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<PoweroffOutlined />} size=\"large\" danger onClick={() => this.handleStop()} />\n                                </Tooltip>\n                                <Tooltip placement=\"top\" title=\"启动终端\">\n                                    {data.State.Status == \"running\" ?\n                                        <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" onClick={() => this.handelGotoTerminal()} />\n                                        :\n                                        <Button loading={loading} style={{ marginLeft: 12 }} type=\"primary\" shape=\"circle\" icon={<FundProjectionScreenOutlined />} size=\"large\" disabled />\n                                    }\n\n                                </Tooltip>\n                            </Descriptions.Item>\n                        </Descriptions>\n                        <br /><br />\n                        <Descriptions title=\"详细参数\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"镜像\">{data.Config.Image}</Descriptions.Item>\n                            <Descriptions.Item label=\"端口映射信息\">\n                                {data.NetworkSettings.Ports ? Object.keys(data.NetworkSettings.Ports).map((item, index) =>\n                                    data.NetworkSettings.Ports[`${item}`] ? data.NetworkSettings.Ports[`${item}`].map((item2, index2) =>\n                                        <div>\n                                            {`${item2.HostIp}:${item2.HostPort} => ${item}`}\n                                            <br /><br />\n                                        </div>\n                                    ) : item\n                                ) : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"启动参数\">\n                                {data.Config.Cmd ? data.Config.Cmd.map((item, index) =>\n                                    item\n                                ) : \"\"}\n                            </Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"环境变量\">\n                                {\n                                    data.Config.Env.map((item, index) =>\n                                        <div>\n                                            {item}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该容器\">\n                        <Button type=\"primary\" shape=\"circle\" icon={<EyeOutlined />} onClick={this.showDrawer} />\n                    </Tooltip>\n                    <Drawer\n                        title=\"容器信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                        <br /><br />\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Table, Tag, PageHeader, Card } from 'antd';\n\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport OneContainerActionButton from './one_container_action_button'\nimport ContainerInspect from './one_container_inspect'\n\nfunction ContainerPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"容器详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nfunction ContainerInspectButton(props) {\n    let { server_id } = useParams();\n\n    return (\n        <ContainerInspect server_id={server_id} container_id={props.container_id} onFresh={() => props.onFresh()} />\n    )\n}\n\nclass ContainerOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Names',\n                key: 'name',\n            },\n            {\n                title: '对应镜像',\n                key: 'image',\n                render: (text, record) => (\n                    record.Image\n                )\n            },\n            {\n                title: '容器ip',\n                key: 'ip',\n                render: (text, record) => this.show_ip(text, record)\n            },\n            {\n                title: '状态',\n                key: 'stauts',\n                render: (text, record) => {\n                    if (record.State === \"running\") {\n                        return (<Tag color=\"cyan\">{record.State}</Tag>);\n                    } else {\n                        return (<Tag color=\"red\">{record.State}</Tag>)\n                    }\n                }\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => (\n                    <span>\n                        <ContainerInspectButton container_id={record.Id} onFresh={() => this.handleRefresh()} />\n                    </span>\n                ),\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n            loading: false\n        })\n    }\n\n    handleLoading() {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'container_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    show_ip(text, record) {\n        let get_net_work_name = Object.keys(record.NetworkSettings.Networks)[0]\n        return (\n            record.NetworkSettings.Networks[get_net_work_name].IPAddress\n        )\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"容器一览\" extra={<OneContainerActionButton disabled={!hasSelected} loading={loading} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} onLoading={() => this.handleLoading()} />} >\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\n\nexport default function ContainerOneServer() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <ContainerPageHeader />\n            <ContainerOneServerTable server_id={server_id} url={url} />\n        </div>\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Spin } from 'antd';\nimport { ControlTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\n\n\n\nexport default class ContainerSearchImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_id: this.props.server_id,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_id } = this.state\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_id: server_id,\n            }).then(data => {\n                console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled, value, } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.RepoTags}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Spin } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class ContainerSearchNetwork extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            items: [],\n            server_id: this.props.server_id,\n        }\n    }\n\n    componentDidMount(props) {\n        this.get_image_list()\n    }\n\n    get_image_list() {\n        this.setState({\n            items: [],\n            disabled: true,\n        });\n        const { server_id } = this.state\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_id: server_id,\n            }).then(data => {\n                console.log(data.data.data.data);\n                this.setState({\n                    items: data.data.data.data,\n                })\n            });\n        this.setState({\n            disabled: false,\n        })\n    }\n\n    handleValue(value) {\n        this.props.onChange(value);\n    }\n\n    render() {\n        const { items, disabled, value, } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                style={{ width: '450px' }}\n                labelInValue\n                notFoundContent={<Spin size=\"small\" />}\n                placeholder=\"查看镜像列表\"\n                disabled={disabled ? true : false}\n                onChange={value => this.handleValue(value)}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                    </div>\n                )}\n            >\n                {items.map(d => (\n                    <Option key={d.Id}>{d.Name}</Option>\n                ))}\n            </Select>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Select, Divider, Input, Form, Radio } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nexport default class PortsChoose extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            items_value: {},\n            items2: [],\n\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: '0.0.0.0',\n            input_hport: '',\n            selected: [],\n        };\n    }\n\n    onCportChange = event => {\n        this.setState({\n            input_cport: event.target.value,\n        });\n    }\n\n    onHipChange = event => {\n        this.setState({\n            input_hip: event.target.value,\n        });\n    }\n\n    onHportChange = event => {\n        this.setState({\n            input_hport: event.target.value,\n        });\n    }\n\n    onTypeChange = value => {\n        this.setState({\n            input_type: value.target.value\n        })\n    }\n\n    onSelectedChange = value => {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            let one_key = Object.keys(JSON.parse(value[i]))[0]\n            temp_list = [...temp_list, `{\"${one_key}\":{}}`]\n        }\n        this.props.onChange(value, temp_list)\n    }\n\n    addItem = () => {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        this.setState({\n            items: [...items, `{\"${input_cport}/${input_type}\":[{\"HostIp\":\"${input_hip}\",\"HostPort\":\"${input_hport}\"}]}`],\n            input_cport: '',\n            input_type: 'tcp',\n            input_hip: \"0.0.0.0\",\n            input_hport: \"\",\n        });\n    };\n\n    render() {\n        const { items, input_cport, input_type, input_hip, input_hport } = this.state;\n        const { Option } = Select;\n        return (\n            <Select\n                mode=\"multiple\"\n                style={{ width: '320px' }}\n                placeholder={this.props.args}\n                onChange={this.onSelectedChange}\n                dropdownRender={menu => (\n                    <div>\n                        {menu}\n                        <Divider style={{ margin: '4px 0' }} orientation=\"left\">选项添加</Divider>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            容器端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_cport} placeholder=\"443\" onChange={this.onCportChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            转发类型:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Radio.Group value={input_type} buttonStyle=\"solid\" onChange={this.onTypeChange}>\n                                <Radio.Button value=\"tcp\">TCP</Radio.Button>\n                                <Radio.Button value=\"udp\">UDP</Radio.Button>\n                            </Radio.Group>\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机IP:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hip} placeholder=\"0.0.0.0\" style={{ flex: 'auto' }} onChange={this.onHipChange} />\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            主机端口:\n                        </div>\n                        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                            <Input value={input_hport} placeholder=\"443\" style={{ flex: 'auto' }} onChange={this.onHportChange} />\n                        </div>\n                        <div align=\"right\">\n                            <a\n                                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                onClick={this.addItem}\n                            >\n                                <PlusOutlined /> 添加选项\n                            </a>\n                        </div>\n                    </div>\n                )}\n            >\n                {items.map(item => (\n                    <Option key={item}>{item}</Option>\n                ))}\n            </Select>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Input, Form, Divider, Select, Button, message, notification, Tabs, Switch, Slider, InputNumber } from 'antd';\nimport { AppleOutlined, AndroidOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport ContainerSearchImage from \"./image_select\"\nimport ContainerSearchNetwork from \"./network_select\"\nimport MultipleSwitch from './mutiple_switch'\nimport PortsChoose from './ports_choose'\n\nconst { TabPane } = Tabs;\n\nfunction ContainerPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建容器\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass ContainerCreate_page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n\n            container_name_input: \"\",\n            image_name_input: \"\",\n            ports: {},\n            ports2: {},\n\n            command_input: \"\",\n            entrypotin_input: \"\",\n            user_input: \"\",\n            ifTty: false,\n            ifInteractive: false,\n\n            network_name_input: \"\",\n            hostname: \"\",\n            network_ip: \"\",\n\n            env: [],\n            label: [],\n        }\n    }\n\n    // =======================获取输入=======================\n    handleContainer_name_input(e) {\n        this.setState({\n            container_name_input: e.target.value\n        })\n    }\n\n    handleImage_name_input(value) {\n        this.setState({\n            image_name_input: value.label[0]\n        })\n    }\n\n    handlePorts(value1, value2) {\n        let temp_dict = {};\n        let temp_dict2 = {}\n        for (let i = 0; i < value1.length; i++) {\n            temp_dict = { ...temp_dict, ...JSON.parse(value1[i]) }\n        }\n        for (let i = 0; i < value2.length; i++) {\n            temp_dict2 = { ...temp_dict2, ...JSON.parse(value2[i]) }\n        }\n        this.setState({\n            ports: temp_dict,\n            ports2: temp_dict2,\n        })\n    }\n\n    handleCommand_input(e) {\n        this.setState({\n            command_input: e.target.value\n        })\n    }\n\n    handleEntrypotin_input(e) {\n        this.setState({\n            entrypotin_input: e.target.value\n        })\n    }\n\n    handleUser_input(e) {\n        this.setState({\n            user_input: e.target.value\n        })\n    }\n\n    handleIfTty() {\n        const { ifTty } = this.state;\n        if (ifTty) {\n            this.setState({\n                ifTty: false\n            })\n        } else {\n            this.setState({\n                ifTty: true\n            })\n        }\n    }\n\n    handleIfInteractive() {\n        const { ifInteractive } = this.state;\n        if (ifInteractive) {\n            this.setState({\n                ifInteractive: false\n            })\n        } else {\n            this.setState({\n                ifInteractive: true\n            })\n        }\n    }\n\n\n\n    handleNetwork_name_input(value) {\n        this.setState({\n            network_name_input: value.label\n        })\n    }\n\n    handleHostname(e) {\n        this.setState({\n            hostname: e.target.value\n        })\n    }\n\n    handleNetwork_ip(e) {\n        this.setState({\n            network_ip: e.target.value\n        })\n    }\n\n    handleEvn(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            env: temp_list,\n        })\n    }\n\n    handleLabel(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            label: temp_list,\n        })\n    }\n\n    test() {\n        console.log(this.state);\n    }\n    // =======================================================\n\n    async handle_send() {\n        const {\n            container_name_input,\n            image_name_input,\n            ports,\n            ports2,\n            command_input,\n            entrypotin_input,\n            user_input,\n            ifTty,\n            ifInteractive,\n            network_name_input,\n            hostname,\n            network_ip,\n            env,\n            label\n        } = this.state;\n\n        if (image_name_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            return;\n        }\n\n        let network_config = '';\n        if (network_name_input !== \"\") {\n            network_config = `{\"${network_name_input}\":{\"IPAMConfig\":{\"IPv4Address\":\"${network_ip}\"}}}`;\n            network_config = JSON.parse(network_config);\n        }\n\n        message.loading({ content: '容器创建中', key: 'updatable', duration: 0 });\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'container_add',\n                server_id: this.props.server_id,\n                image: image_name_input,\n                name: container_name_input,\n                connect_port: ports,\n                export_port: ports2,\n                cmd: command_input,\n                entrypoint: entrypotin_input,\n                user: user_input,\n                Tty: ifTty,\n                interactive: ifInteractive,\n                network_model: network_config,\n            }).then(data => {\n                this.setState({\n                    loading: false\n                })\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    message.loading({ content: '容器启动中', key: 'updatable', duration: 0 });\n                    axios.post('/api',\n                        {\n                            api: 'container_start',\n                            server_id: this.props.server_id,\n                            container_id: data.data.data.data.Id\n\n                        }).then(data => {\n                            console.log(data.data.data)\n                            setTimeout(() => {\n                                message.success({ content: '容器启动成功！', key: 'updatable', duration: 2 });\n                            }, 1000);\n                            window.history.back();\n                        });\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n    }\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div>\n                <ContainerPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"container_name\"\n                    >\n                        <Input placeholder=\"为新容器起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleContainer_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">镜像选择</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"镜像\"\n                        name=\"image_name\"\n                    >\n                        <ContainerSearchImage server_id={this.props.server_id} onChange={value => this.handleImage_name_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">端口映射</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"规则设置\"\n                        name=\"ports\"\n                    >\n                        <PortsChoose onChange={(value1, value2) => this.handlePorts(value1, value2)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">高级设置(无特殊需求可以忽略)</Divider>\n                <Tabs defaultActiveKey=\"1\" type=\"card\" >\n                    <TabPane\n                        tab={\n                            <span>\n                                <AppleOutlined />\n                                参数设置\n                            </span>\n                        }\n                        key=\"1\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"进入命令(cmd)\"\n                                    name=\"command\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleCommand_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"入口参数(entrypoint)\"\n                                    name=\"entrypoint\"\n                                >\n                                    <Input placeholder=\"/bin/bash\" style={{ width: '450px' }} onChange={e => this.handleEntrypotin_input(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"设定运行用户\"\n                                    name=\"user\"\n                                >\n                                    <Input placeholder=\"root\" style={{ width: '450px' }} onChange={e => this.handleUser_input(e)} />\n                                </Form.Item>\n                            </Form>\n                            创建模拟终端(-t):<Switch onChange={() => this.handleIfTty()} style={{ marginLeft: 4, marginRight: 8 }} />\n                            |\n                            交互模式(-i):<Switch onChange={() => this.handleIfInteractive()} style={{ marginLeft: 4, marginRight: 8 }} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                网络设置\n                            </span>\n                        }\n                        key=\"2\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"网卡选择\"\n                                    name=\"network_drive\"\n                                >\n                                    <ContainerSearchNetwork server_id={this.props.server_id} onChange={value => this.handleNetwork_name_input(value)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"主机名(Hostname)\"\n                                    name=\"hostname\"\n                                >\n                                    <Input placeholder=\"hostname\" style={{ width: '450px' }} onChange={e => this.handleHostname(e)} />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"IP\"\n                                    name=\"network_ip\"\n                                >\n                                    <Input placeholder=\"172.99.99.99\" style={{ width: '450px' }} onChange={e => this.handleNetwork_ip(e)} />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                环境变量\n                            </span>\n                        }\n                        key=\"3\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器设置环境变量\" onChange={value => this.handleEvn(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                标签设置\n                            </span>\n                        }\n                        key=\"4\"\n                    >\n                        <div>\n                            <MultipleSwitch args=\"请为容器添加自定义标签(可选)\" onChange={value => this.handleLabel(value)} />\n                        </div>\n                    </TabPane>\n                    <TabPane\n                        tab={\n                            <span>\n                                <AndroidOutlined />\n                                资源分配\n                            </span>\n                        }\n                        key=\"5\"\n                    >\n                        <div>\n                            <Form>\n                                <Form.Item\n                                    label=\"CPU\"\n                                    name=\"cpu\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                            <Form>\n                                <Form.Item\n                                    label=\"Memeory\"\n                                    name=\"memeory\"\n                                >\n                                    <InputNumber\n                                        min={0}\n                                        max={1}\n                                        style={{ marginLeft: 16 }}\n                                        step={0.01}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </TabPane>\n                </Tabs>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" loading={loading} onClick={() => this.handle_send()}>\n                    提交\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function ContainerCreate() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ContainerCreate_page server_id={server_id} url={url} />\n        </div>\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ImageDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_image() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'image_delele',\n                    server_id: this.props.server_id,\n                    image_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `镜像删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_image()}\n            >\n                删除所选镜像\n            </Button>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Button, Modal, notification, Input, message } from 'antd';\nimport { DownloadOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ImageAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            loading: false,\n\n            input_image_name: \"\"\n        }\n    }\n\n    async send_message() {\n        const { input_image_name } = this.state;\n        this.setState({\n            loading: true,\n        })\n        message.loading({ content: '服务器下载中...', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'image_pull',\n                server_id: this.props.server_id,\n                image_name: input_image_name,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '下载成功！',\n                        description:\n                            `镜像:${input_image_name}下载成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        visible: false,\n                        loading: false,\n                        input_image_name: '',\n                    });\n                    this.props.onFresh();\n                } else {\n                    notification.open({\n                        message: '下载失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    this.setState({\n                        loading: false,\n                    });\n                }\n\n            });\n    }\n\n    handleInput_image_name(e) {\n        this.setState({\n            input_image_name: e.target.value,\n        })\n    }\n\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = e => {\n        this.send_message();\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { input_image_name, loading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} onClick={this.showModal}>\n                    添加新镜像\n                </Button>\n                <Modal\n                    title=\"添加新镜像\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    confirmLoading={loading}\n                >\n                    <p>服务器将访问dockerhub搜索并下载镜像</p>\n                    <Input placeholder=\"请输入镜像名字\" addonBefore=\"docker.io\" onChange={(e) => this.handleInput_image_name(e)} value={input_image_name} />\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Descriptions, Tooltip, Skeleton } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class ImageInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_inspect',\n                server_id: this.props.server_id,\n                image_id: this.props.image_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <a onClick={this.showDrawer}>{this.props.image_id}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\">{data.RepoTags}</Descriptions.Item>\n                            <Descriptions.Item label=\"Docker版本\">{data.DockerVersion}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"构建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item label=\"构建平台\">{data.Architecture}</Descriptions.Item>\n                            <Descriptions.Item label=\"适用系统\">{data.Os}</Descriptions.Item>\n                            <Descriptions.Item label=\"镜像结构\">\n                                {\n                                    data.RootFS.Layers.map((item, index) =>\n                                        <div>\n                                            {`${index}: ${item}`}\n                                            <br /><br />\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该镜像\">\n                        <a onClick={this.showDrawer}>{this.props.image_id}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"镜像信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Tag, Table, Card } from 'antd';\nimport { ControlTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\nimport moment from \"moment\";\n\nimport ImageDeleteButton from './delete_button'\nimport ImageAddButton from './add_button'\nimport ImageInspect from './image_inspect'\n\n\nexport default function ImageOneServer(props) {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <ImagePageHeader />\n            <ImageOneServerTable server_id={server_id} url={url} />\n        </div>\n    );\n}\n\nclass ImageOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: 'ID',\n                key: 'id',\n                width: '30%',\n                ellipsis: true,\n                render: (text, record) => (\n                    <ImageInspect image_id={record.Id} server_id={this.props.server_id} />\n                )\n            },\n            {\n                title: 'Tag',\n                key: 'tag',\n                render: (text, record) => (\n                    <Tag color=\"#108ee9\">{record.RepoTags}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    moment(record.Created * 1000).format('YYYY-MM-DD HH:mm:ss')\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'image_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"镜像一览\" extra={<ImageAddButton server_id={this.props.server_id} onFresh={() => this.handleRefresh()} />} >\n                    <div style={{ marginBottom: 16 }}>\n                        <ImageDeleteButton disabled={!hasSelected} loading={loading} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nfunction ImagePageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"镜像详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class NetworkDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loading:false,\n        }\n    }\n\n    async delete_network() {\n        this.setState({\n            loading:true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'network_delete',\n                    server_id: this.props.server_id,\n                    network_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data.data.data);\n                    if (!data.data.data.data.message) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `网络删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `${data.data.data.data.message}`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading:false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const {loading} = this.state\n        return (\n            <Button\n                type=\"primary\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                danger\n                disabled={this.props.disabled}\n                loading={loading}\n                onClick={() => this.delete_network()}\n            >\n                删除所选网络\n            </Button>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Descriptions, Tooltip, Skeleton } from 'antd';\nimport axios from 'axios';\n\n\n\nexport default class NetworkInspect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            data: {}\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_inspect',\n                server_id: this.props.server_id,\n                network_id: this.props.network_id\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data\n                })\n            });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n        this.fetch();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        if (data.Id) {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <a onClick={this.showDrawer}>{this.props.network_name}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Descriptions title=\"基本信息\" bordered column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}>\n                            <Descriptions.Item span={2} label=\"ID\">{data.Id ? data.Id : \"\"}</Descriptions.Item>\n                            <Descriptions.Item label=\"名字\">{data.Name}</Descriptions.Item>\n                            <Descriptions.Item label=\"网络类型\">{data.Driver}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"创建时间\">{data.Created}</Descriptions.Item>\n                            <Descriptions.Item span={2} label=\"详情\">\n                                {\n                                    data.IPAM.Config.map((item, index) =>\n                                        <div>\n                                            {`网关: ${item.Gateway}`}\n                                            <br />\n                                            {`网段: ${item.Subnet}`}\n                                        </div>\n                                    )\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Drawer>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Tooltip placement=\"top\" title=\"查看该网络\">\n                        <a onClick={this.showDrawer}>{this.props.network_name}</a>\n                    </Tooltip>\n                    <Drawer\n                        title=\"网络信息\"\n                        placement=\"right\"\n                        closable={false}\n                        onClose={this.onClose}\n                        visible={this.state.visible}\n                        width={720}\n                    >\n                        <Skeleton active />\n                    </Drawer>\n                </div>\n            )\n        }\n\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Button, Tag, Table, Card } from 'antd';\nimport { ApartmentOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport NetworkDeleteButton from './delete_button'\nimport NetworkInspect from './network_inspect'\n\nexport default function NetworkOneServer(props) {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (\n        <div>\n            <NetworkPageHeader />\n            <NetworlOneServerTable server_id={server_id} url={url} />\n        </div>\n    );\n}\n\nclass NetworlOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                key: 'name',\n                render: (text, record) => (\n                    <NetworkInspect network_name={record.Name} network_id={record.Id} server_id={this.props.server_id}/>\n                )\n            },\n            {\n                title: '网络类型',\n                key: 'type',\n                render: (text, record) => (\n                    <Tag color=\"#2db7f5\">{record.Driver}</Tag>\n                )\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                render: (text, record) => (\n                    record.Created\n                )\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'network_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"网络一览\"\n                    extra={\n                        <Link to={`${this.props.url}/create`}>\n                            <Button type=\"primary\" shape=\"round\" icon={<ApartmentOutlined />} >\n                                添加新网络\n                        </Button>\n                        </Link>\n                    }\n                >\n                    <div style={{ marginBottom: 16 }}>\n                        {<NetworkDeleteButton disabled={!hasSelected} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} /> }\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.Id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\nfunction NetworkPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"网络详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}","import React from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { PageHeader, Input, Form, Divider, Select, Button, message, notification } from 'antd';\nimport { UploadOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport NetworkTypeOption from './network_type_option'\n\n\nfunction NetworkPageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            onBack={() => window.history.back()}\n            title=\"创建新网络\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nclass NetworkCreate_page extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n\n            network_name_input: \"\",\n            network_type_input: \"bridge\",\n            network_type_option_input: {},\n            network_subnet_input: \"\",\n            network_iprange_input: \"\",\n            network_gateway_input: \"\",\n            network_label_input: [],\n            network_macvlan_drive_input: \"\",\n        }\n    }\n\n    // =======================获取输入=======================\n    handleNetwork_name_input(e) {\n        this.setState({\n            network_name_input: e.target.value,\n        })\n    }\n\n    handleNetwork_type_input(value) {\n        this.setState({\n            network_type_input: value,\n        })\n    }\n\n    handleNetwork_type_option_input(value) {\n        let temp_list = {};\n        for (let i = 0; i < value.length; i++) {\n            temp_list = { ...temp_list, ...JSON.parse(value[i]) }\n        }\n        this.setState({\n            network_type_option_input: temp_list,\n        })\n    }\n\n    handleNetwork_subnet_input(e) {\n        this.setState({\n            network_subnet_input: e.target.value,\n        })\n    }\n\n    handleNetwork_iprange_input(e) {\n        this.setState({\n            network_iprange_input: e.target.value,\n        })\n    }\n\n    handleNetwork_gateway_input(e) {\n        this.setState({\n            network_gateway_input: e.target.value,\n        })\n    }\n\n    handleNetwork_macvlan_drive_input(e) {\n        this.setState({\n            network_macvlan_drive_input: e.target.value,\n        })\n    }\n\n    handleNetwork_label_input(value) {\n        let temp_list = [];\n        for (let i = 0; i < value.length; i++) {\n            temp_list = [...temp_list, JSON.parse(value[i])]\n        }\n        this.setState({\n            network_label_input: temp_list,\n        })\n    }\n    // =====================================================\n\n    async handleUpload() {\n        this.setState({\n            loading: true\n        })\n        const {\n            network_name_input,\n            network_type_input,\n            network_type_option_input,\n            network_subnet_input,\n            network_iprange_input,\n            network_gateway_input,\n            network_label_input,\n            network_macvlan_drive_input,\n        } = this.state\n\n        if (network_name_input === \"\") {\n            message.error('必要信息没有填写完整！');\n            this.setState({\n                loading: false\n            })\n            return;\n        }\n        let network_type_option_input_new = network_type_option_input;\n        if (network_type_input === \"macvlan\") {\n            network_type_option_input_new = { ...network_type_option_input, ...JSON.parse(`{\"parent\":\"${network_macvlan_drive_input}\"}`) }\n        }\n        message.loading({ content: '网络创建中', key: 'updatable', duration: 0 });\n        await axios.post('/api',\n            {\n                api: 'network_create',\n                server_id: this.props.server_id,\n                network_name: network_name_input,\n                network_drive: network_type_input,\n                subnet: network_subnet_input,\n                ip_range: network_iprange_input,\n                gateway: network_gateway_input,\n                option: network_type_option_input_new,\n            }).then(data => {\n                setTimeout(() => {\n                    message.success({ content: '客户端已接收数据！', key: 'updatable', duration: 2 });\n                }, 1000);\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    notification.open({\n                        message: '创建成功！',\n                        description:\n                            `网络:${data.data.data.data.Id}创建成功！`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                    window.history.back();\n                    return;\n                }\n                notification.open({\n                    message: '创建失败！',\n                    description:\n                        `${data.data.data.data.message}`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        const { Option } = Select;\n        const { loading, network_type_input } = this.state;\n        return (\n            <div>\n                <NetworkPageHeader />\n                <Form>\n                    <Form.Item\n                        label=\"名字\"\n                        name=\"network_name\"\n                    >\n                        <Input placeholder=\"为新网络起个名字吧~\" style={{ width: '450px' }} onChange={e => this.handleNetwork_name_input(e)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络类型配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型\"\n                        name=\"network_type\"\n                    >\n                        <Select defaultValue=\"bridge\" style={{ width: '450px' }} onChange={value => this.handleNetwork_type_input(value)}>\n                            <Option value=\"bridge\">NAT</Option>\n                            <Option value=\"macvlan\">桥接</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义选项(可选)\" onChange={value => this.handleNetwork_type_option_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">网络详情配置</Divider>\n                {network_type_input === \"macvlan\" ?\n                    <Form>\n                        <Form.Item\n                            label=\"桥接网卡\"\n                            name=\"macvlan_drive\"\n                        >\n                            <Input placeholder=\"如:eth0\" style={{ width: '450px' }} onChange={e => this.handleNetwork_macvlan_drive_input(e)} />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"子网段\"\n                            name=\"subnet\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/16\" style={{ width: '450px' }} onChange={e => this.handleNetwork_subnet_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"IP段\"\n                            name=\"iprange\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/25\" style={{ width: '450px' }} onChange={e => this.handleNetwork_iprange_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"网关\"\n                            name=\"gateway\"\n                        >\n                            <Input placeholder=\"如:172.18.0.1\" style={{ width: '450px' }} onChange={e => this.handleNetwork_gateway_input(e)} />\n\n                        </Form.Item>\n                    </Form>\n                    :\n                    <Form>\n                        <Form.Item\n                            label=\"子网段\"\n                            name=\"subnet\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/16\" style={{ width: '450px' }} onChange={e => this.handleNetwork_subnet_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"IP段\"\n                            name=\"iprange\"\n                        >\n                            <Input placeholder=\"如:172.18.0.0/25\" style={{ width: '450px' }} onChange={e => this.handleNetwork_iprange_input(e)} />\n\n                        </Form.Item>\n                        <Form.Item\n                            label=\"网关\"\n                            name=\"gateway\"\n                        >\n                            <Input placeholder=\"如:172.18.0.1\" style={{ width: '450px' }} onChange={e => this.handleNetwork_gateway_input(e)} />\n\n                        </Form.Item>\n                    </Form>}\n\n                <Divider orientation=\"left\">高级配置</Divider>\n                <Form>\n                    <Form.Item\n                        label=\"网络类型选项\"\n                        name=\"network_type_option\"\n                    >\n                        <NetworkTypeOption args=\"请为网络添加自定义标签(可选)\" onChange={value => this.handleNetwork_label_input(value)} />\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">操作</Divider>\n                <Button type=\"primary\" icon={<UploadOutlined />} shape=\"round\" onClick={() => this.handleUpload()} loading={loading} >\n                    创建网络\n                </Button>\n            </div>\n        )\n    }\n}\n\n\nexport default function NetworkCreate() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n\n    return (<NetworkCreate_page server_id={server_id} url={url} />)\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { QrcodeOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexCpuData(props) {\n    let used = props.data.cpu.cpu_used\n    let number = props.data.cpu.cpu_number\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"CPU占用率\" value={used} suffix=\"%\" />\n            <Divider style={{ margin: '4px 0' }} />\n            <QrcodeOutlined />  CPU核心数量: <b>{number}</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexMemoryData(props) {\n    let used = props.data.memory.used;\n    used = used.toFixed(2);\n    let total = props.data.memory.total;\n    total = total.toFixed(2);\n    let free = props.data.memory.free;\n    free = free.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"内存占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  内存总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { PieChartOutlined, HddOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexSwapData(props) {\n    let used = props.data.memory_swap.used;\n    used = used.toFixed(2);\n    let total = props.data.memory_swap.total;\n    total = total.toFixed(2);\n    let free = props.data.memory_swap.free;\n    free = free.toFixed(2);\n\n    let percent = used / total * 100;\n    percent = percent.toFixed(2)\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic title=\"交换空间占用百分比\" value={percent} suffix=\"%\" />\n            <br />\n            <PieChartOutlined />  已使用: <b>{used} GB</b>\n            <Divider style={{ margin: '4px 0' }} />\n            <HddOutlined />  交换空间总量: <b>{total} GB</b>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Statistic, Divider } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\n\n\n\n\n\nexport default function IndexNetworkData(props) {\n    let receive = props.data.network.receive;\n    let send = props.data.network.send;\n    let time = props.data.network.time;\n    let last_receive = props.data.network.last_receive;\n    let last_send = props.data.network.last_send;\n    let last_time = props.data.network.last_time;\n\n    let download = (receive - last_receive) / (time - last_time);\n    let upload = (send - last_send) / (time - last_time)\n    let download_unit = 'b/s'\n    let upload_unit = 'b/s'\n\n    download /= 8;\n    if (download > 1000) {\n        download /= 1024;\n        download_unit = 'kb/s';\n        if (download > 1000) {\n            download /= 1024;\n            download_unit = 'mb/s';\n            if (download > 1000) {\n                download /= 1024;\n                download_unit = 'gb/s';\n            }\n        }\n    }\n    upload /= 8;\n    if (upload > 1000) {\n        upload /= 1024;\n        upload_unit = 'kb/s';\n        if (upload > 1000) {\n            upload /= 1024;\n            upload_unit = 'mb/s';\n            if (upload > 1000) {\n                upload /= 1024;\n                upload_unit = 'gb/s';\n            }\n        }\n    }\n\n    return (\n        <Card className=\"site-layout-card\" style={{ height: 200, margin: \"0 auto\" }}>\n            <Statistic\n                title=\"网络接收数据\"\n                value={download}\n                precision={2}\n                valueStyle={{ color: '#cf1322' }}\n                prefix={<ArrowDownOutlined />}\n                suffix={download_unit}\n            />\n            <Divider style={{ margin: '10px 0' }} />\n            <Statistic\n                title=\"网络发送数据\"\n                value={upload}\n                precision={2}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<ArrowUpOutlined />}\n                suffix={upload_unit}\n            />\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { AppstoreOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexContainerData(props) {\n    let total = 0;\n    let running = 0;\n    let aaa = props.data.Containers;\n    if (aaa) {\n        total = props.data.Containers.length;\n        running = 0;\n        for (let i = 0; i < total; i++) {\n            if (props.data.Containers[i].State === \"running\") {\n                running++;\n            }\n        }\n    }\n    return (\n        <Card size=\"small\" title={<div><AppstoreOutlined spin={true} style={{ fontSize: '21px' }} />   <b>容器</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        已创建: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        正在运行: <b>{running}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { SaveOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexImageData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Images\n    if (aaa) {\n        total = props.data.Images.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Images[i].Size;\n        }\n        size = size / 1024 / 1024 / 1024;\n        size = size.toFixed(2);\n    }\n\n    return (\n        <Card size=\"small\" title={<div><SaveOutlined spin={true} style={{ fontSize: '21px' }} />  <b>镜像</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size} GB</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { Card, Typography } from 'antd';\nimport { FolderOpenOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport '../index.css';\n\nconst { Paragraph } = Typography;\n\n\n\nexport default function IndexVolumeData(props) {\n    let total = 0;\n    let size = 0;\n    let aaa = props.data.Volumes\n    if (aaa) {\n        total = props.data.Volumes.length;\n        for (let i = 0; i < total; i++) {\n            size += props.data.Volumes[i].UsageData.Size\n        }\n        size = size / 1024 / 1024\n        if (size > 1000) {\n            size = size / 1024\n            size = size.toFixed(2);\n            size = `${size} GB`\n        }else{\n            size = size.toFixed(2);\n            size = `${size} MB`\n        }\n        \n    }\n\n    return (\n        <Card size=\"small\" title={<div><FolderOpenOutlined spin={true} style={{ fontSize: '21px' }} />  <b>卷</b></div>} style={{ margin: \"0 auto\" }}>\n            <Paragraph>\n                <ul>\n                    <li>\n                        数量: <b>{total}</b>\n                    </li>\n                    <br />\n                    <li>\n                        占用空间: <b>{size}</b>\n                    </li>\n                </ul>\n            </Paragraph>\n        </Card>\n    )\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport { Row, Col, Divider, PageHeader } from 'antd'\nimport 'antd/dist/antd.css';\n//import { AppleOutlined, AndroidOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport IndexCpuData from './index_cpu'\nimport IndexMemoryData from './index_memory'\nimport IndexSwapData from './index_swap'\nimport IndexNetworkData from './index_network'\nimport IndexContainerData from './index_container'\nimport IndexImageData from './index_image'\nimport IndexVolumeData from './index_volume'\n\n\nexport default function IndexData() {\n    let { server_id } = useParams();\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"总览\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <IndexDataControl server_id={server_id} />\n        </div>\n    );\n}\n\nclass IndexDataControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {\n                cpu: {\n                    cpu_number: 0,\n                    cpu_used: 0,\n                },\n                memory: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                memory_swap: {\n                    total: 0,\n                    used: 0,\n                    free: 0,\n                },\n                network: {\n                    receive: 0,\n                    send: 0,\n                    time: 0,\n                    last_receive: 0,\n                    last_send: 0,\n                    last_time: 0,\n                }\n            },\n            data_docker: {}\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.fetch(), 1000);\n        this.fetch_docker();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'check_server_status',\n                server_id: this.props.server_id,\n            }).then(d => {\n                const { data } = this.state;\n                let data2 = {\n                    ...d.data.data.data\n                }\n                data2.network.last_receive = data.network.receive\n                data2.network.last_send = data.network.send\n                data2.network.last_time = data.network.time\n                this.setState({\n                    data: data2\n                })\n            });\n    }\n\n    fetch_docker() {\n        axios.post('/api',\n            {\n                api: 'system_use',\n                server_id: this.props.server_id,\n            }).then(d => {\n                console.log(d.data.data.data);\n                this.setState({\n                    data_docker: d.data.data.data\n                })\n            });\n    }\n\n    callback(key) {\n        console.log(key);\n    }\n\n\n    render() {\n        const { data, data_docker } = this.state\n        return (\n            <div>\n                <Divider orientation=\"left\">系统资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={6} >\n                        <IndexCpuData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexMemoryData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexSwapData data={data} />\n                    </Col>\n                    <Col span={6} >\n                        <IndexNetworkData data={data} />\n                    </Col>\n                </Row>\n                <Divider orientation=\"left\">Docker资源统计</Divider>\n                <Row justify=\"space-around\" gutter={[16, 16]}>\n                    <Col span={8} >\n                        <IndexContainerData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexImageData data={data_docker} />\n                    </Col>\n                    <Col span={8} >\n                        <IndexVolumeData data={data_docker} />\n                    </Col>\n\n                </Row>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Descriptions, Skeleton, PageHeader, Divider, Typography, message } from 'antd';\nimport axios from 'axios';\n\nconst { Paragraph } = Typography;\n\nexport default function ServerInfo(props) {\n    let { server_id } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器信息\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerInfoShow server_id={server_id} />\n        </div>\n    );\n}\n\n\nclass ServerInfoShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data1: {},\n            data2: {},\n            name: \"\"\n        }\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'system_infomation',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data1: data.data.data.data\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'system_version',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data2: data.data.data.data\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_one_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    name: data.data.name\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    onChange = str => {\n        const { name } = this.state;\n        if (name === str) {\n            return;\n        }\n        console.log('Content change:', str);\n        axios.post('/api',\n            {\n                api: 'server_change_name',\n                server_id: this.props.server_id,\n                server_name: str,\n            }).then(data => {\n                this.setState({\n                    name: str\n                })\n                message.success(\"名字修改成功！\")\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    render() {\n        const { data1, data2, name } = this.state;\n        if (data1.OSType) {\n            let mem = data1.MemTotal / 1024 / 1024 / 1024;\n            mem = mem.toFixed(2);\n            return (\n                <div>\n                    <Descriptions\n                        title=\"用户设定\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"节点名字\" span={1}>\n                            <Paragraph editable={{ onChange: this.onChange }}>{name}</Paragraph>\n                        </Descriptions.Item>\n                    </Descriptions>\n                    <br /><br />\n                    <Descriptions\n                        title=\"系统信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"系统内核\">{data1.OSType}</Descriptions.Item>\n                        <Descriptions.Item label=\"系统名字\">{data1.Name}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU平台\">{data1.Architecture}</Descriptions.Item>\n                        <Descriptions.Item label=\"CPU数量\">{data1.NCPU}</Descriptions.Item>\n                        <Descriptions.Item label=\"内存总量\">\n                            {`${mem} GB`}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"驱动类型\">\n                            {data1.Driver}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"详细信息\">\n                            {`内核版本: ${data1.KernelVersion}`}\n                            <br />\n                            {`系统版本: ${data1.OperatingSystem}`}\n                            <br />\n                            {`ID: ${data1.ID}`}\n                        </Descriptions.Item>\n                    </Descriptions>\n                    <br /><br />\n                    <Descriptions\n                        title=\"Docker信息\"\n                        bordered\n                        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    >\n                        <Descriptions.Item label=\"版本\">{data2.Version}</Descriptions.Item>\n                        <Descriptions.Item span={2} label=\"构建时间\">{data2.BuildTime}</Descriptions.Item>\n                        <Descriptions.Item label=\"api版本\">{data2.ApiVersion}</Descriptions.Item>\n                        <Descriptions.Item label=\"适用平台\">{data2.Arch}</Descriptions.Item>\n                        <Descriptions.Item label=\"Go语言版本\">{data2.GoVersion}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Skeleton active />\n                    <Skeleton active />\n                    <Skeleton active />\n                </div>\n            );\n        }\n    }\n}","import React from 'react';\nimport { useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Typography, Descriptions, Alert, PageHeader, Divider, message } from 'antd';\nimport axios from 'axios';\nconst { Paragraph } = Typography;\n\nexport default function ServerPsw(props) {\n    let { server_id } = useParams();\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"服务器密钥信息\"\n                subTitle={`服务器:${server_id}`}\n            >\n            </PageHeader>\n            <Divider />\n            <ServerPswShow server_id={server_id} />\n        </div>\n    );\n}\n\nclass ServerPswShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            user: \"暂无权限查看\",\n            psw: \"暂无权限查看\"\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'psw_check',\n            }).then(data => {\n                console.log(data.data.id)\n                this.setState({\n                    id: data.data.id\n                })\n            });\n        axios.post('/api',\n            {\n                api: 'server_ssh_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    user: data.data.data.user,\n                    psw: data.data.data.psw\n                })\n            });\n    }\n\n    onChangeUser = str => {\n        const { user } = this.state;\n        if (user === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_user',\n                server_id: this.props.server_id,\n                server_user: str,\n            }).then(data => {\n                if (data.data.status === 0) {\n                    this.setState({\n                        user: str\n                    })\n                    message.success(\"用户修改成功！\")\n                } else {\n                    message.warning(\"只有管理员才能修改\")\n                }\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    onChangePsw = str => {\n        const { psw } = this.state;\n        if (psw === str) {\n            return;\n        }\n        axios.post('/api',\n            {\n                api: 'server_change_psw',\n                server_id: this.props.server_id,\n                server_psw: str,\n            }).then(data => {\n                if (data.data.status === 0) {\n                    this.setState({\n                        psw: str\n                    })\n                    message.success(\"密码修改成功！\")\n                } else {\n                    message.warning(\"只有管理员才能修改\")\n                }\n            }).catch(err => {\n                message.error(\"服务器开小差了，请稍后再试\")\n            });\n    };\n\n    render() {\n        const { id, user, psw } = this.state;\n        return (\n            <div>\n                <Alert\n                    message=\"关于通讯密钥\"\n                    description=\"通讯密钥由系统自动生成，用于与控制节点通信时使用，原则上不允许更改。如果服务器与控制节点绑定失败，可尝试复制通讯密钥手动添加至控制节点！\"\n                    type=\"info\"\n                    showIcon\n                />\n                <br />\n                <Descriptions\n                    title=\"服务器密钥\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Descriptions.Item label=\"通讯密钥\" span={4}>\n                        <Paragraph copyable>{id}</Paragraph>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"登录服务器用户\">\n                        <Paragraph editable={{ onChange: this.onChangeUser }}>{user}</Paragraph>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"登录服务器密码\">\n                        <Paragraph editable={{ onChange: this.onChangePsw }}>{psw}</Paragraph>\n                    </Descriptions.Item>\n                </Descriptions>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification, Popconfirm } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class VolumeDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_volume() {\n        this.setState({\n            loading: true\n        })\n        await axios.post('/api',\n            {\n                api: 'volume_delete_unused',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data);\n                if (!data.data.data.data.message) {\n                    let free_size = data.data.data.data.SpaceReclaimed / 1024 / 1024\n                    if (free_size > 1000) {\n                        free_size = free_size / 1024;\n                        free_size = `${free_size.toFixed(2)} GB 储存空间`\n                    } else {\n                        free_size = `${free_size.toFixed(2)} MB 储存空间`\n                    }\n                    notification.open({\n                        message: '删除成功！',\n                        description:\n                            `已释放: ${free_size}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                } else {\n                    notification.open({\n                        message: '删除失败！',\n                        description:\n                            `${data.data.data.data.message}`,\n                        icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                    });\n                }\n            });\n        this.setState({\n            loading: false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const { loading } = this.state\n        return (\n            <Popconfirm placement=\"top\" title=\"该操作无法撤销，您确定要删除未使用的卷吗？\" onConfirm={() => this.delete_volume()} okText=\"确定\" cancelText=\"我再想想\">\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    danger\n                    disabled={this.props.disabled}\n                    loading={loading}\n                >\n                    删除未使用的卷\n            </Button>\n            </Popconfirm>\n        );\n    }\n}","import React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Table, Tag, PageHeader, Card } from 'antd';\n\nimport axios from 'axios';\n\nimport VolumeDeleteButton from './delete_button'\n\n\n\nfunction VolumePageHeader() {\n    let { server_id } = useParams();\n\n    return (\n        <PageHeader\n            ghost={false}\n            title=\"卷详情\"\n            subTitle={`服务器:${server_id}`}\n        >\n        </PageHeader>\n    );\n}\n\nexport default function VolumeOneServer() {\n    let { server_id } = useParams();\n    let { url } = useRouteMatch();\n    return (\n        <div>\n            <VolumePageHeader />\n            <VolumeOneServerTable server_id={server_id} url={url} />\n        </div>\n    )\n}\n\nclass VolumeOneServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '名字',\n                dataIndex: 'Name',\n                key: 'name',\n            },\n            {\n                title: '创建时间',\n                key: 'time',\n                dataIndex: 'CreatedAt',\n            }\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'volume_info',\n                server_id: this.props.server_id,\n            }).then(data => {\n                console.log(data.data.data.data)\n                this.setState({\n                    data: data.data.data.data.Volumes,\n                    loading: false,\n                })\n            });\n    }\n\n    fresh_table() {\n        this.fetch();\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"卷一览\" extra={<VolumeDeleteButton server_id={this.props.server_id} onFresh={() => this.fresh_table()} />} >\n                    <Table loading={loading} rowKey={record => record.Name} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Breadcrumb } from 'antd';\n\nimport { AllHeader } from '../../components/header'\nimport IndexMenu from '../../components/index_menu'\nimport { ContainerOne } from '../../components/container_info'\nimport ContainerOneServer from '../../components/container_table/one_container_table'\nimport ContainerCreate from '../../components/container_create'\nimport ImageOneServer from '../../components/image_table/one_server_image'\nimport NetworkOneServer from '../../components/network_table/one_network'\nimport NetworkCreate from '../../components/network_create'\nimport IndexData from '../../components/index_data'\nimport ServerInfo from '../../components/server_info'\nimport ServerPsw from '../../components/server_psw'\nimport VolumeOneServer from '../../components/volume_table'\n\n\n\nconst { Content } = Layout;\n\n\nexport default function Index() {\n    let { url } = useRouteMatch();\n\n    return (\n        <Layout>\n            <AllHeader number={'1'} />\n            <Layout>\n                <Switch>\n                    <Route exact path={`${url}/:server_id`}>\n                        <IndexMenu selectOptins='0' />\n                    </Route>\n                    <Route path={`${url}/:server_id/serverinfo`}>\n                        <IndexMenu openKey='sub1' selectOptins='1' />\n                    </Route>\n                    <Route path={`${url}/:server_id/server_secret`}>\n                        <IndexMenu openKey='sub1' selectOptins='2' />\n                    </Route>\n                    <Route path={`${url}/:server_id/containerinfo`}>\n                        <IndexMenu openKey='sub2' selectOptins='5' />\n                    </Route>\n                    <Route path={`${url}/:server_id/image`}>\n                        <IndexMenu openKey='sub4' selectOptins='9' />\n                    </Route>\n                    <Route path={`${url}/:server_id/network`}>\n                        <IndexMenu openKey='sub5' selectOptins='10' />\n                    </Route>\n                    <Route path={`${url}/:server_id/volume`}>\n                        <IndexMenu openKey='sub6' selectOptins='11' />\n                    </Route>\n                </Switch>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Switch>\n                        <Route exact path={`${url}/:server_id`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <IndexData />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/serverinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器信息</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerInfo />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/server_secret`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>服务器密钥</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ServerPsw />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/containerinfo`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOneServer />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_id/containerinfo/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器创建</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerCreate />\n                            </Content>\n                        </Route>\n                        <Route path={`${url}/:server_id/containerinfo/info/:id`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器总览</Breadcrumb.Item>\n                                <Breadcrumb.Item>容器详情</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ContainerOne />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/image`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>镜像一览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <ImageOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/network`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>网络总览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkOneServer />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/network/create`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>创建新网络</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <NetworkCreate />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/:server_id/volume/`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>主页</Breadcrumb.Item>\n                                <Breadcrumb.Item>卷管理</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <VolumeOneServer />\n                            </Content>\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nimport { Form, Input, Button, Checkbox, message, } from 'antd';\n\n\n\nexport class LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n        this.layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 12 },\n        };\n        this.tailLayout = {\n            wrapperCol: { offset: 8, span: 12 },\n        };\n    }\n\n    async onFinish(values) {\n        console.log(values);\n        this.setState({\n            loading: true,\n        });\n\n        await axios.post('/api',\n            {\n                api: 'login',\n                username: values.username,\n                password: values.password,\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.Login()\n                } else {\n                    message.info('用户或密码错误！');\n                    this.setState({\n                        loading: false,\n                    });\n                }\n            });\n    }\n\n    onFinishFailed() {\n        //console.log('Failed:');\n    }\n\n    render() {\n        return (\n            <div>\n                <Form\n                    {...this.layout}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={values => this.onFinish(values)}\n                    onFinishFailed={() => this.onFinishFailed()}\n                >\n                    <Form.Item\n                        label={<div style={{color:\"white\"}}>用户名</div>}\n                        name=\"username\"\n                        rules={[{ required: true, message: '请输入用户名!' }]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        label={<div style={{color:\"white\"}}>密码</div>}\n                        name=\"password\"\n                        rules={[{ required: true, message: '请输入密码!' }]}\n                    >\n                        <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} />\n                    </Form.Item>\n\n                    <Form.Item {...this.tailLayout} name=\"remember\" valuePropName=\"checked\">\n                        <Checkbox><div style={{color:\"white\"}}>记住我</div></Checkbox>\n                    </Form.Item>\n\n                    <Form.Item {...this.tailLayout}>\n                        <Button loading={this.state.loading} type=\"primary\" htmlType=\"submit\">\n                            登录\n            </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport {\n    Row,\n    Col,\n    Calendar,\n    Spin,\n    Modal,\n    Result,\n} from 'antd'\nimport { ExclamationCircleOutlined, SmileOutlined } from '@ant-design/icons';\nimport { LoginForm } from '../../components/login_form'\nimport axios from 'axios';\n\nconst { confirm } = Modal;\n\n\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            welcome: false,\n            login: false,\n        }\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.setState({\n                        loading: false,\n                        welcome: true,\n                    })\n                } else {\n                    if (data.data.login) {\n                        window.location.replace('/')\n                    } else {\n                        this.setState({\n                            loading: false,\n                            welcome: false,\n                        })\n                    }\n                }\n            });\n    }\n\n    showConfirm() {\n        this.setState({\n            loading: false,\n            welcome: false,\n        })\n        confirm({\n            title: '您尚未注册任何用户或绑定任何服务器',\n            icon: <ExclamationCircleOutlined />,\n            content: '是否需要进入引导界面进行注册绑定？',\n            onOk() {\n                window.location.replace('/welcome')\n            },\n            onCancel() {\n            },\n        });\n    }\n\n    render() {\n        const { loading, welcome } = this.state;\n        if (loading) {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            )\n        } else {\n            if (welcome) {\n                this.showConfirm();\n                return (<div></div>);\n            } else {\n                return (\n                    <div style={{\n                        background: `linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.7) ),url(/static/img/1.jpg)`,\n                        backgroundSize: \"100% 100%\",\n                        height: \"100%\",\n                        width: \"100%\"\n                    }}>\n                        <Row>\n                            <Col span={24}>\n                                <br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n                                <br /><br /><br /><br />\n                            </Col>\n                        </Row>\n                        <Row align={'middle'}>\n                            <Col span={1} />\n                            <Col span={12}>\n                                <Result\n                                    icon={<SmileOutlined />}\n                                    title={<div style={{color:\"white\"}}>欢迎来到Docker容器可视化管理平台</div>}\n                                />\n                            </Col>\n                            <Col span={9}>\n                                <LoginForm Login={() => this.props.Login()} />\n                            </Col>\n                            <Col span={2} />\n                        </Row>\n                    </div>\n                )\n            }\n        }\n    }\n}\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Result, Button } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\n\n\nexport default function welcome_1(props) {\n    return (\n        <Result\n            icon={<SmileOutlined />}\n            title=\"欢迎来到Docker可视化管理平台\"\n            extra={<Button type=\"primary\" onClick={() => props.onNext()} >下一步</Button>}\n        />\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Result, message, Spin } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport { LoginForm } from '../../login_form'\n\nclass WelcomeSignup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            ifUser: false,\n        }\n    }\n\n    send_regist(value) {\n        this.setState({\n            loading: true,\n        })\n        axios.post('/welcome_api',\n            {\n                api: 'create_user',\n                ...value\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info('服务器开小差了，请稍后再试');\n                    this.setState({\n                        loading: false,\n                    })\n                }\n            }).catch(err => {\n                console.log(err);\n                message.error('服务器开小差了，请稍后再试');\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/welcome_api',\n            {\n                aaa: 'aaa',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === -2) {\n                    this.setState({\n                        loading: false,\n                        ifUser: true\n                    })\n                } else {\n                    this.setState({\n                        loading: false,\n                        ifUser: false\n                    })\n                }\n            }).catch(err => {\n                console.log(err);\n                message.error('服务器开小差了，请稍后再试');\n                this.setState({\n                    loading: false,\n                })\n            });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 8 },\n        };\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n        const { loading, ifUser } = this.state;\n        if (!loading) {\n            if (ifUser) {\n                return (\n                    <Result\n                        icon={<SmileOutlined />}\n                        title=\"该服务器已经创建了管理员账户，请登录进行操作\"\n                        extra={<LoginForm Login={() => this.props.onNext()} />}\n                    />\n                )\n            } else {\n                return (\n                    <Result\n                        icon={<SmileOutlined />}\n                        title=\"请注册一个管理员用户\"\n                        extra={<Form\n                            {...layout}\n                            name=\"basic\"\n                            onFinish={(value) => this.send_regist(value)}\n                        >\n                            <Form.Item\n                                label=\"用户名\"\n                                name=\"username\"\n                                rules={[{ required: true, message: '请输入你的用户名' }]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"密码\"\n                                name=\"password\"\n                                rules={[{ required: true, message: '请输入密码' }]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"confirm\"\n                                label=\"请再次输入密码\"\n                                dependencies={['password']}\n                                hasFeedback\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请确认你的密码',\n                                    },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                            if (!value || getFieldValue('password') === value) {\n                                                return Promise.resolve();\n                                            }\n                                            return Promise.reject('两次输入的密码不匹配');\n                                        },\n                                    }),\n                                ]}\n                            >\n                                <Input.Password />\n                            </Form.Item>\n                            <Form.Item {...tailLayout}>\n                                <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n                                    下一步\n                            </Button>\n                            </Form.Item>\n                        </Form>}\n                    />\n\n                );\n            }\n        } else {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            )\n        }\n\n\n    }\n}\n\n\nexport default function welcome_2(props) {\n    return (\n        <WelcomeSignup onNext={() => props.onNext()} />\n    );\n}","import { ApiTwoTone, ContactsTwoTone, DatabaseTwoTone, EditTwoTone, EyeInvisibleTwoTone } from '@ant-design/icons';\nimport { Button, Card, Input, message, Radio, Result } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport React from 'react';\n\nexport default function welcome_3(props) {\n    return (\n        <WelcomeBindServer onNext={() => props.onNext()} />\n    );\n}\n\n\nclass WelcomeBindServer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            server_ip_input: \"\",\n            server_name_input: \"\",\n            server_type_input: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n\n            loading: false,\n        }\n    }\n\n    handleServer_ip_input(e) {\n        this.setState({\n            server_ip_input: e.target.value\n        })\n    }\n\n    handleServer_name_input(e) {\n        this.setState({\n            server_name_input: e.target.value\n        })\n    }\n\n    handleServer_type_input(e) {\n        this.setState({\n            server_type_input: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    send_args() {\n        this.setState({\n            loading: true,\n        })\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input } = this.state\n        axios.post('/api',\n            {\n                api: 'create_server',\n                server_ip: server_ip_input,\n                server_name: server_name_input,\n                server_type: server_type_input,\n                server_user: server_user_input,\n                server_psw: server_psw_input\n\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.props.onNext();\n                } else {\n                    message.info(data.data.message);\n                    this.setState({\n                        loading: false,\n                    })\n                }\n            }).catch(err => {\n                console.log(err);\n                message.error('与控制节点配对失败，请检查输入是否正确，');\n                this.setState({\n                    loading: false,\n                })\n            })\n    }\n\n    render() {\n        const { server_ip_input, server_name_input, server_type_input, server_user_input, server_psw_input, loading } = this.state\n        return (\n            <Result\n                icon={<DatabaseTwoTone />}\n                title=\"请绑定您第一台服务器节点\"\n                extra={\n                    <div>\n                        <center>\n                            <Card title=\"请输入服务器信息\" bordered={false} style={{ width: 500 }}>\n                                <Input.Group>\n                                    服务器ip或域名:<Input onChange={(e) => this.handleServer_ip_input(e)} value={server_ip_input} style={{ width: 300, marginLeft: 10 }} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                                    <br /><br />\n                                    服务器名字:<Input onChange={(e) => this.handleServer_name_input(e)} value={server_name_input} style={{ width: 290, marginLeft: 5 }} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                                </Input.Group>\n                                <br />\n                                连接类型:\n                                <Radio.Group onChange={(e) => this.handleServer_type_input(e)} defaultValue={server_type_input} buttonStyle=\"solid\">\n                                    <Radio.Button value=\"http\">HTTP</Radio.Button>\n                                    <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                                </Radio.Group>\n                                <br /><br />\n                                <Input.Group>\n                                    服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                                    <br /><br />\n                                    服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                                </Input.Group>\n                            </Card>\n                            <Button loading={loading} onClick={() => this.send_args()} type=\"primary\">下一步</Button>\n                        </center>\n                    </div>\n                }\n            />\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Result, Button } from 'antd';\n\n\nexport default function welcome_4(props) {\n    return (\n        <Result\n            status=\"success\"\n            title=\"一切准备就绪\"\n            subTitle=\"现在您可以尽情使用了\"\n            extra={[\n                <Link to=\"/\">\n                    <Button type=\"primary\" key=\"console\">\n                        进入平台\n                    </Button>\n                </Link>,\n            ]}\n        />\n    )\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Steps, Col, Row, Spin } from 'antd';\nimport axios from 'axios';\n\nimport welcome_1 from '../../components/welcome/welcome_1'\nimport welcome_2 from '../../components/welcome/welcome_2'\nimport welcome_3 from '../../components/welcome/welcome_3'\nimport welcome_4 from '../../components/welcome/welcome_4'\n\n\nexport default class WelcomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 0,\n            welcome: false\n        };\n        this.steps = [\n            {\n                title: '开始',\n                content: welcome_1\n            },\n            {\n                title: '注册',\n                content: welcome_2,\n            },\n            {\n                title: '绑定一个服务器',\n                content: welcome_3,\n            },\n            {\n                title: '结束',\n                content: welcome_4,\n            },\n        ];\n    }\n\n    next() {\n        const current = this.state.current + 1;\n        this.setState({ current });\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({ current });\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'ifUsed',\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    this.setState({\n                        welcome: true,\n                    })\n                } else {\n                    this.setState({\n                        welcome: false,\n                    })\n                    window.location.replace('/')\n                }\n            });\n    }\n\n    render() {\n        const { current, welcome } = this.state;\n        const { Step } = Steps;\n        if (welcome) {\n            return (\n                <div>\n                    <br /><br /><br /><br /><br />\n                    <Row gutter={[8, 8]}>\n                        <Col span={3} />\n                        <Col span={18} >\n                            <Steps current={current}>\n                                {this.steps.map(item => (\n                                    <Step key={item.title} title={item.title} />\n                                ))}\n                            </Steps>\n                            <div className=\"steps-content\">{this.steps[current].content({ onNext: () => this.next(), })}</div>\n                        </Col>\n                        <Col span={3} />\n                    </Row>\n                </div>\n            );\n        } else {\n            return (\n                <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                    <Spin size=\"large\" />\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Modal, Input, Radio, notification } from 'antd';\nimport { DatabaseOutlined, ApiTwoTone, EditTwoTone, SmileOutlined, ContactsTwoTone, EyeInvisibleTwoTone } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ServerAddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            visible: false,\n\n            input_server_ip: \"\",\n            input_server_name: \"\",\n            input_server_type: \"http\",\n            server_user_input: \"root\",\n            server_psw_input: \"\",\n        }\n    }\n\n    async submit_input() {\n        const { input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input } = this.state\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_add',\n                server_ip: input_server_ip,\n                server_name: input_server_name,\n                server_type: input_server_type,\n                server_user: server_user_input,\n                server_psw: server_psw_input\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                    input_server_ip: \"\",\n                    input_server_name: \"\",\n                    input_server_type: \"http\",\n                    server_user_input: \"root\",\n                    server_psw_input: \"\",\n                    visible: false\n                })\n                notification.open({\n                    message: '创建成功！',\n                    description:\n                        `节点:${input_server_name}创建成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.props.onFresh();\n    }\n\n    // =================================================\n    // 监听对话框\n    // =================================================\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        this.submit_input();\n    };\n\n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n    // ====================================================\n\n    // ==========================================\n    // 监听输入框\n    // ==========================================\n    handleInput_server_type = (e) => {\n        this.setState({\n            input_server_type: e.target.value\n        })\n    }\n\n    handleInput_server_ip = (e) => {\n        this.setState({\n            input_server_ip: e.target.value\n        })\n    }\n\n    handleInput_server_name = (e) => {\n        this.setState({\n            input_server_name: e.target.value\n        })\n    }\n\n    handleServer_user_input(e) {\n        this.setState({\n            server_user_input: e.target.value\n        })\n    }\n\n    handleServer_psw_input(e) {\n        this.setState({\n            server_psw_input: e.target.value\n        })\n    }\n\n    // ====================================================\n\n    render() {\n        const { loading, visible, input_server_type, input_server_name, input_server_ip, server_user_input, server_psw_input } = this.state\n        return (\n            <div>\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DatabaseOutlined />}\n                    onClick={this.showModal}\n                >\n                    添加新的服务器节点\n            </Button>\n                <Modal\n                    visible={visible}\n                    title=\"添加服务器\"\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={[\n                        <Button key=\"back\" onClick={this.handleCancel}>\n                            返回\n                        </Button>,\n                        <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleOk}>\n                            提交\n                        </Button>,\n                    ]}\n                >\n                    <Input.Group>\n                        服务器ip或域名:<Input value={input_server_ip} onChange={this.handleInput_server_ip} prefix={<ApiTwoTone />} placeholder=\"127.0.0.1\" />\n                        服务器名字:<Input value={input_server_name} onChange={this.handleInput_server_name} prefix={<EditTwoTone />} placeholder=\"lalala\" />\n                    </Input.Group>\n                    <br />\n                    连接类型:\n                    <Radio.Group onChange={this.handleInput_server_type} defaultValue={input_server_type} buttonStyle=\"solid\">\n                        <Radio.Button value=\"http\">HTTP</Radio.Button>\n                        <Radio.Button value=\"https\">HTTPS</Radio.Button>\n                    </Radio.Group>\n                    <br /><br />\n                    <Input.Group>\n                        服务器用户名:<Input onChange={(e) => this.handleServer_user_input(e)} value={server_user_input} style={{ width: 280, marginLeft: 10 }} prefix={<ContactsTwoTone />} placeholder=\"root\" />\n                        <br /><br />\n                        服务器密码:<Input onChange={(e) => this.handleServer_psw_input(e)} value={server_psw_input} style={{ width: 300, marginLeft: 5 }} prefix={<EyeInvisibleTwoTone />} placeholder=\"******\" />\n                    </Input.Group>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, Popconfirm, notification, Tooltip } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\n\nexport default class ServerDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_server() {\n        this.setState({\n            loading: true\n        })\n\n        await axios.post('/api',\n            {\n                api: 'server_delete',\n                server_id: this.props.server_id,\n            }).then(data => {\n                this.setState({\n                    loading: false,\n                })\n                notification.open({\n                    message: '删除成功！',\n                    description:\n                        `节点:${this.props.server_id}删除成功！`,\n                    icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                });\n            });\n        this.props.onFresh();\n    }\n\n    render() {\n        return (\n            <Tooltip placement=\"top\" title=\"删除该服务器\">\n                <Popconfirm disabled={this.props.disabled} placement=\"right\" title=\"您确定要删除该节点吗\" onConfirm={() => this.delete_server()} okText=\"是\" cancelText=\"否\">\n                    <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} danger disabled={this.props.disabled} />\n                </Popconfirm>\n            </Tooltip>\n        );\n    }\n}","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table, Card, Tag, Button, Tooltip } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nimport ServerAddButton from './add_button'\nimport ServerDeleteButton from './delete_button'\n\nexport class ServerTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n        }\n\n        this.columns = [\n            {\n                title: '节点名字',\n                dataIndex: 'server_name',\n                key: 'name',\n            },\n            {\n                title: '节点ip',\n                dataIndex: 'server_ip',\n                key: 'age',\n            },\n            {\n                title: '状态',\n                key: 'server_status',\n                render: (text, record) => {\n                    if (record.server_status === 0) {\n                        return (<Tag color=\"green\">在线</Tag>)\n                    } else {\n                        return (<Tag color=\"red\">离线</Tag>)\n                    }\n                }\n            },\n            {\n                title: '操作',\n                key: 'action',\n                render: (text, record) => {\n                    if (record.server_status === 0) {\n                        return (\n                            <div>\n                                <span style={{ marginRight: 8 }}>\n                                    <Tooltip placement=\"top\" title=\"进入该服务器\">\n                                        <Link to={`${this.props.url}control/${record.id}`} >\n                                            <Button type=\"primary\" shape=\"circle\" icon={<FullscreenOutlined />} />\n                                        </Link>\n                                    </Tooltip>\n                                </span>\n                                <span style={{ marginRight: 8 }}>\n                                    <ServerDeleteButton server_id={record.id} onFresh={() => this.handleRefresh()} />\n                                </span>\n                            </div>\n                        );\n                    } else {\n                        return (\n                            <div>\n                                <span style={{ marginRight: 8 }}>\n                                    <Tooltip placement=\"top\" title=\"进入该服务器\">\n                                        <Link to={`${this.props.url}control/${record.id}`} >\n                                            <Button type=\"primary\" shape=\"circle\" icon={<FullscreenOutlined />} disabled />\n                                        </Link>\n                                    </Tooltip>\n                                </span>\n                                <span style={{ marginRight: 8 }}>\n                                    <ServerDeleteButton server_id={record.id} onFresh={() => this.handleRefresh()} disabled={true} />\n                                </span>\n                            </div>\n                        );\n                    }\n                },\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleRefresh() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'server_info',\n            }).then(d => {\n                this.setState({\n                    data: d.data.data,\n                    loading: false,\n                })\n                for (let i = 0; i < d.data.data.length; i++) {\n                    axios.post('/api',\n                        {\n                            api: 'server_check',\n                            server_id: d.data.data[i].id,\n                        }).then(d2 => {\n                            const { data } = this.state;\n                            data[i][\"server_status\"] = d2.data.status\n                            this.setState({\n                                data: data,\n                            })\n                        });\n                }\n            });\n    }\n\n\n    render() {\n        const { data, loading } = this.state;\n        return (\n            <div>\n                <Card title=\"服务器一览\" extra={<ServerAddButton onFresh={() => this.handleRefresh()} />} >\n                    <Table loading={loading} rowKey={record => record.id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}\n\n\nexport default function ServerTableHook() {\n    let { url } = useRouteMatch();\n\n    return (\n        <ServerTable url={url} />\n    );\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Layout, Breadcrumb, Divider, Col, Row, Card,Alert } from 'antd';\nimport './index.css';\nimport { AllHeader } from '../../components/header'\n\nimport ServerTableHook from '../../components/server_table'\n\nexport default class HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    render() {\n        const { Header, Content, Footer } = Layout;\n        const { Meta } = Card;\n        const { loading } = this.state;\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <AllHeader number={'1'} />\n                </Header>\n                <Content style={{ padding: '0 50px' }} className=\"site-layout-background\">\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>主页</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Divider orientation=\"left\">系统公告</Divider>\n                    <Row justify=\"center\" gutter={[16, 16]}>\n                        <Col span={24} >\n                            <Alert\n                                message=\"欢迎来到Docker容器可视化平台\"\n                                description=\"请选择一个服务器来进行操作。您也可以添加新的服务器或者删除一个服务器\"\n                                type=\"info\"\n                                showIcon\n                            />\n                        </Col>\n                    </Row>\n                    <Divider orientation=\"left\">进入服务器</Divider>\n                    <ServerTableHook />\n                    <Divider />\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</Footer>\n            </Layout>\n        )\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport { Layout, Menu } from 'antd';\nimport { UserOutlined, ArrowLeftOutlined } from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\n\nexport default function UserMenu(props) {\n\n    return (\n        <div>\n            <UserMenuFunc {...props} />\n        </div>\n    );\n}\n\n\nclass UserMenuFunc extends React.Component {\n\n\n    render() {\n        return (\n            <Sider width={200} className=\"site-layout-background\">\n                <Menu\n                    mode=\"inline\"\n                    defaultSelectedKeys={this.props.selectOptins}\n                    defaultOpenKeys={['sub1']}\n                    style={{ height: '100%', borderRight: 0 }}\n                >\n                    <Menu.Item key=\"back\">\n                        <ArrowLeftOutlined style={{ fontSize: '21px' }} />\n                        <Link to={`/`}>回到主页</Link>\n                    </Menu.Item>\n                    <SubMenu\n                        key=\"sub1\"\n                        title={\n                            <span>\n                                <UserOutlined style={{ fontSize: '21px' }} />\n                                用户管理\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"1\">\n                            <Link to={this.props.url}>用户列表</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={`${this.props.url}/creat`}>创建新用户</Link>\n                        </Menu.Item>\n                    </SubMenu>\n                </Menu>\n            </Sider>\n        )\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Button, notification, Popconfirm } from 'antd';\nimport { DeleteOutlined, SmileOutlined } from '@ant-design/icons';\nimport axios from 'axios';\n\nexport default class UserDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    async delete_user() {\n        this.setState({\n            loading: true\n        })\n        for (let i = 0; i < this.props.selected.length; i++) {\n            await axios.post('/api',\n                {\n                    api: 'user_delete',\n                    user_id: this.props.selected[i],\n                }).then(data => {\n                    console.log(data.data);\n                    if (data.data.status === 0) {\n                        notification.open({\n                            message: '删除成功！',\n                            description:\n                                `用户:${this.props.selected[i]} 删除成功！`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else if (data.data.status === 1) {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `你不能删除自己的账户`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    } else if (data.data.status === -1) {\n                        notification.open({\n                            message: '删除失败！',\n                            description:\n                                `该用户不存在`,\n                            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n                        });\n                    }\n                });\n        }\n        this.setState({\n            loading: false\n        })\n        this.props.onFresh();\n    }\n\n    render() {\n        const { loading } = this.state\n        return (\n            <Popconfirm disabled={this.props.disabled} placement=\"top\" title=\"该操作无法撤销，您确定要删除这些用户吗\" onConfirm={() => this.delete_user()} okText=\"确定\" cancelText=\"取消\">\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    icon={<DeleteOutlined />}\n                    danger\n                    disabled={this.props.disabled}\n                    loading={loading}\n                >\n                    删除所选用户\n                </Button>\n            </Popconfirm>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nimport { Card, Table, Tag } from 'antd';\n\nimport UserDeleteButton from './delete_button'\n\n\nexport default function UserInfo(props) {\n\n    return (\n        <div>\n            <UserInfoTable {...props} />\n        </div>\n    );\n}\n\n\n\nclass UserInfoTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            selectedRowKeys: [],\n        }\n\n        this.columns = [\n            {\n                title: 'ID',\n                key: 'id',\n                ellipsis: true,\n                render: (text, record) => (\n                    record.id\n                )\n            },\n            {\n                title: '名字',\n                key: 'name',\n                render: (text, record) => (\n                    record.username\n                )\n            },\n            {\n                title: '身份',\n                key: 'type',\n                render: (text, record) => {\n                    if (record.ifadmin === \"100\") {\n                        return (\n                            <Tag color=\"red\">管理员</Tag>\n                        )\n                    } else {\n                        return (\n                            <Tag color=\"geekblue\">普通用户</Tag>\n                        )\n                    }\n                }\n            },\n        ];\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    fetch() {\n        axios.post('/api',\n            {\n                api: 'user_info',\n            }).then(data => {\n                console.log(data.data.data)\n                this.setState({\n                    data: data.data.data,\n                    loading: false,\n                })\n            });\n    }\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    handleRefresh() {\n        this.fetch();\n        this.setState({\n            selectedRowKeys: [],\n        })\n    }\n\n    render() {\n        const { data, loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        return (\n            <div>\n                <Card title=\"用户一览\" >\n                    <div style={{ marginBottom: 16 }}>\n                        {<UserDeleteButton disabled={!hasSelected} server_id={this.props.server_id} url={this.props.url} selected={selectedRowKeys} onFresh={() => this.handleRefresh()} />}\n                    </div>\n                    <Table loading={loading} rowSelection={rowSelection} rowKey={record => record.id} columns={this.columns} dataSource={data} size=\"middle\" />\n                </Card>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nimport { PageHeader, Form, Input, Button, Checkbox, message } from 'antd';\n\nexport default class UserCreate extends React.Component {\n\n    send_regist(value) {\n        console.log(value)\n        axios.post('/api',\n            {\n                api: 'create_user',\n                ...value\n            }).then(data => {\n                console.log(data.data)\n                if (data.data.status === 0) {\n                    window.location.replace('/user')\n                } else {\n                    message.info('用户名重复，请重新设置！');\n                }\n            });\n    }\n\n    render() {\n        const layout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 8 },\n        };\n        const tailLayout = {\n            wrapperCol: { offset: 8, span: 16 },\n        };\n        return (\n            <div>\n                <PageHeader\n                    title=\"用户创建\"\n                    subTitle=\"创建新用户\"\n                />\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={(value) => this.send_regist(value)}\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                        rules={[{ required: true, message: '请输入你的用户名' }]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"密码\"\n                        name=\"password\"\n                        rules={[{ required: true, message: '请输入密码' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"请再次输入密码\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: '请确认你的密码',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('两次输入的密码不匹配');\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout} name=\"ifadmin\" valuePropName=\"checked\">\n                        <Checkbox>是否设置为管理员</Checkbox>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            创建\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport 'antd/dist/antd.css';\n\nimport { Layout, Breadcrumb } from 'antd';\n\nimport './index.css';\nimport { AllHeader } from '../../components/header'\nimport UserMenu from '../../components/user_menu'\nimport UserInfo from '../../components/user_info'\nimport UserCreate from '../../components/user_create'\n\n\nconst { Content } = Layout;\n\n\nexport default function UserPage() {\n    let { url } = useRouteMatch();\n\n    return (\n        <Layout>\n            <AllHeader number={'2'} />\n            <Layout>\n                <Switch>\n                    <Route exact path={`${url}`}>\n                        <UserMenu selectOptins='1' url={url} />\n                    </Route>\n                    <Route exact path={`${url}/creat`}>\n                        <UserMenu selectOptins='2' url={url} />\n                    </Route>\n                </Switch>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                    <Switch>\n                        <Route exact path={`${url}`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>用户一览</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserInfo />\n                            </Content>\n                        </Route>\n                        <Route exact path={`${url}/creat`}>\n                            <Breadcrumb style={{ margin: '16px 0' }}>\n                                <Breadcrumb.Item>用户创建</Breadcrumb.Item>\n                            </Breadcrumb>\n                            <Content\n                                className=\"site-layout-background\"\n                                style={{\n                                    padding: 24,\n                                    margin: 0,\n                                    minHeight: 280,\n                                }}\n                            >\n                                <UserCreate />\n                            </Content>\n                        </Route>\n                    </Switch>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, useLocation, Redirect } from 'react-router-dom'\n\nimport Index from '../pages/index'\nimport Login from '../pages/login'\nimport WelcomePage from '../pages/welcome'\nimport HomePage from '../pages/home'\nimport UserPage from '../pages/user'\n\nimport { Spin } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nimport './index.css';\n\n\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nexport default class AuthExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isAuthenticated: false,\n            isSend: false\n        }\n    }\n\n    componentDidMount() {\n        axios.post('/api',\n            {\n                api: 'check_login',\n            }).then(d => {\n                this.setState({\n                    isSend: true,\n                    isAuthenticated: d.data.isLogin\n                })\n            });\n    }\n\n    authenticate() {\n        this.setState({\n            isAuthenticated: true,\n            isSend: true\n        })\n        window.location.replace('/')\n    }\n\n    render() {\n        const { isAuthenticated, isSend } = this.state\n        return (\n            <Router>\n                <PrivateRoute path='/control' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <Index />\n                </PrivateRoute>\n                <PrivateRoute path='/user' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <UserPage />\n                </PrivateRoute>\n                <PrivateRoute exact path='/' isAuthenticated={isAuthenticated} isSend={isSend} >\n                    <HomePage />\n                </PrivateRoute>\n                <Route path='/login' >\n                    <Login Login={() => this.authenticate()} />\n                </Route>\n                <Route path='/welcome' >\n                    <WelcomePage />\n                </Route>\n            </Router>\n        );\n    }\n}\n\n\nfunction LoginPage(props) {\n    let history = useHistory();\n    let location = useLocation();\n\n    let { from } = location.state || { from: { pathname: \"/\" } };\n    let login = () => {\n        props.Login(() => {\n            history.replace(from);\n        });\n    };\n\n    return (\n        <div>\n            <p>You must log in to view the page at {from.pathname}</p>\n            <button onClick={login}>Log in</button>\n        </div>\n    );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n    console.log(rest.isSend)\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                rest.isSend ? (\n                    rest.isAuthenticated ? (\n                        children\n                    ) : (\n                            <Redirect\n                                to={{\n                                    pathname: \"/login\",\n                                    state: { from: location }\n                                }}\n                            />\n                        )\n                ) : (\n                        <div align=\"center\" style={{ \"marginTop\": \"20%\" }}>\n                            <Spin size=\"large\" />\n                        </div>\n\n                    )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './router';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}